[["index.html", "Chronic neck pain - Data Analysis Introduction Abstract Data Flow", " Chronic neck pain - Data Analysis Marc A.T. Teunis &amp; Martine Verwoerd Introduction Abstract Objective: To develop and internally validate a prognostic model to predict chronic pain after a new episode of acute- or subacute nonspecific idiopathic, non-traumatic neck pain in patients presenting to physiotherapy primary care, emphasizing modifiable biomedical, psychological, and social factors. Design: A prospective cohort study with a 6-month follow-up between January 2020 and March 2023. Setting: 30 physiotherapy primary care practices. Participants: Patients with a new presentation of nonspecific idiopathic, non-traumatic neck pain, with a duration lasting no longer than 12 weeks from onset. Baseline measures: Candidate prognostic variables collected from participants included age and sex, neck pain symptoms, work-related factors, general factors, psychological and behavioural factors, and the remaining factors: therapeutic relation and healthcare provider attitude. Outcome measures: Pain intensity at 6 weeks, 3 months, and 6 months on a Numeric Pain Rating Scale (NPRS) after inclusion. A NPRS score of ≥3 at each time point was used to define chronic neck pain. Results: Sixty-two (10%) of the 603 participants developed chronic neck pain. The prognostic factors in the final model were sex, pain intensity, reported pain in different body regions, headache since and before the neck pain, posture during work, employment status, illness beliefs about pain identity and recovery, treatment beliefs, distress, and self-efficacy. The model demonstrated an optimism-corrected Area Under the Curve (AUC) of 0.83 and a corrected R2 of 0.24. Calibration was deemed acceptable to good, as indicated by the calibration curve. The Hosmer-Lemeshow test yielded a p-value of 0.7167, indicating a good model fit. Conclusion: This model has the potential to obtain a valid prognosis for developing chronic pain after a new episode of acute—and subacute nonspecific idiopathic, non-traumatic neck pain. It includes mostly potentially modifiable factors for physiotherapy practice. External validation of this model is recommended. Key words: neck pain, prognostic model, modifiable factors, chronic pain. Data Flow The following diagram discribes how data files and Rmd scripts are connected. Raw data input file lives in ./data-raw, data output files are written to ./data and the .Rmd files live in ./Rmd. source( here::here( &quot;inst&quot;, &quot;data_flow.R&quot; ) ) data_flow Please also provide attribution to R itself citation() ## To cite R in publications use: ## ## R Core Team (2023). _R: A Language and Environment for Statistical ## Computing_. R Foundation for Statistical Computing, Vienna, Austria. ## &lt;https://www.R-project.org/&gt;. ## ## A BibTeX entry for LaTeX users is ## ## @Manual{, ## title = {R: A Language and Environment for Statistical Computing}, ## author = {{R Core Team}}, ## organization = {R Foundation for Statistical Computing}, ## address = {Vienna, Austria}, ## year = {2023}, ## url = {https://www.R-project.org/}, ## } ## ## We have invested a lot of time and effort in creating R, please cite it ## when using it for data analysis. See also &#39;citation(&quot;pkgname&quot;)&#39; for ## citing R packages. The {tidyvese} citation(package = &quot;tidyverse&quot;) ## To cite package &#39;tidyverse&#39; in publications use: ## ## Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, ## Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller ## E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, ## Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). &quot;Welcome to ## the tidyverse.&quot; _Journal of Open Source Software_, *4*(43), 1686. ## doi:10.21105/joss.01686 &lt;https://doi.org/10.21105/joss.01686&gt;. ## ## A BibTeX entry for LaTeX users is ## ## @Article{, ## title = {Welcome to the {tidyverse}}, ## author = {Hadley Wickham and Mara Averick and Jennifer Bryan and Winston Chang and Lucy D&#39;Agostino McGowan and Romain François and Garrett Grolemund and Alex Hayes and Lionel Henry and Jim Hester and Max Kuhn and Thomas Lin Pedersen and Evan Miller and Stephan Milton Bache and Kirill Müller and Jeroen Ooms and David Robinson and Dana Paige Seidel and Vitalie Spinu and Kohske Takahashi and Davis Vaughan and Claus Wilke and Kara Woo and Hiroaki Yutani}, ## year = {2019}, ## journal = {Journal of Open Source Software}, ## volume = {4}, ## number = {43}, ## pages = {1686}, ## doi = {10.21105/joss.01686}, ## } {tidymodels} citation(package = &quot;tidymodels&quot;) ## To cite package &#39;tidymodels&#39; in publications use: ## ## Kuhn et al., (2020). Tidymodels: a collection of packages for ## modeling and machine learning using tidyverse principles. ## https://www.tidymodels.org ## ## A BibTeX entry for LaTeX users is ## ## @Manual{, ## title = {Tidymodels: a collection of packages for modeling and machine learning using tidyverse principles.}, ## author = {Max Kuhn and Hadley Wickham}, ## url = {https://www.tidymodels.org}, ## year = {2020}, ## } "],["exploratory-data-analysis---raw-data.html", "Part 1 Exploratory Data Analysis - Raw Data 1.1 Packages 1.2 Load data 1.3 First glimpse at missingness 1.4 Select relevant variables 1.5 Exploratory Data Analysis 1.6 Write table with all labels 1.7 Deal with ‘work’ variables 1.8 Recode physical_activity 1.9 Write subsetted data to disk", " Part 1 Exploratory Data Analysis - Raw Data The scripts below are exploratory in nature and provide (insight in): missingness and patterns of missingness in the data distrutions of values for all variables in the data some quantitative measures of variables and descriptive statistics some exploratory plots 1.1 Packages The packages needed for this analysis. library(tidymodels) library(tidyverse) library(psfmi) library(miceadds) library(micemd) library(mitools) library(mice) library(naniar) library(skimr) #library(norm) ## warning ## This package has some major limitations #(for example, it does not work reliably when # the number of variables exceeds 30), #and has been superseded by the norm2 package. #detach(&quot;package:VIM&quot;, unload = TRUE) # I replaced the norm for norm2 package because of the above warning. #library(norm2) library(VIM) library(finalfit) library(haven) 1.2 Load data The data is loaded from the original data file, which is an SPSS .sav file. The package {haven} is used to parse the file in R. df_raw &lt;- read_sav( here::here( &quot;data-raw&quot;, &quot;D010&quot;, &quot;SPSS basis File results.sav&quot; ) ) |&gt; janitor::clean_names() 1.3 First glimpse at missingness Let’s explore the missing values first with a visual. naniar::vis_miss(df_raw) df_raw &lt;- df_raw |&gt; mutate(index = 1:nrow(df_raw)) 1.4 Select relevant variables To select only the variables we need, we make a dataframe containing only those. df_select &lt;- df_raw |&gt; dplyr::select(-c( # patient_code, attitude, pt_code, coping_active, coping_passive, percentage_active_coping, percentage_passive_coping, pain_6weeks, pain_categorized_6weeks, pain_3months, pain_catagorized_3months, pain_6months, pain_categorized_6months, index) ) |&gt; rename(sex = seks) df_select ## # A tibble: 603 × 35 ## patient_code sex age education education_level pain_intensity duration ## &lt;dbl&gt; &lt;dbl+lb&gt; &lt;dbl&gt; &lt;dbl+lbl&gt; &lt;dbl+lbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 498 2 [Vrou… 64 2 [mavo] 0 [Low eductio… 8 4 ## 2 766 2 [Vrou… 32 4 [havo] 0 [Low eductio… 7 2 ## 3 402 1 [Man] 51 1 [Basis] 0 [Low eductio… 7 5 ## 4 669 1 [Man] 29 7 [hbo] 1 [High educti… 5 10 ## 5 764 1 [Man] 35 7 [hbo] 1 [High educti… 4 5 ## 6 762 2 [Vrou… 46 8 [wo] 1 [High educti… 5 4 ## 7 401 1 [Man] 50 7 [hbo] 1 [High educti… 2 10 ## 8 763 2 [Vrou… 49 3 [vbo] 0 [Low eductio… 6 4 ## 9 497 1 [Man] 46 5 [vwo] 0 [Low eductio… 3 2 ## 10 496 1 [Man] 60 7 [hbo] 1 [High educti… 10 4 ## # ℹ 593 more rows ## # ℹ 28 more variables: recurrence &lt;dbl+lbl&gt;, wide_spread_pain &lt;dbl+lbl&gt;, ## # headache &lt;dbl+lbl&gt;, disability &lt;dbl&gt;, work &lt;dbl+lbl&gt;, ## # work_happiness &lt;dbl+lbl&gt;, work_satisfaction &lt;dbl+lbl&gt;, ## # posture_work &lt;dbl+lbl&gt;, physical_activity &lt;dbl+lbl&gt;, smoking &lt;dbl+lbl&gt;, ## # alcohol &lt;dbl+lbl&gt;, bmi &lt;dbl&gt;, sleep_quality &lt;dbl+lbl&gt;, ## # catastrophizing &lt;dbl&gt;, duration_beliefs &lt;dbl&gt;, concerns &lt;dbl&gt;, … names(df_select) ## [1] &quot;patient_code&quot; &quot;sex&quot; &quot;age&quot; ## [4] &quot;education&quot; &quot;education_level&quot; &quot;pain_intensity&quot; ## [7] &quot;duration&quot; &quot;recurrence&quot; &quot;wide_spread_pain&quot; ## [10] &quot;headache&quot; &quot;disability&quot; &quot;work&quot; ## [13] &quot;work_happiness&quot; &quot;work_satisfaction&quot; &quot;posture_work&quot; ## [16] &quot;physical_activity&quot; &quot;smoking&quot; &quot;alcohol&quot; ## [19] &quot;bmi&quot; &quot;sleep_quality&quot; &quot;catastrophizing&quot; ## [22] &quot;duration_beliefs&quot; &quot;concerns&quot; &quot;treatment_beliefs&quot; ## [25] &quot;depression&quot; &quot;kinesiophobia&quot; &quot;distress&quot; ## [28] &quot;coping&quot; &quot;identity_beliefs&quot; &quot;hypervigilance&quot; ## [31] &quot;self_efficacy&quot; &quot;relation&quot; &quot;painint_6weeks&quot; ## [34] &quot;painint_3months&quot; &quot;painint_6months&quot; #DT::datatable(df_select) 1.5 Exploratory Data Analysis In the section below, the data is explored by diving more into detail on the missingness, the data distributions and some descriptive statistics. 1.5.1 Exploratory plots First, we take a look at the data using a number of different graphical representations. ## males / females df_select |&gt; group_by(sex) |&gt; tally() |&gt; ggplot(aes(x = as_factor(sex), y = n)) + geom_col(show.legend = FALSE) ## age df_select |&gt; group_by(sex) |&gt; summarise(mean_age = mean(age, na.rm = TRUE)) |&gt; ggplot(aes(x = as_factor(sex), y = mean_age)) + geom_col(show.legend = FALSE) ## boxplot df_select |&gt; group_by(sex) |&gt; ggplot(aes(x = as_factor(sex), y = age)) + geom_boxplot(show.legend = FALSE) ## age distribution df_select |&gt; group_by(sex) |&gt; ggplot(aes(x = age)) + geom_density(aes(colour = as_factor(sex))) + theme_bw() ## pain intensity df_select |&gt; group_by(sex) |&gt; ggplot(aes(x = pain_intensity)) + geom_density(aes(colour = as_factor(sex)), size = 1) + theme_bw() ## dotplots df_select |&gt; group_by(sex, smoking) |&gt; ggplot(aes(x = as_factor(sex), y = disability)) + geom_point( aes(colour = as_factor(smoking)), position = &quot;jitter&quot;, shape = 1, alpha = 0.8) + theme_bw() + xlab(NULL) ## work df_select |&gt; group_by(work) |&gt; tally() ## # A tibble: 3 × 2 ## work n ## &lt;dbl+lbl&gt; &lt;int&gt; ## 1 1 [Ja] 501 ## 2 2 [Nee] 92 ## 3 NA 10 1.5.2 Missing values Some overall missingness inspections. Here we explore the numerical characteristics of the missingness of the data. # Are there missing values in the dataset? any_na(df_select) ## [1] TRUE # How many? n_miss(df_select) ## [1] 1098 prop_miss(df_select) ## [1] 0.05202559 # Which variables are affected? df_select %&gt;% is.na() %&gt;% colSums() |&gt; enframe() |&gt; ggplot(aes(x = reorder(as_factor(name), value), y = value)) + geom_point() + coord_flip() + xlab(&quot;variable in data&quot;) + ylab(&quot;Total number of NA&quot;) 1.5.3 Get number of missings per variable (n and %) miss_var_summary(df_select) ## # A tibble: 35 × 3 ## variable n_miss pct_miss ## &lt;chr&gt; &lt;int&gt; &lt;num&gt; ## 1 painint_3months 224 37.1 ## 2 painint_6months 212 35.2 ## 3 painint_6weeks 154 25.5 ## 4 posture_work 117 19.4 ## 5 work_happiness 115 19.1 ## 6 work_satisfaction 113 18.7 ## 7 education 16 2.65 ## 8 education_level 16 2.65 ## 9 identity_beliefs 14 2.32 ## 10 bmi 12 1.99 ## # ℹ 25 more rows miss_var_table(df_select) ## # A tibble: 17 × 3 ## n_miss_in_var n_vars pct_vars ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 0 3 8.57 ## 2 1 3 8.57 ## 3 2 2 5.71 ## 4 3 7 20 ## 5 4 1 2.86 ## 6 5 3 8.57 ## 7 8 2 5.71 ## 8 10 3 8.57 ## 9 12 2 5.71 ## 10 14 1 2.86 ## 11 16 2 5.71 ## 12 113 1 2.86 ## 13 115 1 2.86 ## 14 117 1 2.86 ## 15 154 1 2.86 ## 16 212 1 2.86 ## 17 224 1 2.86 # Get number of missings per observation (n and %) miss_case_summary(df_select) ## # A tibble: 603 × 3 ## case n_miss pct_miss ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 603 26 74.3 ## 2 602 14 40 ## 3 600 10 28.6 ## 4 42 9 25.7 ## 5 340 9 25.7 ## 6 24 8 22.9 ## 7 208 8 22.9 ## 8 510 8 22.9 ## 9 476 7 20 ## 10 18 6 17.1 ## # ℹ 593 more rows miss_case_table(df_select) ## # A tibble: 13 × 3 ## n_miss_in_case n_cases pct_cases ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 0 199 33.0 ## 2 1 111 18.4 ## 3 2 87 14.4 ## 4 3 129 21.4 ## 5 4 32 5.31 ## 6 5 17 2.82 ## 7 6 19 3.15 ## 8 7 1 0.166 ## 9 8 3 0.498 ## 10 9 2 0.332 ## 11 10 1 0.166 ## 12 14 1 0.166 ## 13 26 1 0.166 1.5.4 Some more plots on missingness This plot shows the number of missing values per individual variable. gg_miss_var(df_select) With this plot we can judge whether missingness is at random (or not). We see no obvious pattern in the missinness. naniar::vis_miss(df_select) + theme(axis.text.x = element_text(angle=80)) + coord_flip() Is the presence of missing values related with missings in other variables? gg_miss_upset(df_select) From this plot we see that much of the missingness is not accross many variables. There are however quite a number of cases (88) where missing cases are accross the vars painint_3months_NA, painint_6months_NA and painint_6 weeks_NA. This suggests some missingness not at randomm accross these variables and warrants a closer inspection. From the blog If you had concrete hypothesis about the impact of the presence of missing values in a certain variable on a target variable, you could test it like this: # add a variable to the dataset that indicates the missingness of paininit_6weeks per observation df_select_test &lt;- df_select %&gt;% mutate(missing_6weekspainit = is.na(painint_6weeks)) # get missing paininit_6weeks info for participants that have a therapist with &quot;Biopsychosocial (value 2)&quot; attitude missing_paininit_6weeks_male &lt;- df_select_test %&gt;% filter(sex == 1) %&gt;% pull(missing_6weekspainit) # get missing paininit_6weeks info for participants that have a therapist with &quot;Biomedical (value 1)&quot; attitude missing_paininit_6weeks_female &lt;- df_select_test %&gt;% filter(sex == 2) %&gt;% pull(missing_6weekspainit) #check whether the percentage of missings in missing_paininit_6weeks differ per level of sex. t.test( missing_paininit_6weeks_male, missing_paininit_6weeks_female ) ## ## Welch Two Sample t-test ## ## data: missing_paininit_6weeks_male and missing_paininit_6weeks_female ## t = 0.46638, df = 406.65, p-value = 0.6412 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -0.05664914 0.09188917 ## sample estimates: ## mean of x mean of y ## 0.2669903 0.2493703 There is no reason to assume (from this analysis) that the sex of a patient is correlated to having missing values for paininit_6weeks. Note that this is a hypothetical case, that might not make sense in this particular case, when you bring context into play. 1.6 Write table with all labels The .sav contains so-called SPSS labels that hold information about how values for dichotmous and discrete variables are encoded. WE can use this information by creating a table and use this table to recode some of the variables. data_label &lt;- t(as.data.frame(labelled::var_label(df_select))) data_label ## [,1] ## patient_code &quot;Physiotherapist code&quot; ## sex &quot;Seks&quot; ## age &quot;Age in years&quot; ## education &quot;Hoogstgenoten opleiding&quot; ## education_level &quot;Education level&quot; ## pain_intensity &quot;Pijnintensiteit&quot; ## duration &quot;Duur klachten&quot; ## recurrence &quot;Recifief &gt; 3 maanden geleden&quot; ## wide_spread_pain &quot;Pijn in andere plekken van het lichaam&quot; ## headache &quot;Ervaart u sinds u nekpijn heeft hoofdpijn&quot; ## disability &quot;Somscore PDI&quot; ## work &quot;Werkt u?&quot; ## work_happiness &quot;Gelukkig werk&quot; ## work_satisfaction &quot;Voldoening werk&quot; ## posture_work &quot;Wisselen houding&quot; ## physical_activity &quot;Nederlandse Norm Gezond Bewegen&quot; ## smoking &quot;Roken&quot; ## alcohol &quot;Alchol&quot; ## bmi &quot;BMI&quot; ## sleep_quality &quot;Ervaren slaapproblemen&quot; ## catastrophizing &quot;SOM PCS Catastrophing&quot; ## duration_beliefs &quot;Hoe lang denkt u dat uw nekpijn zal duren?&quot; ## concerns &quot;Hoe bezorgd bent u over uw nekpijn?&quot; ## treatment_beliefs &quot;Hoeveel denkt u dat uw behandeling kan helpen bij uw nekpijn?&quot; ## depression &quot;SOM score Depressie&quot; ## kinesiophobia &quot;SOM score Tampa&quot; ## distress &quot;SOM score Distress&quot; ## coping &quot;Actief / passieve coping&quot; ## identity_beliefs &quot;In welke mate vindt u dat u uw nekpijn begrijpt?&quot; ## hypervigilance &quot;SOM score PVAQ&quot; ## self_efficacy &quot;SOM score PSEQ&quot; ## relation &quot;Hoeveel vertrouwen heeft u in uw zogverlener/fysiotherapeut?&quot; ## painint_6weeks &quot;Pijnintensiteit&quot; ## painint_3months &quot;Pijnintensiteit&quot; ## painint_6months &quot;Pijnintensiteit&quot; df = df_select ind = 2 ## get labels and coding get_spss_coding &lt;- function(ind, df){ at &lt;- attributes(df[[ind]])$labels |&gt; enframe() at &lt;- map_df( .x = at, .f = as.character ) ## get column name col &lt;- names(df[ind]) at$var_name &lt;- col |&gt; as.character() ## return df return(at) } map_df( .x = 1:ncol(df_select), .f = get_spss_coding, df = df_select ) -&gt; labelling labelling ## # A tibble: 47 × 3 ## name value var_name ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Man 1 sex ## 2 Vrouw 2 sex ## 3 Basis 1 education ## 4 mavo 2 education ## 5 vbo 3 education ## 6 havo 4 education ## 7 vwo 5 education ## 8 mwo 6 education ## 9 hbo 7 education ## 10 wo 8 education ## # ℹ 37 more rows DT::datatable(labelling) ## remove sps-labels df_select &lt;- df_select |&gt; sjlabelled::remove_all_labels() 1.7 Deal with ‘work’ variables The variable ‘work’ need special attention. It’s value depends on some other work-related variables. We recode the ‘work’ variable as follows: Work 1 = yes / 2 = no When variable ‘work’ = 2, recode ‘work_happiness’, ‘work_satisfaction’ en ‘posture_work’ to value: 3 df_select |&gt; dplyr::select( work, work_happiness, work_satisfaction, posture_work ) -&gt; df_work map_df( .x = df_work, unique ) ## # A tibble: 3 × 4 ## work work_happiness work_satisfaction posture_work ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 1 1 1 ## 2 2 2 2 2 ## 3 NA NA NA NA df_work |&gt; dplyr::filter(work == 2) |&gt; naniar::vis_miss() df_select$work |&gt; unique() ## [1] 1 2 NA df_select$work_happiness |&gt; unique() ## [1] 1 2 NA df_select$work_satisfaction |&gt; unique() ## [1] 1 2 NA df_select$posture_work |&gt; unique() ## [1] 1 2 NA df_select &lt;- df_select |&gt; mutate( work_happiness = ifelse( work == 2, 3, work_happiness ) ) df_select &lt;- df_select |&gt; mutate( work_satisfaction = ifelse( work == 2, 3, work_satisfaction ) ) df_select &lt;- df_select |&gt; mutate( posture_work = ifelse( work == 2, 3, posture_work ) ) ## Check if NA&#39;s are replaced for &quot;NOT-APPLICABLE df_work |&gt; dplyr::filter(work == 2) |&gt; naniar::vis_miss() df_select |&gt; ggplot( aes( x = as_factor(work), y = as_factor(work_happiness) ) ) + geom_point(position = &quot;jitter&quot;, colour = &quot;darkblue&quot;) + toolboxr::rotate_axis_labels(&quot;x&quot;, angle = 90) -&gt; work_plot_happy work_plot_happy df_select |&gt; ggplot( aes( x = as_factor(work), y = as_factor(work_satisfaction) ) ) + geom_point(position = &quot;jitter&quot;, colour = &quot;darkblue&quot;) + toolboxr::rotate_axis_labels(&quot;x&quot;, angle = 90) -&gt; work_plot_satisfaction work_plot_satisfaction df_select |&gt; ggplot( aes( x = as_factor(work), y = as_factor(posture_work) ) ) + geom_point(position = &quot;jitter&quot;, colour = &quot;darkblue&quot;) + toolboxr::rotate_axis_labels(&quot;x&quot;, angle = 90) -&gt; work_plot_posture work_plot_posture cowplot::plot_grid( work_plot_happy, work_plot_posture, work_plot_satisfaction, ncol = 1 ) 1.8 Recode physical_activity The variable ‘physical_activity’ has 3 levels. In order to transform this into a dichotmous variable (with only two outcomes), we need some transformations. 1 = I do not move on one single day of the week 2 = I am active on 5 or more days a week 3 = I am in between score 1 and 2 Score 1 and 3 need to be recoded to value 1 (Not achieving the Dutch Healthy Exercise Norm) And score 2 needs to be recoded to 0 (Achieving the Dutch Healthy Exercise Norm ) df_select$physical_activity |&gt; unique() ## [1] 2 3 1 NA df_select &lt;- df_select |&gt; mutate( physical_activity_recoded = ifelse( (physical_activity == 1 | physical_activity == 3), 1, physical_activity), physical_activity_recoded = ifelse( physical_activity == 2, 0, physical_activity_recoded ) ) df_select |&gt; ggplot( aes( x = as_factor(physical_activity), y = as_factor(physical_activity_recoded) ) ) + geom_point(position = &quot;jitter&quot;, colour = &quot;darkblue&quot;) + toolboxr::rotate_axis_labels(&quot;x&quot;, angle = 20) df_select$physical_activity &lt;- df_select$physical_activity_recoded df_select &lt;- df_select |&gt; dplyr::select(-physical_activity_recoded) 1.9 Write subsetted data to disk As a final step we write the cleaned up subsetted file to disk for down the line use. write_rds( df_select, here::here( &quot;data&quot;, &quot;df_non_imp_select.rds&quot; ) ) ## and the labelling write_csv( labelling, here::here( &quot;data&quot;, &quot;labelling_and_coding_vars.csv&quot; ) ) "],["imputation-of-missing-values.html", "Part 2 Imputation of missing values 2.1 Packages 2.2 Data 2.3 Prepare datset for imputing 2.4 Convert all categorical vars to factors 2.5 Panel with all distributions", " Part 2 Imputation of missing values This section describes in detail how we dealt with imputation of missing values in the data. The overal method of imputation that was chosen is the multiple imputation methods, available in the {mice} R package. 2.1 Packages library(tidyverse) ## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr 1.1.4 ✔ readr 2.1.5 ## ✔ forcats 1.0.0 ✔ stringr 1.5.1 ## ✔ ggplot2 3.5.0 ✔ tibble 3.2.1 ## ✔ lubridate 1.9.3 ✔ tidyr 1.3.1 ## ✔ purrr 1.0.2 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors library(mice) ## ## Attaching package: &#39;mice&#39; ## ## The following object is masked from &#39;package:stats&#39;: ## ## filter ## ## The following objects are masked from &#39;package:base&#39;: ## ## cbind, rbind 2.2 Data Because we need to work with multiple versions of the dataset, I decided to change the data structure into a list. This makes it more traceable and more easy to inspect different datasets and keep track of changes. At the end of this analysis a single list object will have all the different versions of the datasets collected together and written to disk. ## raw data df_raw &lt;- haven::read_sav( here::here( &quot;data-raw&quot;, &quot;D010&quot;, &quot;SPSS basis File results.sav&quot; ) ) ## non-imputed - subset df_non_imp_select &lt;- readr::read_rds( here::here( &quot;data&quot;, &quot;df_non_imp_select.rds&quot; )) |&gt; as_tibble() names(df_non_imp_select) ## [1] &quot;patient_code&quot; &quot;sex&quot; &quot;age&quot; ## [4] &quot;education&quot; &quot;education_level&quot; &quot;pain_intensity&quot; ## [7] &quot;duration&quot; &quot;recurrence&quot; &quot;wide_spread_pain&quot; ## [10] &quot;headache&quot; &quot;disability&quot; &quot;work&quot; ## [13] &quot;work_happiness&quot; &quot;work_satisfaction&quot; &quot;posture_work&quot; ## [16] &quot;physical_activity&quot; &quot;smoking&quot; &quot;alcohol&quot; ## [19] &quot;bmi&quot; &quot;sleep_quality&quot; &quot;catastrophizing&quot; ## [22] &quot;duration_beliefs&quot; &quot;concerns&quot; &quot;treatment_beliefs&quot; ## [25] &quot;depression&quot; &quot;kinesiophobia&quot; &quot;distress&quot; ## [28] &quot;coping&quot; &quot;identity_beliefs&quot; &quot;hypervigilance&quot; ## [31] &quot;self_efficacy&quot; &quot;relation&quot; &quot;painint_6weeks&quot; ## [34] &quot;painint_3months&quot; &quot;painint_6months&quot; data &lt;- list( data_raw = df_raw, data_subset = df_non_imp_select ) rm(df_raw, df_non_imp_select) ## add metadata attr(data$data_subset, &quot;meta&quot;) &lt;- &quot;Data variable subset from raw data [file: &#39;./data-raw/D010/SPSS basis File results.sav&#39;]. Dataframe stored on disk as [file: &#39;./data/df_non_imp_select.rds&#39;]&quot; attr(data$data_raw, &quot;meta&quot;) &lt;- &quot;Raw unprocessed data as recieved from supplier [file: &#39;./data-raw/D010/SPSS basis File results.sav&#39;]&quot; ## get attributes attributes(data$data_raw) ## $class ## [1] &quot;tbl_df&quot; &quot;tbl&quot; &quot;data.frame&quot; ## ## $row.names ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ## [19] 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 ## [37] 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 ## [55] 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 ## [73] 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 ## [91] 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 ## [109] 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 ## [127] 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 ## [145] 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 ## [163] 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 ## [181] 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 ## [199] 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 ## [217] 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 ## [235] 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 ## [253] 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 ## [271] 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 ## [289] 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 ## [307] 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 ## [325] 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 ## [343] 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 ## [361] 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 ## [379] 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 ## [397] 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 ## [415] 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 ## [433] 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 ## [451] 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 ## [469] 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 ## [487] 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 ## [505] 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 ## [523] 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 ## [541] 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 ## [559] 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 ## [577] 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 ## [595] 595 596 597 598 599 600 601 602 603 ## ## $names ## [1] &quot;Patient_code&quot; &quot;PT_code&quot; ## [3] &quot;Seks&quot; &quot;Age&quot; ## [5] &quot;Education&quot; &quot;Education_level&quot; ## [7] &quot;Pain_intensity&quot; &quot;Duration&quot; ## [9] &quot;Recurrence&quot; &quot;WideSpreadPain&quot; ## [11] &quot;Headache&quot; &quot;Disability&quot; ## [13] &quot;Work&quot; &quot;Work_happiness&quot; ## [15] &quot;Work_Satisfaction&quot; &quot;Posture_work&quot; ## [17] &quot;Physical_activity&quot; &quot;Smoking&quot; ## [19] &quot;Alcohol&quot; &quot;BMI&quot; ## [21] &quot;Sleep_quality&quot; &quot;Catastrophizing&quot; ## [23] &quot;Duration_beliefs&quot; &quot;Concerns&quot; ## [25] &quot;Treatment_beliefs&quot; &quot;Depression&quot; ## [27] &quot;Kinesiophobia&quot; &quot;Distress&quot; ## [29] &quot;Coping&quot; &quot;Percentage_active_coping&quot; ## [31] &quot;Coping_active&quot; &quot;Percentage_passive_coping&quot; ## [33] &quot;Coping_passive&quot; &quot;Identity_beliefs&quot; ## [35] &quot;Hypervigilance&quot; &quot;Self_efficacy&quot; ## [37] &quot;Attitude&quot; &quot;Relation&quot; ## [39] &quot;Pain_6weeks&quot; &quot;Painint_6weeks&quot; ## [41] &quot;Pain_categorized_6weeks&quot; &quot;Pain_3months&quot; ## [43] &quot;Painint_3months&quot; &quot;Pain_catagorized_3months&quot; ## [45] &quot;Pain_6months&quot; &quot;Painint_6months&quot; ## [47] &quot;Pain_categorized_6months&quot; ## ## $meta ## [1] &quot;Raw unprocessed data as recieved from supplier [file: &#39;./data-raw/D010/SPSS basis File results.sav&#39;]&quot; 2.3 Prepare datset for imputing To prepare the data for imputation we need to carefully consider which variables to keep in the data and which variables we will use to get imputed values for missing values. In order to have a dataset that we can staert preparing, we copy the dataset so that we can keep the original data for comparison. ## copy datasets data$data_to_impute &lt;- data$data_subset names(data) ## [1] &quot;data_raw&quot; &quot;data_subset&quot; &quot;data_to_impute&quot; data_to_impute &lt;- data$data_to_impute names(data_to_impute) ## [1] &quot;patient_code&quot; &quot;sex&quot; &quot;age&quot; ## [4] &quot;education&quot; &quot;education_level&quot; &quot;pain_intensity&quot; ## [7] &quot;duration&quot; &quot;recurrence&quot; &quot;wide_spread_pain&quot; ## [10] &quot;headache&quot; &quot;disability&quot; &quot;work&quot; ## [13] &quot;work_happiness&quot; &quot;work_satisfaction&quot; &quot;posture_work&quot; ## [16] &quot;physical_activity&quot; &quot;smoking&quot; &quot;alcohol&quot; ## [19] &quot;bmi&quot; &quot;sleep_quality&quot; &quot;catastrophizing&quot; ## [22] &quot;duration_beliefs&quot; &quot;concerns&quot; &quot;treatment_beliefs&quot; ## [25] &quot;depression&quot; &quot;kinesiophobia&quot; &quot;distress&quot; ## [28] &quot;coping&quot; &quot;identity_beliefs&quot; &quot;hypervigilance&quot; ## [31] &quot;self_efficacy&quot; &quot;relation&quot; &quot;painint_6weeks&quot; ## [34] &quot;painint_3months&quot; &quot;painint_6months&quot; The id column ‘pation_code’ is a zero variance variable and does not serve any pupose in the imputation process, so here we delete it. ## remove ID var &#39;patient_code&#39; data$data_to_impute &lt;- data$data_to_impute |&gt; select(-patient_code) 2.4 Convert all categorical vars to factors For the imputation process we need the discrete variables to be factors. ## which are factors and which are continuous vars? should_be_factors &lt;- c( &quot;coping&quot;, &quot;sleep_quality&quot;, &quot;alcohol&quot;, &quot;smoking&quot;, &quot;physical_activity&quot;, &quot;posture_work&quot;, &quot;work_satisfaction&quot;, &quot;work_happiness&quot;, &quot;work&quot;, &quot;headache&quot;, &quot;wide_spread_pain&quot;, &quot;recurrence&quot;, &quot;education_level&quot;, &quot;education&quot;, &quot;sex&quot; ) ## copy dataset data$data_preprocessed &lt;- data$data_to_impute ## convert the categoricals to factors data$data_preprocessed &lt;- data$data_preprocessed %&gt;% mutate(across(should_be_factors, as_factor)) ## Warning: There was 1 warning in `mutate()`. ## ℹ In argument: `across(should_be_factors, as_factor)`. ## Caused by warning: ## ! Using an external vector in selections was deprecated in tidyselect 1.1.0. ## ℹ Please use `all_of()` or `any_of()` instead. ## # Was: ## data %&gt;% select(should_be_factors) ## ## # Now: ## data %&gt;% select(all_of(should_be_factors)) ## ## See &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;. ## check datatypes map_df( .x = data$data_preprocessed, .f = class ) |&gt; t() |&gt; enframe(name = &quot;var_name&quot;, value = &quot;var_type&quot;) -&gt; var_types 2.5 Panel with all distributions In a panel plot we can show all the distibutions which provide an idea on which variables are discrete and which are continuous. The panels can also be viewed as images in the ./img folder. ## function to plot a vectors histogram source( here::here( &quot;R&quot;, &quot;plot_distro.R&quot; ) ) ind_num &lt;- map_lgl( .x = data$data_preprocessed, .f = is.numeric ) num_vars &lt;- names(data$data_preprocessed)[ind_num] ## create histogram to establish var type / data distribution list_histograms &lt;- map2( .x = data$data_preprocessed[ ,ind_num], .y = num_vars, .f = plot_distro ) list_histograms ## $age ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 1 row containing non-finite outside the scale range ## (`stat_bin()`). ## ## $pain_intensity ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## ## $duration ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $disability ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 1 row containing non-finite outside the scale range ## (`stat_bin()`). ## ## $bmi ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 12 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $catastrophizing ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $duration_beliefs ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 10 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $concerns ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 8 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $treatment_beliefs ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 12 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $depression ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $kinesiophobia ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $distress ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $identity_beliefs ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 14 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $hypervigilance ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $self_efficacy ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 2 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $relation ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 10 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $painint_6weeks ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 154 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $painint_3months ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 224 rows containing non-finite outside the scale range ## (`stat_bin()`). ## ## $painint_6months ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 212 rows containing non-finite outside the scale range ## (`stat_bin()`). cowplot::plot_grid(plotlist = list_histograms) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 1 row containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 1 row containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 12 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 10 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 8 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 12 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 14 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 3 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 2 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 10 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 154 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 224 rows containing non-finite outside the scale range ## (`stat_bin()`). ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 212 rows containing non-finite outside the scale range ## (`stat_bin()`). ggsave(here::here(&quot;img&quot;, &quot;distros.png&quot;), height = 40, width = 40, dpi = 300) ggsave(here::here(&quot;img&quot;, &quot;distros.svg&quot;), height = 40, width = 40, dpi = 300) "],["imputation-of-missing-values-1.html", "Part 3 Imputation of missing values 3.1 Checking Missing Completely at Random (MCAR) 3.2 Define predictors to include in the imputations 3.3 Inspect the unique values of some of the variables 3.4 Using the MICE package for imputation of missing values 3.5 Create predictorMatrix for MICE 3.6 Calculate percentage missing data and cases 3.7 Running the imputations 3.8 Inspect the imputations 3.9 Check convergence 3.10 Check for plausible values of imputation 3.11 Checking the used predictor matrix 3.12 Running multiple regressions 3.13 Complete the dataset with this imputation 3.14 Visualize the imputations 3.15 Skimming the data 3.16 Add attitude 3.17 Save to disk", " Part 3 Imputation of missing values 3.1 Checking Missing Completely at Random (MCAR) https://bookdown.org/mwheymans/bookmi/missing-data-evaluation.html#missing-data-evaluation-in-r From the analysis above we can conclude that some of the variables: are on a continuous or discrete scale. We need to select those to assess MCAR. 3.1.1 Missingness pattern md.pattern(data$data_preprocessed) ## figure does not scale properly, TODO: needs a fix 3.2 Define predictors to include in the imputations ## select continuous and discrete var_selection &lt;- c( # &quot;patient_code&quot;, &quot;sex&quot;, &quot;age&quot;, &quot;education&quot;, &quot;education_level&quot;, &quot;pain_intensity&quot;, &quot;duration&quot;, &quot;recurrence&quot;, &quot;wide_spread_pain&quot;, &quot;headache&quot;, &quot;disability&quot;, &quot;work&quot;, # &quot;work_happiness&quot;, # &quot;work_satisfaction&quot;, # &quot;posture_work&quot;, &quot;physical_activity&quot;, &quot;smoking&quot;, &quot;alcohol&quot;, &quot;bmi&quot;, &quot;sleep_quality&quot;, &quot;catastrophizing&quot;, &quot;duration_beliefs&quot;, &quot;concerns&quot;, &quot;treatment_beliefs&quot;, &quot;depression&quot;, &quot;kinesiophobia&quot;, &quot;distress&quot;, &quot;coping&quot;, &quot;identity_beliefs&quot;, &quot;hypervigilance&quot;, &quot;self_efficacy&quot;, &quot;relation&quot;, &quot;painint_6weeks&quot;, &quot;painint_3months&quot;, &quot;painint_6months&quot; ) intersect(names(data$data_preprocessed), var_selection) ## [1] &quot;sex&quot; &quot;age&quot; &quot;education&quot; ## [4] &quot;education_level&quot; &quot;pain_intensity&quot; &quot;duration&quot; ## [7] &quot;recurrence&quot; &quot;wide_spread_pain&quot; &quot;headache&quot; ## [10] &quot;disability&quot; &quot;work&quot; &quot;physical_activity&quot; ## [13] &quot;smoking&quot; &quot;alcohol&quot; &quot;bmi&quot; ## [16] &quot;sleep_quality&quot; &quot;catastrophizing&quot; &quot;duration_beliefs&quot; ## [19] &quot;concerns&quot; &quot;treatment_beliefs&quot; &quot;depression&quot; ## [22] &quot;kinesiophobia&quot; &quot;distress&quot; &quot;coping&quot; ## [25] &quot;identity_beliefs&quot; &quot;hypervigilance&quot; &quot;self_efficacy&quot; ## [28] &quot;relation&quot; &quot;painint_6weeks&quot; &quot;painint_3months&quot; ## [31] &quot;painint_6months&quot; library(naniar) mcar_test(data = data$data_preprocessed[, var_selection]) ## # A tibble: 1 × 4 ## statistic df p.value missing.patterns ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 1681. 1578 0.0356 58 From ?mcar_test: Use Little’s (1988) test statistic to assess if data is missing completely at random (MCAR). The null hypothesis in this test is that the data is MCAR, and the test statistic is a chi-squared value. Based on the fact the p-value here is not &lt; 0.05, we can conclude that we cannot reject the NULL hypothesis, thus concluding that the missingness in the data is MCAR. 3.3 Inspect the unique values of some of the variables df_select_compare &lt;- data$data_preprocessed |&gt; dplyr::select( age, depression, duration, pain_intensity ) map( .x = df_select_compare, .f = unique ) df_select_compare_fct &lt;- df_select_compare |&gt; mutate( age = as_factor(age), depression = as_factor(depression), duration = as_factor(duration) ) map( .x = df_select_compare_fct, .f = levels ) map( .x = df_select_compare_fct, .f = unique ) rm(df_select_compare, df_select_compare_fct) 3.4 Using the MICE package for imputation of missing values Before we proceed with MICE, we need to remove the SPSS labels from the dataframe (see: https://stackoverflow.com/questions/62395629/error-t-haven-labelled-not-supported-while-attempting-mice-package-in-r) 3.5 Create predictorMatrix for MICE When we want to create a predictionMatrix automatically with a threshold for low correlating variables names(data$data_preprocessed) ## [1] &quot;sex&quot; &quot;age&quot; &quot;education&quot; ## [4] &quot;education_level&quot; &quot;pain_intensity&quot; &quot;duration&quot; ## [7] &quot;recurrence&quot; &quot;wide_spread_pain&quot; &quot;headache&quot; ## [10] &quot;disability&quot; &quot;work&quot; &quot;work_happiness&quot; ## [13] &quot;work_satisfaction&quot; &quot;posture_work&quot; &quot;physical_activity&quot; ## [16] &quot;smoking&quot; &quot;alcohol&quot; &quot;bmi&quot; ## [19] &quot;sleep_quality&quot; &quot;catastrophizing&quot; &quot;duration_beliefs&quot; ## [22] &quot;concerns&quot; &quot;treatment_beliefs&quot; &quot;depression&quot; ## [25] &quot;kinesiophobia&quot; &quot;distress&quot; &quot;coping&quot; ## [28] &quot;identity_beliefs&quot; &quot;hypervigilance&quot; &quot;self_efficacy&quot; ## [31] &quot;relation&quot; &quot;painint_6weeks&quot; &quot;painint_3months&quot; ## [34] &quot;painint_6months&quot; pred &lt;- quickpred(data$data_preprocessed, minpuc = 0.5, include = var_selection) rownames(pred) &lt;- colnames(pred) pred &lt;- pred |&gt; as.matrix() pheatmap::pheatmap(pred, cluster_rows = FALSE, cluster_cols = FALSE) 3.6 Calculate percentage missing data and cases When we want to have all variables in the dataset available for imputation One of the hyperperameters for the ‘mice’ function is m, the number of imputations: this should be at least the percentage of missing cases in the data. Let’s calulate ## manual calculation n_na &lt;- sum(is.na(data$data_preprocessed)) n_obs &lt;- nrow(data$data_preprocessed) * ncol(data$data_preprocessed) perc_mssing &lt;- 100 * (n_na/n_obs) perc_mssing |&gt; round(1) ## [1] 4 ## using naniar package / visual confirmation is always good vis_miss(data$data_preprocessed) ## missing cases pct_missing_cases &lt;- naniar::prop_miss_case(data$data_preprocessed) * 100 So 4.0093649% of the total data is missing. But 59.7014925% of the cases has at least one missing value. We set the m parameter to 75 3.7 Running the imputations In order to allow for running imputations over multiple cores of the computer, we use the {future} package. df_inspect &lt;- data$data_preprocessed ## get data types map_df( df_inspect, class ) |&gt; t() |&gt; as_tibble() -&gt; datatypes ## Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if ## `.name_repair` is omitted as of tibble 2.0.0. ## ℹ Using compatibility `.name_repair`. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. levels(df_inspect$physical_activity) ## [1] &quot;0&quot; &quot;1&quot; df_inspect$physical_activity |&gt; unique() ## [1] 0 1 &lt;NA&gt; ## Levels: 0 1 levels(df_inspect$work) ## [1] &quot;1&quot; &quot;2&quot; df_inspect$work |&gt; unique() ## [1] 1 2 &lt;NA&gt; ## Levels: 1 2 levels(df_inspect$work_happiness) ## [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; df_inspect$work_happiness |&gt; unique() ## [1] 1 2 3 &lt;NA&gt; ## Levels: 1 2 3 levels(df_inspect$posture_work) ## [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; df_inspect$posture_work |&gt; unique() ## [1] 1 2 3 &lt;NA&gt; ## Levels: 1 2 3 future::plan(&quot;multisession&quot;, workers = pmin(2L, future::availableCores())) data$mult_imp &lt;- futuremice( data$data_preprocessed, m = 75, maxiter = 10, parallelseed = 123, predictorMatrix = pred ) ## Warning: Number of logged events: 339 ## Warning: Number of logged events: 464 ## Warning: Number of logged events: 398 ## Warning: Number of logged events: 367 ## Warning: Number of logged events: 358 ## Warning: Number of logged events: 382 ## Warning: Number of logged events: 338 3.8 Inspect the imputations We can look at the imputed dataframe as an item in the ‘data’ list object. data$mult_imp ## Class: mids ## Number of multiple imputations: 75 ## Imputation methods: ## sex age education education_level ## &quot;&quot; &quot;pmm&quot; &quot;polyreg&quot; &quot;logreg&quot; ## pain_intensity duration recurrence wide_spread_pain ## &quot;&quot; &quot;pmm&quot; &quot;logreg&quot; &quot;logreg&quot; ## headache disability work work_happiness ## &quot;polyreg&quot; &quot;pmm&quot; &quot;logreg&quot; &quot;polyreg&quot; ## work_satisfaction posture_work physical_activity smoking ## &quot;polyreg&quot; &quot;polyreg&quot; &quot;logreg&quot; &quot;logreg&quot; ## alcohol bmi sleep_quality catastrophizing ## &quot;logreg&quot; &quot;pmm&quot; &quot;logreg&quot; &quot;pmm&quot; ## duration_beliefs concerns treatment_beliefs depression ## &quot;pmm&quot; &quot;pmm&quot; &quot;pmm&quot; &quot;pmm&quot; ## kinesiophobia distress coping identity_beliefs ## &quot;pmm&quot; &quot;pmm&quot; &quot;logreg&quot; &quot;pmm&quot; ## hypervigilance self_efficacy relation painint_6weeks ## &quot;pmm&quot; &quot;pmm&quot; &quot;pmm&quot; &quot;pmm&quot; ## painint_3months painint_6months ## &quot;pmm&quot; &quot;pmm&quot; ## PredictorMatrix: ## sex age education education_level pain_intensity duration ## sex 0 0 0 0 0 0 ## age 1 0 1 1 1 1 ## education 1 1 0 1 1 1 ## education_level 1 1 1 0 1 1 ## pain_intensity 0 0 0 0 0 0 ## duration 1 1 1 1 1 0 ## recurrence wide_spread_pain headache disability work ## sex 0 0 0 0 0 ## age 1 1 1 1 1 ## education 1 1 1 1 1 ## education_level 1 1 1 1 1 ## pain_intensity 0 0 0 0 0 ## duration 1 1 1 1 1 ## work_happiness work_satisfaction posture_work physical_activity ## sex 0 0 0 0 ## age 1 1 1 1 ## education 1 1 1 1 ## education_level 1 1 1 1 ## pain_intensity 0 0 0 0 ## duration 0 0 0 1 ## smoking alcohol bmi sleep_quality catastrophizing ## sex 0 0 0 0 0 ## age 1 1 1 1 1 ## education 1 1 1 1 1 ## education_level 1 1 1 1 1 ## pain_intensity 0 0 0 0 0 ## duration 1 1 1 1 1 ## duration_beliefs concerns treatment_beliefs depression ## sex 0 0 0 0 ## age 1 1 1 1 ## education 1 1 1 1 ## education_level 1 1 1 1 ## pain_intensity 0 0 0 0 ## duration 1 1 1 1 ## kinesiophobia distress coping identity_beliefs hypervigilance ## sex 0 0 0 0 0 ## age 1 1 1 1 1 ## education 1 1 1 1 1 ## education_level 1 1 1 1 1 ## pain_intensity 0 0 0 0 0 ## duration 1 1 1 1 1 ## self_efficacy relation painint_6weeks painint_3months ## sex 0 0 0 0 ## age 1 1 1 1 ## education 1 1 1 1 ## education_level 1 1 1 1 ## pain_intensity 0 0 0 0 ## duration 1 1 1 1 ## painint_6months ## sex 0 ## age 1 ## education 1 ## education_level 1 ## pain_intensity 0 ## duration 1 ## Number of logged events: 339 ## it im dep meth ## 1 1 1 painint_3months pmm ## 2 1 1 painint_6months pmm ## 3 1 2 painint_3months pmm ## 4 1 2 painint_6months pmm ## 5 1 2 painint_6months pmm ## 6 1 3 painint_3months pmm ## out ## 1 work2 ## 2 work2, posture_work3 ## 3 work2 ## 4 work2, posture_work2 ## 5 mice detected that your data are (nearly) multi-collinear.\\nIt applied a ridge penalty to continue calculations, but the results can be unstable.\\nDoes your dataset contain duplicates, linear transformation, or factors with unique respondent names? ## 6 work_happiness3 Printing the mult_imp object to the console will give you the used methods for each variable: It is suggested to let the MICE function decide the method and not change it. see also: https://stats.stackexchange.com/questions/204313/how-to-choose-which-imputation-to-use-to-replace-missing-values 3.9 Check convergence plot(data$mult_imp) From these plots we see that there is no evident trend in the estimation of the means over iterations, for any of the imputed variables. Therefore we can conclude that convergence was achieved and that the max. iteration of 10 is a valid setting for this imputation run. 3.10 Check for plausible values of imputation svg(filename = here::here(&quot;img&quot;, &quot;stripplot.svg&quot;)) stripplot(data$mult_imp) dev.off() ## quartz_off_screen ## 2 3.11 Checking the used predictor matrix future::plan(&quot;sequential&quot;) ## inspect the predictorMatrix pm_df &lt;- data$mult_imp$predictorMatrix |&gt; as.data.frame() rownames(pm_df) &lt;- colnames(pm_df) library(pheatmap) pheatmap(pm_df, cluster_rows = FALSE, cluster_cols = FALSE) 3.12 Running multiple regressions reg_multimp &lt;- with(data = data$mult_imp, lm(pain_intensity ~ sex * age)) summary(reg_multimp$analyses[[1]]) plot(reg_multimp$analyses[[1]]) #pool reg_pooled &lt;- pool(reg_multimp) #analyse pooled results - does the confidence interval include both directions? summary(reg_pooled, conf.int = TRUE, conf.level = 0.95) |&gt; as_tibble() |&gt; janitor::clean_names() |&gt; dplyr::filter(term != &quot;(Intercept)&quot;) |&gt; ggplot( aes(x = term, y = estimate) ) + geom_point(colour = &quot;red&quot;, size = 2) + geom_errorbar(aes(ymin=estimate-x2_5_percent, ymax=estimate+x97_5_percent), width=.2, position=position_dodge(.9)) + ylim(c(-0.5, 0.5)) + theme_bw() 3.13 Complete the dataset with this imputation #create imputed data to work with data$data_imputed &lt;- complete(data$mult_imp, 1) |&gt; as_tibble() naniar::vis_miss(data$data_imputed) ## add atttributes to imputed dataframe attr(data$data_imputed, &quot;meta&quot;) &lt;- &quot;Imputed data. Input data is data variable subset from data [file: &#39;./data/df_non_imp_select.rds&#39;]. Dataframe stored on disk as [file: &#39;./data/df_imp_select.rds&#39;]&quot; ## remove clutter rm(df_imp, df_multimp, reg_multimp, reg_pooled, pm_df, pred, var_selection, list_histograms) ## Warning in rm(df_imp, df_multimp, reg_multimp, reg_pooled, pm_df, pred, : ## object &#39;df_imp&#39; not found ## Warning in rm(df_imp, df_multimp, reg_multimp, reg_pooled, pm_df, pred, : ## object &#39;df_multimp&#39; not found ## Warning in rm(df_imp, df_multimp, reg_multimp, reg_pooled, pm_df, pred, : ## object &#39;reg_multimp&#39; not found ## Warning in rm(df_imp, df_multimp, reg_multimp, reg_pooled, pm_df, pred, : ## object &#39;reg_pooled&#39; not found 3.14 Visualize the imputations # Load the necessary libraries library(ggplot2) # Assuming &#39;data_with_missing&#39; is your dataset with missing values # and &#39;data_with_imputed&#39; is your dataset with imputed values ## dummies data_missing = data$data_preprocessed data_imputed = data$data_imputed #variable_name = names(data$data_preprocessed)[33] ## raw data plot # Plot for dataset with imputed values plot_missingness_points &lt;- function(df, var){ df |&gt; ggplot(aes(x = var, y = value)) + geom_point(aes(colour = is_missing), position = &quot;jitter&quot;, shape = 1) + ggtitle(var) } #df = joined - distro function plot_missingness_distro &lt;- function(df, var){ df |&gt; ggplot(aes(x = value)) + geom_density(aes(colour = var)) + ggtitle(var) + facet_wrap(~var) } #plot_missingness_distro(df = df) compare_datasets &lt;- function( variable_name, data_missing, data_imputed, plot_function) { # Create a bar plot to compare the distribution of the specified variable # Plot for dataset with missing values joined &lt;- tibble( missing = data_missing[[variable_name]], imputed = data_imputed[[variable_name]] ) |&gt; mutate( is_missing = is.na(missing) ) |&gt; pivot_longer( c(missing, imputed), names_to = &quot;var&quot;, values_to = &quot;value&quot;) plot_missingness &lt;- plot_function(joined, var = variable_name) return(plot_missingness) } var_names_preprocessed &lt;- names(data$data_preprocessed) var_names_imputed &lt;- names(data$data_imputed) var_names_iteration &lt;- var_names_preprocessed map( .x = var_names_iteration, .f = compare_datasets, data_missing = data$data_preprocessed, data_imputed = data$data_imputed, plot_function = plot_missingness_points ) -&gt; plot_points_missingness_list names(plot_points_missingness_list) &lt;- var_names_iteration plot_points_missingness_list map( .x = var_names_iteration, .f = compare_datasets, data_missing = data$data_preprocessed, data_imputed = data$data_imputed, plot_function = plot_missingness_distro ) -&gt; plot_distros_missingness_list names(plot_distros_missingness_list) &lt;- var_names_iteration plot_distros_missingness_list 3.15 Skimming the data data$data_imputed %&gt;% skimr::skim( pain_intensity, sex, age, painint_6weeks, alcohol, painint_3months, painint_6months ) Table 3.1: Data summary Name Piped data Number of rows 603 Number of columns 34 _______________________ Column type frequency: factor 2 numeric 5 ________________________ Group variables None Variable type: factor skim_variable n_missing complete_rate ordered n_unique top_counts sex 0 1 FALSE 2 2: 397, 1: 206 alcohol 0 1 FALSE 2 2: 474, 1: 129 Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist pain_intensity 0 1 5.93 1.86 1 5 6 7 10 ▁▃▆▇▁ age 0 1 44.51 15.64 18 31 44 56 85 ▇▇▇▅▂ painint_6weeks 0 1 2.54 2.61 0 0 2 5 10 ▇▃▂▂▁ painint_3months 0 1 2.05 2.65 0 0 0 4 9 ▇▂▂▂▁ painint_6months 0 1 1.25 2.35 0 0 0 1 10 ▇▁▁▁▁ 3.16 Add attitude We decided that the ‘attitude’ variable could not be imputed, so we romved that variable from the data and now we put it back. It is the only variable in the data that has missingness now. data$data_imputed$attitude &lt;- data$data_raw$Attitude # TODO: create merge based on patient code data$data_imputed &lt;- data$data_imputed |&gt; sjlabelled::remove_all_labels() data_final &lt;- data$data_imputed naniar::vis_miss(data$data_imputed) 3.17 Save to disk data |&gt; write_rds(here::here(&quot;data&quot;, &quot;data-list.rds&quot;)) write_rds(data$data_imputed, here::here(&quot;data&quot;, &quot;df_imputed.rds&quot;)) "],["statistical-exploration.html", "Part 4 Statistical exploration 4.1 Packages 4.2 Data 4.3 Global parameters 4.4 Statistical analysis methods and missing data 4.5 Reformat dataframe to stacked format 4.6 Create time variable 4.7 Recode time 4.8 Adding baseline as time=0 4.9 Carry forward 4.10 Rework the graph above to get cummulative pain intensity scores 4.11 Get individual lines for each patient 4.12 Write to disk as excel file and .rds R binary file. 4.13 Distribution of the data 4.14 Table: baseline characteristics of the included patients 4.15 Testing assumptions before backward analysis", " Part 4 Statistical exploration 4.1 Packages library(tidyverse) library(gt) library(webshot2) 4.2 Data The data is loaded from disk. ## non-imputed df_imp &lt;- read_rds(here::here(&quot;data&quot;, &quot;df_imputed.rds&quot;)) data_list &lt;- read_rds(here::here(&quot;data&quot;, &quot;data-list.rds&quot;)) df_non_imp &lt;- data_list$data_preprocessed ## add patient code df_non_imp$patient_code &lt;- data_list$data_subset$patient_code df_imp$patient_code &lt;- data_list$data_subset$patient_code 4.3 Global parameters cutoff_chronic &lt;- params$cutoff_chronic cutoff_painint_high &lt;- params$cutoff_painint_high 4.4 Statistical analysis methods and missing data 4.4.1 Distribution data and Table 1 For table 1 and the following analysis we have to create a new variable based on the variables: painint_6weeks, painint_3months and painint_6months. The new variable name: is_painint_chronic, with the outcome no = FALSE and yes = TRUE. (FALSE = no chronic pain, TRUE = chronic pain). TRUE = chronic pain = if the variables painint_6weeks, painint_3months and painint_6months are each 3 or higher ## new variable `chronic_pain` &amp; recode to dichotomous df_imp &lt;- df_imp |&gt; dplyr::mutate( painint_6weeks_high = ifelse(painint_6weeks &gt;= cutoff_painint_high, TRUE, FALSE), painint_3months_high = ifelse(painint_3months &gt;= cutoff_painint_high, TRUE, FALSE), painint_6months_high = ifelse(painint_6months &gt;= cutoff_painint_high, TRUE, FALSE) ) df_imp &lt;- df_imp |&gt; rowwise() |&gt; mutate( painint_high = sum(painint_6weeks_high, painint_3months_high, painint_6months_high) ) df_imp &lt;- df_imp |&gt; rowwise() |&gt; mutate( painint_total_score = sum(painint_6weeks, painint_3months, painint_6months) ) df_imp &lt;- df_imp |&gt; mutate( is_painint_chronic = ifelse( painint_high &gt;= 3, TRUE, FALSE ) ) 4.5 Reformat dataframe to stacked format df_imp_long &lt;- df_imp |&gt; pivot_longer( painint_6weeks:painint_6months, values_to = &quot;painint_score&quot;, names_to = &quot;painint_time&quot; ) 4.6 Create time variable ## seperate df_imp_long &lt;- df_imp_long |&gt; separate_wider_delim(painint_time, delim = &quot;_&quot;, names = c(NA, &quot;time&quot;)) 4.7 Recode time ## recode to days df_imp_long &lt;- df_imp_long |&gt; mutate( time_days = recode_factor( time, `6weeks` = 42, `3months` = 90, `6months` = 180)) ## write to disk write_rds(df_imp, file = here::here(&quot;data&quot;, &quot;imputed_with_attitude_and_chronic.rds&quot;)) ## add var to trace missingness df_imp_long &lt;- df_imp_long |&gt; mutate(is_chronic_missing = is.na(painint_total_score)) ## check with visual df_imp_long |&gt; ggplot(aes( x = painint_total_score, y = as_factor(is_painint_chronic) )) + geom_point(aes(colour = as_factor(is_painint_chronic)), position = &quot;jitter&quot;, shape = 1, alpha = 0.5) + scale_color_manual(values = c(&quot;darkblue&quot;, &quot;magenta&quot;)) + geom_vline( xintercept = cutoff_chronic-1, linetype = &quot;dashed&quot;, colour = &quot;darkred&quot;, linewidth = 1 ) + guides(color = guide_legend(override.aes = list(size = 3, shape = 1))) + xlab(&quot;Total painint score&quot;) + ylab(&quot;Recoded to chronic pain&quot;) + ggtitle(&quot;Chronic pain&quot;) + xlim(c(-2, 30)) -&gt; plot_chronic plot_chronic 4.8 Adding baseline as time=0 df_imp_long |&gt; group_by(patient_code) |&gt; reframe(painint_score = unique(pain_intensity)) |&gt; mutate(time_days = 0, time_days = as_factor(time_days)) -&gt; df_baseline df_baseline ## # A tibble: 603 × 3 ## patient_code painint_score time_days ## &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; ## 1 100 8 0 ## 2 101 6 0 ## 3 102 7 0 ## 4 103 7 0 ## 5 104 5 0 ## 6 106 2 0 ## 7 107 7 0 ## 8 108 3 0 ## 9 109 2 0 ## 10 110 6 0 ## # ℹ 593 more rows df_imp_long &lt;- full_join(df_imp_long, df_baseline) |&gt; relocate(is_chronic_missing) 4.9 Carry forward Due to the join we have missing values. We can use a crry forward for the last set of observations and fill in the NA for that value. We group by patient code. df_imp_long |&gt; arrange(patient_code) |&gt; tidyr::fill(is_chronic_missing:is_painint_chronic) -&gt; df_imp_long ## add &#39;baseling&#39; level to &#39;time&#39; df_imp_long &lt;- df_imp_long |&gt; mutate(time = as.character(time)) |&gt; mutate(time = ifelse(is.na(time), &quot;baseline&quot;, time)) ## get patient ids p_ids &lt;- df_imp_long$patient_code |&gt; unique() ## time has wrong level order df_imp_long$time_days |&gt; levels() ## [1] &quot;42&quot; &quot;90&quot; &quot;180&quot; &quot;0&quot; ## reoder levels df_imp_long &lt;- df_imp_long |&gt; mutate( time_days_relevel = fct_relevel( time_days, &quot;0&quot;, &quot;42&quot;, &quot;90&quot;, &quot;180&quot; )) ## pain over time df_imp_long |&gt; ggplot( aes(x = time_days_relevel, y = painint_score)) + geom_point(aes( colour = as_factor(patient_code)), show.legend = FALSE, position = &quot;jitter&quot;) + xlab(&quot;Time (days)&quot;) + ylab(&quot;Pain intensity score&quot;) + facet_wrap(~is_painint_chronic) -&gt; pain_over_time_chronic pain_over_time_chronic + citrulliner::theme_individual() ggsave(here::here(&quot;img&quot;, &quot;pain_over_time.png&quot;), height = 20, width = 30, units = &quot;cm&quot;, dpi = 300) ## calculate average trend df_imp_long_summary &lt;- df_imp_long |&gt; group_by(time_days_relevel, is_painint_chronic) |&gt; summarise(median_painint_score = median(painint_score)) df_imp_long_summary ## # A tibble: 8 × 3 ## # Groups: time_days_relevel [4] ## time_days_relevel is_painint_chronic median_painint_score ## &lt;fct&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 0 FALSE 6 ## 2 0 TRUE 7 ## 3 42 FALSE 2 ## 4 42 TRUE 6 ## 5 90 FALSE 0 ## 6 90 TRUE 6 ## 7 180 FALSE 0 ## 8 180 TRUE 5 df_imp_long |&gt; ggplot( aes(x = time_days_relevel, y = painint_score)) + geom_point(aes( colour = as_factor(patient_code)), show.legend = FALSE, position = &quot;jitter&quot;) + xlab(&quot;Time (days)&quot;) + ylab(&quot;Pain intensity score&quot;) + geom_line( data = df_imp_long_summary, aes(x = time_days_relevel, y = median_painint_score, group = is_painint_chronic), linewidth = 2) + facet_wrap(~is_painint_chronic) -&gt; painint_over_time_with_trend ggsave(plot = painint_over_time_with_trend + citrulliner::theme_individual(), here::here(&quot;img&quot;, &quot;pain_over_time_trend.png&quot;), height = 20, width = 20, units = &quot;cm&quot;, dpi = 300) 4.10 Rework the graph above to get cummulative pain intensity scores df_imp_pain_cumsum &lt;- df_imp_long |&gt; group_by(patient_code) %&gt;% arrange(time_days_relevel) |&gt; nest() df &lt;- df_imp_pain_cumsum$data[[1]] df ## # A tibble: 4 × 43 ## is_chronic_missing sex age education education_level pain_intensity ## &lt;lgl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 FALSE 1 32 6 0 8 ## 2 FALSE 1 32 6 0 8 ## 3 FALSE 1 32 6 0 8 ## 4 FALSE 1 32 6 0 8 ## # ℹ 37 more variables: duration &lt;dbl&gt;, recurrence &lt;fct&gt;, ## # wide_spread_pain &lt;fct&gt;, headache &lt;fct&gt;, disability &lt;dbl&gt;, work &lt;fct&gt;, ## # work_happiness &lt;fct&gt;, work_satisfaction &lt;fct&gt;, posture_work &lt;fct&gt;, ## # physical_activity &lt;fct&gt;, smoking &lt;fct&gt;, alcohol &lt;fct&gt;, bmi &lt;dbl&gt;, ## # sleep_quality &lt;fct&gt;, catastrophizing &lt;dbl&gt;, duration_beliefs &lt;dbl&gt;, ## # concerns &lt;dbl&gt;, treatment_beliefs &lt;dbl&gt;, depression &lt;dbl&gt;, ## # kinesiophobia &lt;dbl&gt;, distress &lt;dbl&gt;, coping &lt;fct&gt;, … ## get cumsum (into function) get_pain_cumsum &lt;- function(df){ df &lt;- df |&gt; arrange(time_days_relevel) |&gt; mutate(pain_cumsum = cumsum(painint_score)) return(df) } ## apply function df_imp_pain_cumsum |&gt; mutate( pain_cumsum = map( .x = data, .f = get_pain_cumsum) ) |&gt; unnest(pain_cumsum) -&gt; df_cumsum_long ## plot df_cumsum_long |&gt; ggplot( aes(x = time_days_relevel, y = pain_cumsum)) + # geom_line(aes(group = patient_code, colour = as_factor(patient_code)), show.legend = FALSE) + geom_point(aes(colour = as_factor(patient_code)), show.legend = FALSE, position = &quot;jitter&quot;) + xlab(&quot;Time (days)&quot;) + ylab(&quot;Cummulative pain intensity score&quot;) + facet_wrap(~is_painint_chronic) -&gt; pain_over_time_chronic_cumsum pain_over_time_chronic_cumsum ggsave(plot = pain_over_time_chronic_cumsum, filename = here::here(&quot;img&quot;, &quot;pain_over_time_cumsums.png&quot;), height = 50, width = 50, units = &quot;cm&quot;, dpi = 300) ## calculate average trend df_summary_cumsum &lt;- df_cumsum_long |&gt; group_by(time_days_relevel, is_painint_chronic) |&gt; summarise(median_painint_score_cumsums = median(pain_cumsum)) pain_over_time_chronic_cumsum + geom_point( data = df_summary_cumsum, aes(x = time_days_relevel, y = median_painint_score_cumsums), colour = &quot;darkred&quot;, size = 6) -&gt; pain_cumsums_over_time pain_cumsums_over_time ggsave(plot = pain_cumsums_over_time, filename = here::here(&quot;img&quot;, &quot;pain_over_time_cumsums_trend.png&quot;), height = 20, width = 20, units = &quot;cm&quot;, dpi = 300) 4.11 Get individual lines for each patient ## create two panels, one with chonic pain and one without. df_imp_long |&gt; dplyr::filter(patient_code %in% c(101:201)) |&gt; ggplot( aes(x = time_days_relevel, y = painint_score)) + geom_point(aes(colour = is_painint_chronic), show.legend = TRUE, size = 3) + xlab(&quot;Time (days)&quot;) + ylab(&quot;Pain intensity score&quot;) + geom_line( aes(x = time_days_relevel, y = painint_score, group = is_painint_chronic, colour = is_painint_chronic), linewidth = 2, show.legend = TRUE) + facet_wrap(~ patient_code) + ylim(-1, 10) + citrulliner::theme_individual() -&gt; painint_over_time_with_trend_individual painint_over_time_with_trend_individual painint_over_time_with_trend_individual |&gt; ggsave(filename = here::here(&quot;img&quot;, &quot;pain_over_time_trend_individual.png&quot;), height = 70, width = 70, units = &quot;cm&quot;, dpi = 300) 4.12 Write to disk as excel file and .rds R binary file. df_imp_long &lt;- df_imp_long |&gt; sjlabelled::remove_all_labels() openxlsx::write.xlsx( df_imp_long, file = here::here( &quot;data&quot;, &quot;df_imp_inferential_stats.xlsx&quot; ) ) readr::write_rds( df_imp_long, file = here::here( &quot;app&quot;, &quot;df_imp_long.rds&quot; ) ) 4.13 Distribution of the data For all variables at baseline and the outcome variables ‘Painint_6weeks’, ‘Painint_3months’ and ‘Painint_6months’ and ‘chronic_pain’. For the outcome variable chronic_pain the distribution difference between Man/Female, Pain_intensity (baseline) and Age. ## variable distributions df_complete &lt;- map_df( .x = df_imp_long, .f = as.numeric ) distros &lt;- map2( .x = df_complete, .y = names(df_complete), .f = plot_distro ) cowplot::plot_grid(plotlist = distros) ## chronic pain over sex df_complete |&gt; group_by(sex, is_painint_chronic) |&gt; tally() |&gt; ggplot(aes( x = as_factor(sex), y = n )) + geom_col(aes(fill = as_factor(sex)), position = &quot;dodge&quot;, show.legend = FALSE) + facet_wrap(~as_factor(is_painint_chronic)) + xlab(&quot;Gender&quot;) + ylab(&quot;Count&quot;) + ggtitle(&quot;Distrubution of gender over people\\nwith and without chronic pain&quot;) ## pain intensity over age df_imp_long |&gt; ggplot(aes( x = age, y = pain_intensity )) + geom_point(aes(colour = as_factor(sex)), position = &quot;jitter&quot;, shape = 1) #+ # facet_wrap(~pain_intensity) 4.14 Table: baseline characteristics of the included patients The candidate prognostic factors and the outcome variable chronic pain of patients with acute- or subacute nonspecific idiopathic, non-traumatic neck pain. ## function to calculate percentage missing of vector x missingness_perc &lt;- function(x){ missingness_sum &lt;- sum(is.na(x)) length_x &lt;- length(x) perc &lt;- (missingness_sum/length_x)*100 return(perc) } df_non_imp |&gt; sjlabelled::remove_all_labels() |&gt; group_by( sex ) |&gt; summarise( mean_age = mean(age, na.rm = TRUE), median_age = median(age, na.rm = TRUE), mean_bmi = mean(bmi, na.rm = TRUE), median_pain_6_weeks = median(painint_6weeks, na.rm = TRUE), missingness_6_weeks = missingness_perc(painint_6weeks), median_pain_3_months = median(painint_3months, na.rm = TRUE), missingness_3_months = missingness_perc(painint_3months), median_pain_6_months = median(painint_6months, na.rm = TRUE), missingness_6_months = missingness_perc(painint_6months) ) -&gt; df_table_1 df_table_1 ## # A tibble: 2 × 10 ## sex mean_age median_age mean_bmi median_pain_6_weeks missingness_6_weeks ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 47.3 47 25.7 2 26.7 ## 2 2 43.1 42 25.1 2 24.9 ## # ℹ 4 more variables: median_pain_3_months &lt;dbl&gt;, missingness_3_months &lt;dbl&gt;, ## # median_pain_6_months &lt;dbl&gt;, missingness_6_months &lt;dbl&gt; df_non_imp |&gt; group_by(sex, smoking, alcohol) |&gt; tally() -&gt; df_table_2 df_table_2 ## # A tibble: 11 × 4 ## # Groups: sex, smoking [6] ## sex smoking alcohol n ## &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;int&gt; ## 1 1 1 1 22 ## 2 1 1 2 162 ## 3 1 2 1 2 ## 4 1 2 2 19 ## 5 1 &lt;NA&gt; &lt;NA&gt; 1 ## 6 2 1 1 90 ## 7 2 1 2 252 ## 8 2 1 &lt;NA&gt; 2 ## 9 2 2 1 15 ## 10 2 2 2 36 ## 11 2 &lt;NA&gt; &lt;NA&gt; 2 This table includes also the variable pain intensity at 6 weeks, 3 months and 6 months. The outcome variable chronic pain is based on these three factors. Including the percentage (%) of the missing values. For the continuous variables a mean (SD) and median. For the continue variables I want to add an explanatory note with the scale and the abbreviations in the table. Is this possible to do this directly in R? To generate tables directly from R, see: https://gt.rstudio.com/ df_table_1 |&gt; gt() |&gt; tab_header( title = &quot;Study subjects information&quot;, subtitle = &quot;Patient details summary&quot;) -&gt; table_1_markup gtsave(table_1_markup, filename = here::here(&quot;data&quot;, &quot;table1.html&quot;)) gtsave(table_1_markup, filename = here::here(&quot;data&quot;, &quot;table1.docx&quot;)) df_table_2 |&gt; gt() |&gt; tab_header( title = &quot;Smoking and alcohol use&quot;, subtitle = &quot;Patient details summary&quot;) -&gt; table_2_markup gtsave(table_2_markup, filename = here::here(&quot;data&quot;, &quot;table2.html&quot;)) gtsave(table_2_markup, filename = here::here(&quot;data&quot;, &quot;table2.docx&quot;)) 4.15 Testing assumptions before backward analysis For the development of a prediction model and internal validation (and testing for assumptions). You need the following packages: We have to test the assumption for applying a backward analysis. Linearity, check whether the relationships between the predictor variables and the outcome variable are linear. (assessed through techniques like scatter plots, partial regression plots, or residual plots). 4.15.1 Scatter plot For example df_imp_long |&gt; ggplot(aes( x = age, y = painint_score )) + geom_point(aes(colour = as_factor(time_days))) "],["development-and-internal-validation-of-a-multivariable-prognostic-model-for-chronification-of-non-specific-neck-pain-in-physiotherapy.html", "Part 5 Development and internal validation of a multivariable prognostic model for chronification of non-specific neck pain in physiotherapy 5.1 Packages 5.2 Data load 5.3 Clean data and rename vars 5.4 Exploratory Data Analysis 5.5 Variabel analysis - Independent Predictive Capacity 5.6 Relevel dichotomous variables 5.7 Multivariable logistic regression analyses 5.8 AUC 5.9 Calibration curve 5.10 Result Calibration plot 5.11 Hoslem and Lemeshow 5.12 Model fit 5.13 Internal validation 5.14 Plot Corrected AUC 5.15 Results 5.16 Correcting the variables coefficients 5.17 Calibration in the Large", " Part 5 Development and internal validation of a multivariable prognostic model for chronification of non-specific neck pain in physiotherapy 5.1 Packages library(rms) library(foreign) library(dplyr) library(car) library(fpc) library(lmtest) library(pROC) library(tidyverse) library(haven) library(corrr) library(car) library(stats) library(base) library(broom) library(MASS) library(pROC) library(ResourceSelection) library(xfun) library(skimr) library(DataExplorer) 5.2 Data load We load the dataset that contains imputed missing values. To see the details on imputation method this package contains a vignette called ‘imputation’. To see this and other vignettes and code run: browseVignettes(package = &quot;painr&quot;) The dataset is loaded from folder ./data as an .rds R binary file. imputed_with_attitude_and_chronic &lt;- read_rds( here::here( &quot;data&quot;, &quot;imputed_with_attitude_and_chronic.rds&quot; ) ) 5.3 Clean data and rename vars We rename the variable wide_spread_pain to pidbr (pain in different body regions) imputed_with_attitude_and_chronic &lt;- imputed_with_attitude_and_chronic |&gt; rename(pidbr = wide_spread_pain) 5.4 Exploratory Data Analysis With summary() we can get an overview of the different variables summary(imputed_with_attitude_and_chronic) #&gt; sex age education education_level pain_intensity #&gt; 1:206 Min. :18.00 7 :208 0:321 Min. : 1.000 #&gt; 2:397 1st Qu.:31.00 6 :204 1:282 1st Qu.: 5.000 #&gt; Median :44.00 8 : 74 Median : 6.000 #&gt; Mean :44.51 2 : 42 Mean : 5.929 #&gt; 3rd Qu.:56.00 4 : 30 3rd Qu.: 7.000 #&gt; Max. :85.00 3 : 20 Max. :10.000 #&gt; (Other): 25 #&gt; duration recurrence pidbr headache disability work #&gt; Min. : 1.000 1:198 1:211 1:249 Min. : 0.000 1:508 #&gt; 1st Qu.: 2.000 2:405 2:392 2:284 1st Qu.: 1.000 2: 95 #&gt; Median : 4.000 3: 70 Median : 2.300 #&gt; Mean : 4.522 Mean : 2.726 #&gt; 3rd Qu.: 6.000 3rd Qu.: 4.100 #&gt; Max. :11.000 Max. :11.000 #&gt; #&gt; work_happiness work_satisfaction posture_work physical_activity smoking #&gt; 1:392 1:417 1:388 0:220 1:531 #&gt; 2:116 2: 91 2:120 1:383 2: 72 #&gt; 3: 95 3: 95 3: 95 #&gt; #&gt; #&gt; #&gt; #&gt; alcohol bmi sleep_quality catastrophizing duration_beliefs #&gt; 1:129 Min. :10.73 0:130 Min. : 0.000 Min. : 0.000 #&gt; 2:474 1st Qu.:22.51 1:473 1st Qu.: 1.000 1st Qu.: 2.000 #&gt; Median :24.66 Median : 3.000 Median : 3.000 #&gt; Mean :25.35 Mean : 4.587 Mean : 4.121 #&gt; 3rd Qu.:27.66 3rd Qu.: 7.000 3rd Qu.: 6.000 #&gt; Max. :51.06 Max. :24.000 Max. :10.000 #&gt; #&gt; concerns treatment_beliefs depression kinesiophobia #&gt; Min. : 0.000 Min. : 0.000 Min. : 0.000 Min. : 0.00 #&gt; 1st Qu.: 2.000 1st Qu.: 7.000 1st Qu.: 0.000 1st Qu.:12.00 #&gt; Median : 4.000 Median : 8.000 Median : 1.000 Median :15.00 #&gt; Mean : 3.954 Mean : 7.813 Mean : 2.471 Mean :16.55 #&gt; 3rd Qu.: 6.000 3rd Qu.: 9.000 3rd Qu.: 4.000 3rd Qu.:20.00 #&gt; Max. :10.000 Max. :10.000 Max. :20.000 Max. :40.00 #&gt; #&gt; distress coping identity_beliefs hypervigilance self_efficacy #&gt; Min. : 0.000 0:122 Min. : 0.000 Min. : 0 Min. : 0.00 #&gt; 1st Qu.: 1.000 1:481 1st Qu.: 5.000 1st Qu.:23 1st Qu.:10.00 #&gt; Median : 3.000 Median : 6.000 Median :31 Median :11.00 #&gt; Mean : 4.386 Mean : 6.111 Mean :31 Mean :10.31 #&gt; 3rd Qu.: 7.000 3rd Qu.: 8.000 3rd Qu.:38 3rd Qu.:12.00 #&gt; Max. :21.000 Max. :10.000 Max. :76 Max. :12.00 #&gt; #&gt; relation painint_6weeks painint_3months painint_6months #&gt; Min. : 0.000 Min. : 0.000 Min. :0.000 Min. : 0.000 #&gt; 1st Qu.: 8.000 1st Qu.: 0.000 1st Qu.:0.000 1st Qu.: 0.000 #&gt; Median : 9.000 Median : 2.000 Median :0.000 Median : 0.000 #&gt; Mean : 8.799 Mean : 2.541 Mean :2.048 Mean : 1.247 #&gt; 3rd Qu.:10.000 3rd Qu.: 5.000 3rd Qu.:4.000 3rd Qu.: 1.000 #&gt; Max. :10.000 Max. :10.000 Max. :9.000 Max. :10.000 #&gt; #&gt; attitude patient_code painint_6weeks_high painint_3months_high #&gt; Min. :1.000 Min. :100.0 Mode :logical Mode :logical #&gt; 1st Qu.:2.000 1st Qu.:330.5 FALSE:331 FALSE:391 #&gt; Median :2.000 Median :594.0 TRUE :272 TRUE :212 #&gt; Mean :1.758 Mean :570.2 #&gt; 3rd Qu.:2.000 3rd Qu.:811.5 #&gt; Max. :2.000 Max. :999.0 #&gt; NA&#39;s :49 #&gt; painint_6months_high painint_high painint_total_score is_painint_chronic #&gt; Mode :logical Min. :0.000 Min. : 0.000 Mode :logical #&gt; FALSE:476 1st Qu.:0.000 1st Qu.: 0.000 FALSE:541 #&gt; TRUE :127 Median :1.000 Median : 5.000 TRUE :62 #&gt; Mean :1.013 Mean : 5.836 #&gt; 3rd Qu.:2.000 3rd Qu.: 9.000 #&gt; Max. :3.000 Max. :28.000 #&gt; Using a more sophisticated workflow to do exploratory analysis can be done using the {skimr} package and the {DataExplorer} package. To get an automated report for this dataset, run the following code. The file can be found in the ./inst folder of this repo. imputed_with_attitude_and_chronic |&gt; create_report( output_file = &quot;eda_DataExplorer_imputed_with_attitude_and_chronic&quot;, output_dir = &quot;inst&quot;, y = &quot;painint_total_score&quot;, report_title = &quot;EDA painint_total_score&quot; ) 5.5 Variabel analysis - Independent Predictive Capacity Identifying the independent predictive capacity of the candidate prognostic variables at baseline and the existence or non-existence of chronic pain by univariate logistic regression analysis. Univariate logistic regression for continous variables Univariate analyses, model per variable with 95 confidence interval and OR Fitting the univariate logistic regression model Retrieving the coefficient and standard error for “Variable” Calculating the 95% confidence interval for “Variable” continuous_variables &lt;- c( &quot;depression&quot;, &quot;concerns&quot;, &quot;age&quot;, &quot;pain_intensity&quot;, &quot;duration&quot;, &quot;disability&quot;, &quot;bmi&quot;, &quot;catastrophizing&quot;, &quot;duration_beliefs&quot;, &quot;treatment_beliefs&quot;, &quot;kinesiophobia&quot;, &quot;distress&quot;, &quot;identity_beliefs&quot;, &quot;hypervigilance&quot;, &quot;relation&quot;, &quot;self_efficacy&quot; ) # Univariate analyses of the continuous variables univariate_analysis_continuous &lt;- function(variable, data) { formula &lt;- as.formula(paste(&quot;is_painint_chronic ~&quot;, variable)) model &lt;- glm(formula, data = data, family = binomial) summary_model &lt;- summary(model) coef_variable &lt;- summary_model$coefficients[variable, &quot;Estimate&quot;] std_error &lt;- summary_model$coefficients[variable, &quot;Std. Error&quot;] OR &lt;- exp(coef_variable) lower_limit &lt;- exp(coef_variable - 1.96 * std_error) upper_limit &lt;- exp(coef_variable + 1.96 * std_error) cat(&quot;Variable:&quot;, variable, &quot;\\n&quot;) cat(&quot;Odds Ratio (OR):&quot;, OR, &quot;\\n&quot;) cat(&quot;95% Betrouwbaarheidsinterval:&quot;, lower_limit, &quot;-&quot;, upper_limit, &quot;\\n\\n&quot;) } # Univariate analyses for all continuous variables for (variable in continuous_variables) { univariate_analysis_continuous(variable, imputed_with_attitude_and_chronic) } #&gt; Variable: depression #&gt; Odds Ratio (OR): 1.119845 #&gt; 95% Betrouwbaarheidsinterval: 1.0508 - 1.193426 #&gt; #&gt; Variable: concerns #&gt; Odds Ratio (OR): 1.233207 #&gt; 95% Betrouwbaarheidsinterval: 1.110387 - 1.369613 #&gt; #&gt; Variable: age #&gt; Odds Ratio (OR): 1.013596 #&gt; 95% Betrouwbaarheidsinterval: 0.9969062 - 1.030565 #&gt; #&gt; Variable: pain_intensity #&gt; Odds Ratio (OR): 1.360536 #&gt; 95% Betrouwbaarheidsinterval: 1.151988 - 1.60684 #&gt; #&gt; Variable: duration #&gt; Odds Ratio (OR): 1.113063 #&gt; 95% Betrouwbaarheidsinterval: 1.022841 - 1.211244 #&gt; #&gt; Variable: disability #&gt; Odds Ratio (OR): 1.173679 #&gt; 95% Betrouwbaarheidsinterval: 1.042149 - 1.321808 #&gt; #&gt; Variable: bmi #&gt; Odds Ratio (OR): 1.011411 #&gt; 95% Betrouwbaarheidsinterval: 0.953955 - 1.072327 #&gt; #&gt; Variable: catastrophizing #&gt; Odds Ratio (OR): 1.055757 #&gt; 95% Betrouwbaarheidsinterval: 1.001937 - 1.112468 #&gt; #&gt; Variable: duration_beliefs #&gt; Odds Ratio (OR): 1.333599 #&gt; 95% Betrouwbaarheidsinterval: 1.206493 - 1.474095 #&gt; #&gt; Variable: treatment_beliefs #&gt; Odds Ratio (OR): 0.842013 #&gt; 95% Betrouwbaarheidsinterval: 0.7434092 - 0.9536954 #&gt; #&gt; Variable: kinesiophobia #&gt; Odds Ratio (OR): 1.038989 #&gt; 95% Betrouwbaarheidsinterval: 0.9911072 - 1.089184 #&gt; #&gt; Variable: distress #&gt; Odds Ratio (OR): 1.122442 #&gt; 95% Betrouwbaarheidsinterval: 1.059899 - 1.188674 #&gt; #&gt; Variable: identity_beliefs #&gt; Odds Ratio (OR): 0.9137298 #&gt; 95% Betrouwbaarheidsinterval: 0.8203274 - 1.017767 #&gt; #&gt; Variable: hypervigilance #&gt; Odds Ratio (OR): 1.014424 #&gt; 95% Betrouwbaarheidsinterval: 0.9914855 - 1.037892 #&gt; #&gt; Variable: relation #&gt; Odds Ratio (OR): 0.8736736 #&gt; 95% Betrouwbaarheidsinterval: 0.744835 - 1.024798 #&gt; #&gt; Variable: self_efficacy #&gt; Odds Ratio (OR): 0.9228016 #&gt; 95% Betrouwbaarheidsinterval: 0.8348215 - 1.020054 5.6 Relevel dichotomous variables # Univariate logistic regression for categorized and dichotomous variables. # Set the &quot;1&quot; or &quot;0&quot; of the variable as a reference category. # Fitting the univariate logistic regression. # Calculating the OR and CI of this model. # Variable &quot;work&quot; imputed_with_attitude_and_chronic$work &lt;- relevel(imputed_with_attitude_and_chronic$work, ref = &quot;1&quot;) model1 &lt;- glm(is_painint_chronic ~ work, data = imputed_with_attitude_and_chronic, family = binomial) OR_work &lt;- exp(coef(model1)) CI_work &lt;- exp(confint(model1)) print(OR_work) #&gt; (Intercept) work2 #&gt; 0.09012876 2.95873016 print(CI_work) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.06476482 0.1219859 #&gt; work2 1.62175793 5.2614647 # Variable &quot;Education_level&quot; imputed_with_attitude_and_chronic$education_level &lt;- relevel(imputed_with_attitude_and_chronic$education_level, ref = &quot;1&quot;) model2 &lt;- glm(is_painint_chronic ~ education_level, data = imputed_with_attitude_and_chronic, family = binomial) OR_education_level &lt;- exp(coef(model2)) CI_education_level &lt;- exp(confint(model2)) print(OR_education_level) #&gt; (Intercept) education_level0 #&gt; 0.1058824 1.1557886 print(CI_education_level) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.06960165 0.1543606 #&gt; education_level0 0.68231415 1.9770643 # Variable &quot;recurrence&quot; imputed_with_attitude_and_chronic$recurrence &lt;- relevel(imputed_with_attitude_and_chronic$recurrence, ref = &quot;1&quot;) model3 &lt;- glm(is_painint_chronic ~ recurrence, data = imputed_with_attitude_and_chronic, family = binomial) OR_recurrence &lt;- exp(coef(model3)) CI_recurrence &lt;- exp(confint(model3)) print(OR_recurrence) #&gt; (Intercept) recurrence2 #&gt; 0.1061453 1.1190753 print(CI_recurrence) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.06400102 0.1656877 #&gt; recurrence2 0.64242847 2.0165613 # Variable - pain in different body regions imputed_with_attitude_and_chronic$pidbr &lt;- relevel(imputed_with_attitude_and_chronic$pidbr, ref = &quot;1&quot;) model4 &lt;- glm(is_painint_chronic ~ pidbr, data = imputed_with_attitude_and_chronic, family = binomial) OR_pidbr &lt;- exp(coef(model4)) CI_pidbr &lt;- exp(confint(model4)) print(OR_pidbr) #&gt; (Intercept) pidbr2 #&gt; 0.055000 2.719275 print(CI_pidbr) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.02818785 0.09603279 #&gt; pidbr2 1.43692355 5.60887542 # Variable &quot;headache&quot; imputed_with_attitude_and_chronic$headache &lt;- relevel(imputed_with_attitude_and_chronic$headache, ref = &quot;1&quot;) model5 &lt;- glm(is_painint_chronic ~ headache, data = imputed_with_attitude_and_chronic, family = binomial) OR_headache &lt;- exp(coef(model5)) CI_headache &lt;- exp(confint(model5)) print(OR_headache) #&gt; (Intercept) headache2 headache3 #&gt; 0.05957447 2.99496147 1.29120879 print(CI_headache) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.03313328 0.09821967 #&gt; headache2 1.63503675 5.80948533 #&gt; headache3 0.40522908 3.51473465 # Variable &quot;sex&quot; imputed_with_attitude_and_chronic$sex &lt;- relevel(imputed_with_attitude_and_chronic$sex, ref = &quot;1&quot;) model6 &lt;- glm(is_painint_chronic ~ sex, data = imputed_with_attitude_and_chronic, family = binomial) OR_sex &lt;- exp(coef(model6)) CI_sex &lt;- exp(confint(model6)) print(OR_sex) #&gt; (Intercept) sex2 #&gt; 0.07291667 1.88620549 print(CI_sex) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.04044007 0.1207022 #&gt; sex2 1.03994691 3.6326504 # Variable &quot;Work_happiness&quot; imputed_with_attitude_and_chronic$work_happiness &lt;- relevel(imputed_with_attitude_and_chronic$work_happiness, ref = &quot;1&quot;) model7 &lt;- glm(is_painint_chronic ~ work_happiness, data = imputed_with_attitude_and_chronic, family = binomial) OR_work_happiness &lt;- exp(coef(model7)) CI_work_happiness &lt;- exp(confint(model7)) print(OR_work_happiness) #&gt; (Intercept) work_happiness2 work_happiness3 #&gt; 0.09803922 0.65504587 2.72000000 print(CI_work_happiness) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.06807407 0.1365982 #&gt; work_happiness2 0.26069153 1.4324050 #&gt; work_happiness3 1.46836240 4.9348410 # Variable &quot;posture_work&quot; imputed_with_attitude_and_chronic$posture_work &lt;- relevel(imputed_with_attitude_and_chronic$posture_work, ref = &quot;1&quot;) model8 &lt;- glm(is_painint_chronic ~ posture_work, data = imputed_with_attitude_and_chronic, family = binomial) OR_posture_work &lt;- exp(coef(model8)) CI_posture_work &lt;- exp(confint(model8)) print(OR_posture_work) #&gt; (Intercept) posture_work2 posture_work3 #&gt; 0.08379888 1.32592593 3.18222222 print(CI_posture_work) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.05653886 0.1194222 #&gt; posture_work2 0.63368447 2.6177321 #&gt; posture_work3 1.69613786 5.8757114 # Variable &quot;work_satisfaction&quot; imputed_with_attitude_and_chronic$work_satisfaction &lt;- relevel(imputed_with_attitude_and_chronic$work_satisfaction, ref = &quot;1&quot;) model9 &lt;- glm(is_painint_chronic ~ work_satisfaction, data = imputed_with_attitude_and_chronic, family = binomial) OR_work_satisfaction &lt;- exp(coef(model9)) CI_work_satisfaction &lt;- exp(confint(model9)) print(OR_work_satisfaction) #&gt; (Intercept) work_satisfaction2 work_satisfaction3 #&gt; 0.09448819 0.74705882 2.82222222 print(CI_work_satisfaction) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.06599362 0.1309863 #&gt; work_satisfaction2 0.27609334 1.7080924 #&gt; work_satisfaction3 1.52768147 5.1022741 # Variable &quot;physical Activity&quot; imputed_with_attitude_and_chronic$physical_activity &lt;- relevel(imputed_with_attitude_and_chronic$physical_activity, ref = &quot;0&quot;) model10 &lt;- glm(is_painint_chronic ~ physical_activity, data = imputed_with_attitude_and_chronic, family = binomial) OR_physical_activity &lt;- exp(coef(model10)) CI_physical_activity &lt;- exp(confint(model10)) print(OR_physical_activity) #&gt; (Intercept) physical_activity1 #&gt; 0.100000 1.231672 print(CI_physical_activity) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.0611943 0.1542119 #&gt; physical_activity1 0.7119442 2.1964490 # Variable &quot;smoking&quot; imputed_with_attitude_and_chronic$smoking &lt;- relevel(imputed_with_attitude_and_chronic$smoking, ref = &quot;1&quot;) model11 &lt;- glm(is_painint_chronic ~ smoking, data = imputed_with_attitude_and_chronic, family = binomial) OR_smoking &lt;- exp(coef(model11)) CI_smoking &lt;- exp(confint(model11)) print(OR_smoking) #&gt; (Intercept) smoking2 #&gt; 0.1039501 1.9240000 print(CI_smoking) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.07674972 0.1375884 #&gt; smoking2 0.93299869 3.7113889 # Variable &quot;alcohol&quot; imputed_with_attitude_and_chronic$alcohol &lt;- relevel(imputed_with_attitude_and_chronic$alcohol, ref = &quot;1&quot;) model12 &lt;- glm(is_painint_chronic ~ alcohol, data = imputed_with_attitude_and_chronic, family = binomial) OR_alcohol &lt;- exp(coef(model12)) CI_alcohol &lt;- exp(confint(model12)) print(OR_alcohol) #&gt; (Intercept) alcohol2 #&gt; 0.1517857 0.6910736 print(CI_alcohol) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.08795751 0.2456099 #&gt; alcohol2 0.38745282 1.2836914 # Variable &quot;sleep quality&quot; imputed_with_attitude_and_chronic$sleep_quality &lt;- relevel(imputed_with_attitude_and_chronic$sleep_quality, ref = &quot;0&quot;) model13 &lt;- glm(is_painint_chronic ~ sleep_quality, data = imputed_with_attitude_and_chronic, family = binomial) OR_sleep_quality &lt;- exp(coef(model13)) CI_sleep_quality &lt;- exp(confint(model13)) print(OR_sleep_quality) #&gt; (Intercept) sleep_quality1 #&gt; 0.09243697 1.30741060 print(CI_sleep_quality) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.04696702 0.1635109 #&gt; sleep_quality1 0.68450097 2.7150269 # Variable &quot;coping&quot; imputed_with_attitude_and_chronic$coping &lt;- relevel(imputed_with_attitude_and_chronic$coping, ref = &quot;0&quot;) model14 &lt;- glm(is_painint_chronic ~ coping, data = imputed_with_attitude_and_chronic, family = binomial) OR_coping &lt;- exp(coef(model14)) CI_coping &lt;- exp(confint(model14)) print(OR_coping) #&gt; (Intercept) coping1 #&gt; 0.09909911 1.19682862 print(CI_coping) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.05027562 0.1756983 #&gt; coping1 0.62546659 2.4886925 # Variable &quot;attitude&quot; model15 &lt;- glm(is_painint_chronic ~ attitude, data = imputed_with_attitude_and_chronic, family = binomial) OR_attitude &lt;- exp(coef(model15)) CI_attitude &lt;- exp(confint(model15)) print(OR_attitude) #&gt; (Intercept) attitude #&gt; 0.1393033 0.9048630 print(CI_attitude) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.04214516 0.4017094 #&gt; attitude 0.49543972 1.7361149 5.7 Multivariable logistic regression analyses Due to multicollinearity in the work-related factors (happiness, satisfaction, and posture -&gt; leading to the outcome “3” = not working), a decision had to be made on which factor to include. We analysed different models with the individual work-related factors included. There was almost no difference in model performance. Because happiness and satisfaction align more with the other psychological factors, we have chosen to include the variable “posture_work”, thereby incorporating add different domain into our model for the final backward model analyses and internal validation. The candidate prognostic factor “attitude” does not have predictive value in het univariate analysis and does not emerge in the multivariate analysis in the formula with all the variables included. Additionally, there are many missing values, which cannot be imputed, as they pertain to the the therapist’s attitude. We now excluding this variable from the complete model development because internal validation does not proceed with these variables included. naniar::vis_miss(imputed_with_attitude_and_chronic) new_data &lt;- imputed_with_attitude_and_chronic |&gt; dplyr::select(-attitude) sum(is.na(new_data)) #&gt; [1] 0 full_model &lt;- glm ( data = imputed_with_attitude_and_chronic, is_painint_chronic ~ sex + age + pain_intensity + duration + pidbr + headache + disability + posture_work + physical_activity + smoking + alcohol + bmi + sleep_quality + catastrophizing + duration_beliefs + concerns + treatment_beliefs + depression + kinesiophobia + distress + coping + identity_beliefs + hypervigilance + self_efficacy + relation, family = &quot;binomial&quot; ) summary(full_model) #&gt; #&gt; Call: #&gt; glm(formula = is_painint_chronic ~ sex + age + pain_intensity + #&gt; duration + pidbr + headache + disability + posture_work + #&gt; physical_activity + smoking + alcohol + bmi + sleep_quality + #&gt; catastrophizing + duration_beliefs + concerns + treatment_beliefs + #&gt; depression + kinesiophobia + distress + coping + identity_beliefs + #&gt; hypervigilance + self_efficacy + relation, family = &quot;binomial&quot;, #&gt; data = imputed_with_attitude_and_chronic) #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) -7.856997 2.014554 -3.900 9.61e-05 *** #&gt; sex2 0.621459 0.381164 1.630 0.103012 #&gt; age 0.007465 0.011387 0.656 0.512097 #&gt; pain_intensity 0.257560 0.115333 2.233 0.025537 * #&gt; duration 0.055364 0.053130 1.042 0.297391 #&gt; pidbr2 0.809406 0.399367 2.027 0.042691 * #&gt; headache2 0.961491 0.380336 2.528 0.011471 * #&gt; headache3 -0.017406 0.611967 -0.028 0.977309 #&gt; disability 0.037170 0.091565 0.406 0.684787 #&gt; posture_work2 0.705919 0.421910 1.673 0.094297 . #&gt; posture_work3 1.523283 0.433345 3.515 0.000439 *** #&gt; physical_activity1 0.164670 0.348018 0.473 0.636095 #&gt; smoking2 0.563160 0.418249 1.346 0.178151 #&gt; alcohol2 -0.302294 0.368041 -0.821 0.411441 #&gt; bmi 0.019959 0.036600 0.545 0.585528 #&gt; sleep_quality1 -0.503916 0.421602 -1.195 0.231993 #&gt; catastrophizing -0.057224 0.048013 -1.192 0.233326 #&gt; duration_beliefs 0.238992 0.065878 3.628 0.000286 *** #&gt; concerns 0.183421 0.083870 2.187 0.028745 * #&gt; treatment_beliefs -0.219190 0.098053 -2.235 0.025389 * #&gt; depression 0.017426 0.065927 0.264 0.791528 #&gt; kinesiophobia -0.007644 0.039061 -0.196 0.844841 #&gt; distress 0.113553 0.056189 2.021 0.043290 * #&gt; coping1 0.459219 0.429294 1.070 0.284751 #&gt; identity_beliefs -0.163266 0.075735 -2.156 0.031102 * #&gt; hypervigilance 0.007581 0.016849 0.450 0.652743 #&gt; self_efficacy 0.137327 0.085300 1.610 0.107416 #&gt; relation -0.060274 0.123675 -0.487 0.626003 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; (Dispersion parameter for binomial family taken to be 1) #&gt; #&gt; Null deviance: 399.47 on 602 degrees of freedom #&gt; Residual deviance: 292.30 on 575 degrees of freedom #&gt; AIC: 348.3 #&gt; #&gt; Number of Fisher Scoring iterations: 6 #full_model_mterics_df &lt;- full_model |&gt; broom::tidy() #full_model_mterics_df &lt;- full_model_mterics_df |&gt; # mutate( # OR = exp(coef(estimate)) # ) backward_model &lt;- stepAIC(full_model, direction = &quot;backward&quot;) #&gt; Start: AIC=348.3 #&gt; is_painint_chronic ~ sex + age + pain_intensity + duration + #&gt; pidbr + headache + disability + posture_work + physical_activity + #&gt; smoking + alcohol + bmi + sleep_quality + catastrophizing + #&gt; duration_beliefs + concerns + treatment_beliefs + depression + #&gt; kinesiophobia + distress + coping + identity_beliefs + hypervigilance + #&gt; self_efficacy + relation #&gt; #&gt; Df Deviance AIC #&gt; - kinesiophobia 1 292.34 346.34 #&gt; - depression 1 292.37 346.37 #&gt; - disability 1 292.47 346.47 #&gt; - hypervigilance 1 292.51 346.51 #&gt; - physical_activity 1 292.53 346.53 #&gt; - relation 1 292.54 346.54 #&gt; - bmi 1 292.60 346.60 #&gt; - age 1 292.74 346.73 #&gt; - alcohol 1 292.96 346.96 #&gt; - duration 1 293.38 347.38 #&gt; - coping 1 293.50 347.50 #&gt; - sleep_quality 1 293.68 347.68 #&gt; - catastrophizing 1 293.76 347.76 #&gt; - smoking 1 294.03 348.03 #&gt; &lt;none&gt; 292.30 348.30 #&gt; - sex 1 295.09 349.09 #&gt; - self_efficacy 1 295.18 349.18 #&gt; - distress 1 296.31 350.31 #&gt; - pidbr 1 296.80 350.80 #&gt; - identity_beliefs 1 297.05 351.05 #&gt; - treatment_beliefs 1 297.10 351.10 #&gt; - concerns 1 297.26 351.26 #&gt; - pain_intensity 1 297.61 351.61 #&gt; - headache 2 301.00 353.00 #&gt; - posture_work 2 305.61 357.61 #&gt; - duration_beliefs 1 306.05 360.05 #&gt; #&gt; Step: AIC=346.34 #&gt; is_painint_chronic ~ sex + age + pain_intensity + duration + #&gt; pidbr + headache + disability + posture_work + physical_activity + #&gt; smoking + alcohol + bmi + sleep_quality + catastrophizing + #&gt; duration_beliefs + concerns + treatment_beliefs + depression + #&gt; distress + coping + identity_beliefs + hypervigilance + self_efficacy + #&gt; relation #&gt; #&gt; Df Deviance AIC #&gt; - depression 1 292.40 344.40 #&gt; - disability 1 292.49 344.49 #&gt; - hypervigilance 1 292.52 344.52 #&gt; - physical_activity 1 292.56 344.56 #&gt; - relation 1 292.57 344.57 #&gt; - bmi 1 292.64 344.64 #&gt; - age 1 292.75 344.75 #&gt; - alcohol 1 293.00 345.00 #&gt; - duration 1 293.40 345.40 #&gt; - coping 1 293.51 345.51 #&gt; - sleep_quality 1 293.74 345.74 #&gt; - catastrophizing 1 293.99 345.99 #&gt; - smoking 1 294.15 346.15 #&gt; &lt;none&gt; 292.34 346.34 #&gt; - sex 1 295.19 347.19 #&gt; - self_efficacy 1 295.42 347.42 #&gt; - distress 1 296.34 348.34 #&gt; - pidbr 1 296.98 348.98 #&gt; - identity_beliefs 1 297.06 349.06 #&gt; - treatment_beliefs 1 297.19 349.19 #&gt; - concerns 1 297.27 349.27 #&gt; - pain_intensity 1 297.81 349.81 #&gt; - headache 2 301.18 351.18 #&gt; - posture_work 2 305.65 355.65 #&gt; - duration_beliefs 1 306.05 358.05 #&gt; #&gt; Step: AIC=344.4 #&gt; is_painint_chronic ~ sex + age + pain_intensity + duration + #&gt; pidbr + headache + disability + posture_work + physical_activity + #&gt; smoking + alcohol + bmi + sleep_quality + catastrophizing + #&gt; duration_beliefs + concerns + treatment_beliefs + distress + #&gt; coping + identity_beliefs + hypervigilance + self_efficacy + #&gt; relation #&gt; #&gt; Df Deviance AIC #&gt; - disability 1 292.54 342.54 #&gt; - hypervigilance 1 292.58 342.58 #&gt; - physical_activity 1 292.61 342.61 #&gt; - relation 1 292.66 342.66 #&gt; - bmi 1 292.71 342.71 #&gt; - age 1 292.81 342.81 #&gt; - alcohol 1 293.07 343.07 #&gt; - duration 1 293.50 343.50 #&gt; - coping 1 293.53 343.53 #&gt; - sleep_quality 1 293.79 343.78 #&gt; - catastrophizing 1 294.01 344.01 #&gt; - smoking 1 294.28 344.28 #&gt; &lt;none&gt; 292.40 344.40 #&gt; - sex 1 295.19 345.19 #&gt; - self_efficacy 1 295.48 345.48 #&gt; - identity_beliefs 1 297.06 347.06 #&gt; - pidbr 1 297.10 347.09 #&gt; - treatment_beliefs 1 297.20 347.21 #&gt; - concerns 1 297.28 347.28 #&gt; - pain_intensity 1 297.81 347.81 #&gt; - headache 2 301.45 349.45 #&gt; - distress 1 300.69 350.69 #&gt; - posture_work 2 305.95 353.95 #&gt; - duration_beliefs 1 306.15 356.15 #&gt; #&gt; Step: AIC=342.54 #&gt; is_painint_chronic ~ sex + age + pain_intensity + duration + #&gt; pidbr + headache + posture_work + physical_activity + smoking + #&gt; alcohol + bmi + sleep_quality + catastrophizing + duration_beliefs + #&gt; concerns + treatment_beliefs + distress + coping + identity_beliefs + #&gt; hypervigilance + self_efficacy + relation #&gt; #&gt; Df Deviance AIC #&gt; - hypervigilance 1 292.73 340.73 #&gt; - physical_activity 1 292.75 340.75 #&gt; - relation 1 292.78 340.78 #&gt; - bmi 1 292.88 340.88 #&gt; - age 1 292.93 340.93 #&gt; - alcohol 1 293.24 341.24 #&gt; - coping 1 293.67 341.67 #&gt; - duration 1 293.67 341.67 #&gt; - sleep_quality 1 293.86 341.86 #&gt; - catastrophizing 1 294.06 342.06 #&gt; - smoking 1 294.35 342.35 #&gt; &lt;none&gt; 292.54 342.54 #&gt; - sex 1 295.26 343.26 #&gt; - self_efficacy 1 295.51 343.51 #&gt; - identity_beliefs 1 297.15 345.15 #&gt; - pidbr 1 297.18 345.18 #&gt; - treatment_beliefs 1 297.43 345.43 #&gt; - concerns 1 297.56 345.56 #&gt; - pain_intensity 1 299.29 347.29 #&gt; - headache 2 301.68 347.68 #&gt; - distress 1 301.42 349.42 #&gt; - posture_work 2 305.95 351.95 #&gt; - duration_beliefs 1 306.38 354.38 #&gt; #&gt; Step: AIC=340.73 #&gt; is_painint_chronic ~ sex + age + pain_intensity + duration + #&gt; pidbr + headache + posture_work + physical_activity + smoking + #&gt; alcohol + bmi + sleep_quality + catastrophizing + duration_beliefs + #&gt; concerns + treatment_beliefs + distress + coping + identity_beliefs + #&gt; self_efficacy + relation #&gt; #&gt; Df Deviance AIC #&gt; - physical_activity 1 292.96 338.96 #&gt; - relation 1 292.96 338.97 #&gt; - bmi 1 293.10 339.09 #&gt; - age 1 293.17 339.17 #&gt; - alcohol 1 293.42 339.42 #&gt; - coping 1 293.80 339.80 #&gt; - duration 1 293.85 339.85 #&gt; - catastrophizing 1 294.06 340.06 #&gt; - sleep_quality 1 294.12 340.12 #&gt; - smoking 1 294.53 340.53 #&gt; &lt;none&gt; 292.73 340.73 #&gt; - sex 1 295.31 341.31 #&gt; - self_efficacy 1 295.77 341.77 #&gt; - identity_beliefs 1 297.19 343.18 #&gt; - pidbr 1 297.21 343.21 #&gt; - treatment_beliefs 1 297.56 343.56 #&gt; - concerns 1 297.63 343.63 #&gt; - pain_intensity 1 299.41 345.41 #&gt; - headache 2 301.85 345.85 #&gt; - distress 1 303.14 349.14 #&gt; - posture_work 2 306.07 350.07 #&gt; - duration_beliefs 1 306.49 352.49 #&gt; #&gt; Step: AIC=338.96 #&gt; is_painint_chronic ~ sex + age + pain_intensity + duration + #&gt; pidbr + headache + posture_work + smoking + alcohol + bmi + #&gt; sleep_quality + catastrophizing + duration_beliefs + concerns + #&gt; treatment_beliefs + distress + coping + identity_beliefs + #&gt; self_efficacy + relation #&gt; #&gt; Df Deviance AIC #&gt; - relation 1 293.23 337.23 #&gt; - bmi 1 293.36 337.36 #&gt; - age 1 293.38 337.38 #&gt; - alcohol 1 293.75 337.76 #&gt; - coping 1 293.94 337.94 #&gt; - duration 1 294.06 338.06 #&gt; - catastrophizing 1 294.30 338.30 #&gt; - sleep_quality 1 294.33 338.33 #&gt; - smoking 1 294.80 338.80 #&gt; &lt;none&gt; 292.96 338.96 #&gt; - sex 1 295.60 339.60 #&gt; - self_efficacy 1 296.15 340.15 #&gt; - identity_beliefs 1 297.51 341.51 #&gt; - treatment_beliefs 1 297.74 341.74 #&gt; - concerns 1 297.78 341.78 #&gt; - pidbr 1 297.88 341.88 #&gt; - pain_intensity 1 299.89 343.89 #&gt; - headache 2 302.03 344.03 #&gt; - distress 1 303.26 347.26 #&gt; - posture_work 2 306.13 348.13 #&gt; - duration_beliefs 1 306.68 350.68 #&gt; #&gt; Step: AIC=337.23 #&gt; is_painint_chronic ~ sex + age + pain_intensity + duration + #&gt; pidbr + headache + posture_work + smoking + alcohol + bmi + #&gt; sleep_quality + catastrophizing + duration_beliefs + concerns + #&gt; treatment_beliefs + distress + coping + identity_beliefs + #&gt; self_efficacy #&gt; #&gt; Df Deviance AIC #&gt; - bmi 1 293.60 335.60 #&gt; - age 1 293.65 335.65 #&gt; - alcohol 1 293.96 335.96 #&gt; - coping 1 294.21 336.21 #&gt; - duration 1 294.25 336.25 #&gt; - sleep_quality 1 294.52 336.52 #&gt; - catastrophizing 1 294.52 336.52 #&gt; - smoking 1 295.12 337.12 #&gt; &lt;none&gt; 293.23 337.23 #&gt; - sex 1 295.83 337.83 #&gt; - self_efficacy 1 296.25 338.25 #&gt; - concerns 1 297.89 339.90 #&gt; - pidbr 1 298.00 340.00 #&gt; - identity_beliefs 1 298.43 340.43 #&gt; - pain_intensity 1 300.03 342.03 #&gt; - headache 2 302.17 342.17 #&gt; - treatment_beliefs 1 301.51 343.51 #&gt; - distress 1 303.46 345.46 #&gt; - posture_work 2 306.53 346.53 #&gt; - duration_beliefs 1 306.99 348.99 #&gt; #&gt; Step: AIC=335.6 #&gt; is_painint_chronic ~ sex + age + pain_intensity + duration + #&gt; pidbr + headache + posture_work + smoking + alcohol + sleep_quality + #&gt; catastrophizing + duration_beliefs + concerns + treatment_beliefs + #&gt; distress + coping + identity_beliefs + self_efficacy #&gt; #&gt; Df Deviance AIC #&gt; - age 1 294.09 334.09 #&gt; - alcohol 1 294.33 334.34 #&gt; - coping 1 294.55 334.55 #&gt; - duration 1 294.66 334.66 #&gt; - catastrophizing 1 294.86 334.86 #&gt; - sleep_quality 1 294.97 334.97 #&gt; - smoking 1 295.54 335.54 #&gt; &lt;none&gt; 293.60 335.60 #&gt; - sex 1 296.15 336.16 #&gt; - self_efficacy 1 296.63 336.63 #&gt; - concerns 1 298.31 338.31 #&gt; - pidbr 1 298.66 338.66 #&gt; - identity_beliefs 1 298.88 338.88 #&gt; - headache 2 302.37 340.37 #&gt; - pain_intensity 1 300.71 340.71 #&gt; - treatment_beliefs 1 301.99 341.99 #&gt; - distress 1 303.78 343.78 #&gt; - posture_work 2 306.88 344.88 #&gt; - duration_beliefs 1 307.00 347.01 #&gt; #&gt; Step: AIC=334.09 #&gt; is_painint_chronic ~ sex + pain_intensity + duration + pidbr + #&gt; headache + posture_work + smoking + alcohol + sleep_quality + #&gt; catastrophizing + duration_beliefs + concerns + treatment_beliefs + #&gt; distress + coping + identity_beliefs + self_efficacy #&gt; #&gt; Df Deviance AIC #&gt; - alcohol 1 294.82 332.82 #&gt; - coping 1 295.12 333.12 #&gt; - duration 1 295.13 333.13 #&gt; - catastrophizing 1 295.51 333.51 #&gt; - sleep_quality 1 295.51 333.51 #&gt; &lt;none&gt; 294.09 334.09 #&gt; - smoking 1 296.12 334.12 #&gt; - sex 1 296.42 334.42 #&gt; - self_efficacy 1 296.92 334.92 #&gt; - pidbr 1 299.05 337.05 #&gt; - concerns 1 299.46 337.46 #&gt; - identity_beliefs 1 299.54 337.54 #&gt; - headache 2 302.61 338.61 #&gt; - pain_intensity 1 301.78 339.78 #&gt; - treatment_beliefs 1 302.81 340.81 #&gt; - distress 1 303.85 341.85 #&gt; - duration_beliefs 1 307.11 345.11 #&gt; - posture_work 2 310.69 346.69 #&gt; #&gt; Step: AIC=332.82 #&gt; is_painint_chronic ~ sex + pain_intensity + duration + pidbr + #&gt; headache + posture_work + smoking + sleep_quality + catastrophizing + #&gt; duration_beliefs + concerns + treatment_beliefs + distress + #&gt; coping + identity_beliefs + self_efficacy #&gt; #&gt; Df Deviance AIC #&gt; - coping 1 295.75 331.75 #&gt; - duration 1 295.99 331.99 #&gt; - catastrophizing 1 296.22 332.22 #&gt; - sleep_quality 1 296.36 332.36 #&gt; &lt;none&gt; 294.82 332.82 #&gt; - smoking 1 296.85 332.85 #&gt; - self_efficacy 1 297.49 333.48 #&gt; - sex 1 297.93 333.93 #&gt; - identity_beliefs 1 299.81 335.81 #&gt; - concerns 1 300.02 336.02 #&gt; - pidbr 1 300.10 336.09 #&gt; - headache 2 303.53 337.53 #&gt; - pain_intensity 1 302.07 338.07 #&gt; - treatment_beliefs 1 303.57 339.57 #&gt; - distress 1 304.64 340.64 #&gt; - duration_beliefs 1 307.56 343.55 #&gt; - posture_work 2 311.81 345.81 #&gt; #&gt; Step: AIC=331.75 #&gt; is_painint_chronic ~ sex + pain_intensity + duration + pidbr + #&gt; headache + posture_work + smoking + sleep_quality + catastrophizing + #&gt; duration_beliefs + concerns + treatment_beliefs + distress + #&gt; identity_beliefs + self_efficacy #&gt; #&gt; Df Deviance AIC #&gt; - duration 1 296.97 330.97 #&gt; - sleep_quality 1 297.34 331.34 #&gt; - catastrophizing 1 297.51 331.51 #&gt; - smoking 1 297.73 331.73 #&gt; &lt;none&gt; 295.75 331.75 #&gt; - self_efficacy 1 298.75 332.76 #&gt; - sex 1 299.15 333.15 #&gt; - concerns 1 300.95 334.95 #&gt; - identity_beliefs 1 300.97 334.97 #&gt; - pidbr 1 300.98 334.98 #&gt; - headache 2 304.17 336.17 #&gt; - pain_intensity 1 303.17 337.17 #&gt; - treatment_beliefs 1 304.69 338.69 #&gt; - distress 1 305.05 339.05 #&gt; - duration_beliefs 1 308.49 342.48 #&gt; - posture_work 2 312.99 344.99 #&gt; #&gt; Step: AIC=330.97 #&gt; is_painint_chronic ~ sex + pain_intensity + pidbr + headache + #&gt; posture_work + smoking + sleep_quality + catastrophizing + #&gt; duration_beliefs + concerns + treatment_beliefs + distress + #&gt; identity_beliefs + self_efficacy #&gt; #&gt; Df Deviance AIC #&gt; - sleep_quality 1 298.33 330.33 #&gt; - smoking 1 298.74 330.74 #&gt; &lt;none&gt; 296.97 330.97 #&gt; - catastrophizing 1 299.09 331.09 #&gt; - self_efficacy 1 300.04 332.04 #&gt; - sex 1 300.20 332.20 #&gt; - pidbr 1 302.16 334.16 #&gt; - concerns 1 302.18 334.18 #&gt; - identity_beliefs 1 302.57 334.57 #&gt; - headache 2 306.05 336.05 #&gt; - pain_intensity 1 304.55 336.55 #&gt; - treatment_beliefs 1 305.75 337.75 #&gt; - distress 1 306.38 338.38 #&gt; - duration_beliefs 1 310.88 342.88 #&gt; - posture_work 2 314.79 344.79 #&gt; #&gt; Step: AIC=330.33 #&gt; is_painint_chronic ~ sex + pain_intensity + pidbr + headache + #&gt; posture_work + smoking + catastrophizing + duration_beliefs + #&gt; concerns + treatment_beliefs + distress + identity_beliefs + #&gt; self_efficacy #&gt; #&gt; Df Deviance AIC #&gt; - smoking 1 300.31 330.31 #&gt; &lt;none&gt; 298.33 330.33 #&gt; - catastrophizing 1 300.38 330.38 #&gt; - sex 1 300.92 330.92 #&gt; - self_efficacy 1 301.21 331.21 #&gt; - pidbr 1 303.45 333.45 #&gt; - concerns 1 303.46 333.46 #&gt; - identity_beliefs 1 303.75 333.75 #&gt; - headache 2 307.06 335.06 #&gt; - pain_intensity 1 306.00 336.00 #&gt; - distress 1 306.87 336.87 #&gt; - treatment_beliefs 1 307.03 337.03 #&gt; - duration_beliefs 1 311.49 341.49 #&gt; - posture_work 2 315.31 343.32 #&gt; #&gt; Step: AIC=330.31 #&gt; is_painint_chronic ~ sex + pain_intensity + pidbr + headache + #&gt; posture_work + catastrophizing + duration_beliefs + concerns + #&gt; treatment_beliefs + distress + identity_beliefs + self_efficacy #&gt; #&gt; Df Deviance AIC #&gt; - catastrophizing 1 302.15 330.15 #&gt; &lt;none&gt; 300.31 330.31 #&gt; - self_efficacy 1 302.93 330.93 #&gt; - sex 1 303.19 331.19 #&gt; - concerns 1 305.14 333.14 #&gt; - pidbr 1 305.82 333.82 #&gt; - identity_beliefs 1 306.00 334.00 #&gt; - headache 2 308.56 334.56 #&gt; - pain_intensity 1 308.70 336.70 #&gt; - treatment_beliefs 1 308.71 336.71 #&gt; - distress 1 309.30 337.30 #&gt; - duration_beliefs 1 313.20 341.20 #&gt; - posture_work 2 317.19 343.19 #&gt; #&gt; Step: AIC=330.15 #&gt; is_painint_chronic ~ sex + pain_intensity + pidbr + headache + #&gt; posture_work + duration_beliefs + concerns + treatment_beliefs + #&gt; distress + identity_beliefs + self_efficacy #&gt; #&gt; Df Deviance AIC #&gt; &lt;none&gt; 302.15 330.15 #&gt; - sex 1 304.88 330.88 #&gt; - concerns 1 305.40 331.40 #&gt; - self_efficacy 1 305.41 331.41 #&gt; - identity_beliefs 1 308.10 334.10 #&gt; - pidbr 1 308.22 334.22 #&gt; - headache 2 310.34 334.34 #&gt; - distress 1 309.57 335.57 #&gt; - pain_intensity 1 309.94 335.94 #&gt; - treatment_beliefs 1 310.91 336.91 #&gt; - duration_beliefs 1 315.02 341.02 #&gt; - posture_work 2 318.64 342.64 summary(backward_model) #&gt; #&gt; Call: #&gt; glm(formula = is_painint_chronic ~ sex + pain_intensity + pidbr + #&gt; headache + posture_work + duration_beliefs + concerns + treatment_beliefs + #&gt; distress + identity_beliefs + self_efficacy, family = &quot;binomial&quot;, #&gt; data = imputed_with_attitude_and_chronic) #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) -6.65374 1.29837 -5.125 2.98e-07 *** #&gt; sex2 0.56597 0.35162 1.610 0.107479 #&gt; pain_intensity 0.27423 0.10267 2.671 0.007565 ** #&gt; pidbr2 0.88672 0.38035 2.331 0.019736 * #&gt; headache2 0.87757 0.36108 2.430 0.015083 * #&gt; headache3 -0.08510 0.58802 -0.145 0.884935 #&gt; posture_work2 0.46378 0.40024 1.159 0.246551 #&gt; posture_work3 1.58390 0.38480 4.116 3.85e-05 *** #&gt; duration_beliefs 0.22295 0.06336 3.519 0.000434 *** #&gt; concerns 0.13027 0.07322 1.779 0.075225 . #&gt; treatment_beliefs -0.24623 0.08153 -3.020 0.002528 ** #&gt; distress 0.10033 0.03668 2.735 0.006229 ** #&gt; identity_beliefs -0.17109 0.07087 -2.414 0.015765 * #&gt; self_efficacy 0.13188 0.07682 1.717 0.086033 . #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; (Dispersion parameter for binomial family taken to be 1) #&gt; #&gt; Null deviance: 399.47 on 602 degrees of freedom #&gt; Residual deviance: 302.15 on 589 degrees of freedom #&gt; AIC: 330.15 #&gt; #&gt; Number of Fisher Scoring iterations: 6 backward_model |&gt; broom::tidy() #&gt; # A tibble: 14 × 5 #&gt; term estimate std.error statistic p.value #&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; #&gt; 1 (Intercept) -6.65 1.30 -5.12 0.000000298 #&gt; 2 sex2 0.566 0.352 1.61 0.107 #&gt; 3 pain_intensity 0.274 0.103 2.67 0.00756 #&gt; 4 pidbr2 0.887 0.380 2.33 0.0197 #&gt; 5 headache2 0.878 0.361 2.43 0.0151 #&gt; 6 headache3 -0.0851 0.588 -0.145 0.885 #&gt; 7 posture_work2 0.464 0.400 1.16 0.247 #&gt; 8 posture_work3 1.58 0.385 4.12 0.0000385 #&gt; 9 duration_beliefs 0.223 0.0634 3.52 0.000434 #&gt; 10 concerns 0.130 0.0732 1.78 0.0752 #&gt; 11 treatment_beliefs -0.246 0.0815 -3.02 0.00253 #&gt; 12 distress 0.100 0.0367 2.74 0.00623 #&gt; 13 identity_beliefs -0.171 0.0709 -2.41 0.0158 #&gt; 14 self_efficacy 0.132 0.0768 1.72 0.0860 ## look up calcualtion of OR from estimate and other model metrics odds_ratios &lt;- exp(coef(backward_model)) conf_int &lt;- confint(backward_model) conf_int_exp &lt;- exp(conf_int) results &lt;- data.frame(OddsRatio = odds_ratios, Lower95CI = conf_int_exp[, &quot;2.5 %&quot;], Upper95CI = conf_int_exp[, &quot;97.5 %&quot;]) print(results) #&gt; OddsRatio Lower95CI Upper95CI #&gt; (Intercept) 0.001289191 8.857723e-05 0.01462702 #&gt; sex2 1.761162794 9.028590e-01 3.61370233 #&gt; pain_intensity 1.315512715 1.082763e+00 1.62190191 #&gt; pidbr2 2.427161319 1.190556e+00 5.35031953 #&gt; headache2 2.405048685 1.210661e+00 5.02912669 #&gt; headache3 0.918423699 2.659645e-01 2.77353119 #&gt; posture_work2 1.590076355 7.059536e-01 3.42898788 #&gt; posture_work3 4.873907046 2.290224e+00 10.43194469 #&gt; duration_beliefs 1.249761645 1.105659e+00 1.41867676 #&gt; concerns 1.139138706 9.889557e-01 1.31893284 #&gt; treatment_beliefs 0.781745003 6.659186e-01 0.91872682 #&gt; distress 1.105534217 1.028728e+00 1.18846015 #&gt; identity_beliefs 0.842741709 7.316495e-01 0.96705986 #&gt; self_efficacy 1.140973980 9.893504e-01 1.33839592 5.8 AUC The discriminative ability of the prognostic model will be determined based on the Area Under the receiver operating characteristic Curve (AUC) # Prediction of the probabilities based on our model predicted_probs &lt;- predict(backward_model, newdata = imputed_with_attitude_and_chronic, type = &quot;response&quot;) roc_obj &lt;- roc(imputed_with_attitude_and_chronic$is_painint_chronic, predicted_probs) auc &lt;- auc(roc_obj) print(auc) #&gt; Area under the curve: 0.8589 ci &lt;- ci.auc(roc_obj) print(ci) #&gt; 95% CI: 0.8195-0.8982 (DeLong) 5.9 Calibration curve Measuring the predicted probability and the observed responses and creating a dataframe.Grouping predicted probabilities in deciles and calculation of the average predicted probability and actual percentage per group and plot the calibration curve. model_formula &lt;- is_painint_chronic ~ sex + pain_intensity + pidbr + headache + posture_work + duration_beliefs + concerns + treatment_beliefs + distress + identity_beliefs + self_efficacy # Model fitting in lrm. backward_model_lrm &lt;- lrm(model_formula, data = imputed_with_attitude_and_chronic, x = TRUE, y = TRUE) predicted_probs_lrm &lt;- predict(backward_model_lrm, type = &quot;fitted&quot;) val.prob( predicted_probs_lrm, as.numeric(imputed_with_attitude_and_chronic$is_painint_chronic), statloc = FALSE, logistic.cal = FALSE ) #&gt; Dxy C (ROC) R2 D D:Chi-sq #&gt; 7.178463e-01 8.589231e-01 3.076664e-01 1.597324e-01 9.731861e+01 #&gt; D:p U U:Chi-sq U:p Q #&gt; NA -3.316750e-03 -5.684342e-13 1.000000e+00 1.630491e-01 #&gt; Brier Intercept Slope Emax E90 #&gt; 7.695459e-02 5.161943e-14 1.000000e+00 3.097630e-01 4.991952e-02 #&gt; Eavg S:z S:p #&gt; 1.944093e-02 4.647755e-01 6.420922e-01 calibration_plot_lrm &lt;- calibrate(backward_model_lrm, method = &quot;boot&quot;, B = 200) plot(calibration_plot_lrm) #&gt; #&gt; n=603 Mean absolute error=0.022 Mean squared error=0.00172 #&gt; 0.9 Quantile of absolute error=0.052 5.10 Result Calibration plot The calibration plot revealed acceptable alignment for patients not developing chronic pain. However, for patients developing chronic pain, the model tended to overestimate the risk. Despite this, the calibration remained within acceptable limits. 5.11 Hoslem and Lemeshow Formally testing the goodness-of-fit using the Hosmer and Lemeshow. predicted_probs &lt;- predict( backward_model, newdata = imputed_with_attitude_and_chronic, type = &quot;response&quot;) gof &lt;- hoslem.test( imputed_with_attitude_and_chronic$is_painint_chronic, predicted_probs, g = 10) gof |&gt; broom::tidy() #&gt; # A tibble: 1 × 4 #&gt; statistic p.value parameter method #&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; #&gt; 1 8.07 0.427 8 Hosmer and Lemeshow goodness of fit (GOF) test x_sqrd &lt;- gof$statistic[1] p_value_gof &lt;- gof$p.value[1] Results: X-squared = 8.0693394, DF = 8, p-value = 0.4267263 We found a high p-value suggests there’s no statistically significant difference between observed and expected frequencies, indicating = that the model fits the data well. 5.12 Model fit Will be quantified as Nagelkerke’s R2 nagelkerkeR2 &lt;- function(model) { LL_0 &lt;- as.numeric(logLik(update(model, .~1))) LL_f &lt;- as.numeric(logLik(model)) R2 &lt;- (1 - exp((2/nrow(model$data))*(LL_0 - LL_f))) / (1 - exp(2*LL_0/nrow(model$data))) return(R2) } nagelkerkeR2(backward_model) #&gt; [1] 0.3076664 5.13 Internal validation Internal validation will be performed using bootstrap resampling to estimate the optimism-corrected AUC and to yield a measure of overfitting (i.e., the shrinkage factor). The shrinkage factor (a constant between 0 and 1) will be used to multiply the regression coefficient by. Generally, regression coefficients(and resulting predictions) are too extreme in case of overfitting, which is counteracted by the shrinking of regression coefficients. set.seed(12345) formula(backward_model) #&gt; is_painint_chronic ~ sex + pain_intensity + pidbr + headache + #&gt; posture_work + duration_beliefs + concerns + treatment_beliefs + #&gt; distress + identity_beliefs + self_efficacy new_model &lt;- lrm(formula(backward_model), data = imputed_with_attitude_and_chronic, x = TRUE, y = TRUE) validation_result &lt;- validate(new_model, method = &quot;boot&quot;, B = 1000) print(validation_result) #&gt; index.orig training test optimism index.corrected n #&gt; Dxy 0.7177 0.7424 0.6776 0.0648 0.6529 1000 #&gt; R2 0.3077 0.3431 0.2745 0.0686 0.2391 1000 #&gt; Intercept 0.0000 0.0000 -0.2660 0.2660 -0.2660 1000 #&gt; Slope 1.0000 1.0000 0.8274 0.1726 0.8274 1000 #&gt; Emax 0.0000 0.0000 0.0946 0.0946 0.0946 1000 #&gt; D 0.1597 0.1804 0.1411 0.0393 0.1204 1000 #&gt; U -0.0033 -0.0033 0.0049 -0.0082 0.0049 1000 #&gt; Q 0.1630 0.1837 0.1362 0.0475 0.1155 1000 #&gt; B 0.0770 0.0734 0.0802 -0.0069 0.0838 1000 #&gt; g 1.9372 2.1388 1.7481 0.3907 1.5465 1000 #&gt; gp 0.1264 0.1324 0.1200 0.0124 0.1140 1000 original_dxy &lt;- validation_result[&quot;Dxy&quot;, &quot;index.orig&quot;] optimism_dxy &lt;- validation_result[&quot;Dxy&quot;, &quot;optimism&quot;] corrected_dxy &lt;- original_dxy - optimism_dxy print(corrected_dxy) #&gt; [1] 0.6529234 original_auc &lt;- original_dxy / 2 + 0.5 optimism_auc &lt;- optimism_dxy / 2 corrected_auc &lt;- original_auc - optimism_auc print(corrected_auc) #&gt; [1] 0.8264617 5.14 Plot Corrected AUC roc_obj &lt;- roc(response = imputed_with_attitude_and_chronic$is_painint_chronic, predictor = predicted_probs) plot( roc_obj$specificities, roc_obj$sensitivities, type = &quot;l&quot;, xlim = c(1, 0), xlab = &quot;1 - Specificity&quot;, ylab = &quot;Sensitivity&quot;, main = &quot;ROC Curve&quot; ) ## Voor het artikel moet deze nog aangepast worden, maar dat lukt me nu niet. :() 5.15 Results Corrected AUC = 0.8264617 The difference from the original AUC was 0.86 on the entire dataset. The corrected is not much lower and the overfitting is therefore relativelylow. The model appears to have a robust discriminatory ability. 5.16 Correcting the variables coefficients Multiplying all the coefficients of our model by the shrinkage factor ‘sf’, and estimate the intercept, so that the average estimated probability is equal to the frequency of the outcome. predictiemodel &lt;- round(new_model$coef * 0.8274, 3) predictiemodel.lp &lt;- cbind(new_model$x) %*% predictiemodel[-1] predictiemodel[&quot;Intercept&quot;] &lt;- round( lrm.fit(y = imputed_with_attitude_and_chronic$is_painint_chronic, offset = predictiemodel.lp)$coef, 3 ) print (predictiemodel) #&gt; Intercept sex=2 pain_intensity pidbr=2 #&gt; -5.782 0.468 0.227 0.734 #&gt; headache=2 headache=3 posture_work=2 posture_work=3 #&gt; 0.726 -0.070 0.384 1.311 #&gt; duration_beliefs concerns treatment_beliefs distress #&gt; 0.184 0.108 -0.204 0.083 #&gt; identity_beliefs self_efficacy #&gt; -0.142 0.109 5.17 Calibration in the Large Checking whether the internally validated model gives the same average estimated probability as the average outcome (calibration in the large). Calculating the linear predictor for everyone in the database. Creating a function to calculate the risk: 1/(1+exp(-(LP))) Calculating the probability for everyone in the database and average probability. predictiemodel.linearpredictor &lt;- predictiemodel[1] + new_model$x %*% predictiemodel[-1] risk &lt;- function(lp) { risk &lt;- 1 / (1 + exp(-lp)) } risk.predicted &lt;- risk(predictiemodel.linearpredictor) mean(risk.predicted) #&gt; [1] 0.1028254 mean(imputed_with_attitude_and_chronic$is_painint_chronic) #&gt; [1] 0.1028192 Result = 0.1028 and 0.1028 The model is well calibrated in the large. "],["article-figures.html", "Part 6 Article figures 6.1 Packages 6.2 Data load 6.3 Clean data and rename variables 6.4 Exploratory Data Analysis 6.5 Variabel analysis 6.6 Graph of model metrics 6.7 Relevel dichotomous variables 6.8 Refactor code above to a more compact version 6.9 Univariate analysis on the categorical variables 6.10 Visualize model outcome 6.11 Panel plot univariate 6.12 Multivariable logistic regression analyses 6.13 Backward model 6.14 Visualize backward model 6.15 Panel plot with all models 6.16 Rework figure labels 6.17 Figures for paper 6.18 Adding level info to figure 6.19 GGpubr panel 6.20 Area Under the receiver operating characteristic Curve (AUC) 6.21 Calibration curve 6.22 Formally testing the goodness-of-fit using the Hosmer and Lemeshow. 6.23 Intermezzo - Linear Predictors", " Part 6 Article figures 6.1 Packages First, we need to load all the required packages. library(rms) ## Loading required package: Hmisc ## ## Attaching package: &#39;Hmisc&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## format.pval, units ## Warning in .recacheSubclasses(def@className, def, env): undefined subclass ## &quot;ndiMatrix&quot; of class &quot;replValueSp&quot;; definition not updated library(foreign) library (dplyr) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:Hmisc&#39;: ## ## src, summarize ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union library(haven) library(car) ## Loading required package: carData ## ## Attaching package: &#39;car&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## recode ## The following objects are masked from &#39;package:rms&#39;: ## ## Predict, vif library(fpc) library(lmtest) ## Loading required package: zoo ## ## Attaching package: &#39;zoo&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## as.Date, as.Date.numeric ## ## Attaching package: &#39;lmtest&#39; ## The following object is masked from &#39;package:rms&#39;: ## ## lrtest library(pROC) ## Type &#39;citation(&quot;pROC&quot;)&#39; for a citation. ## ## Attaching package: &#39;pROC&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## cov, smooth, var library(tidyverse) ## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── ## ✔ forcats 1.0.0 ✔ readr 2.1.5 ## ✔ ggplot2 3.5.0 ✔ stringr 1.5.1 ## ✔ lubridate 1.9.3 ✔ tibble 3.2.1 ## ✔ purrr 1.0.2 ✔ tidyr 1.3.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ✖ car::recode() masks dplyr::recode() ## ✖ purrr::some() masks car::some() ## ✖ dplyr::src() masks Hmisc::src() ## ✖ dplyr::summarize() masks Hmisc::summarize() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors library(haven) library(corrr) library(ggplot2) library(car) library(stats) library(base) library(dplyr) library(broom) library(MASS) ## ## Attaching package: &#39;MASS&#39; ## ## The following object is masked from &#39;package:dplyr&#39;: ## ## select library(pROC) library(ResourceSelection) ## ResourceSelection 0.3-6 2023-06-27 library(xfun) ## ## Attaching package: &#39;xfun&#39; ## ## The following objects are masked from &#39;package:base&#39;: ## ## attr, isFALSE library(rms) library(skimr) ## ## Attaching package: &#39;skimr&#39; ## ## The following object is masked from &#39;package:corrr&#39;: ## ## focus library(ggpubr) 6.2 Data load Here we load the build-in dataset imputed_with_attitude_and_chronic &lt;- read_rds( here::here( &quot;data&quot;, &quot;imputed_with_attitude_and_chronic.rds&quot; ) ) 6.2.1 Load labels for figures 6.3 Clean data and rename variables imputed_with_attitude_and_chronic &lt;- imputed_with_attitude_and_chronic |&gt; rename(pidbr = wide_spread_pain) ## pidbr = pain in different body regions 6.4 Exploratory Data Analysis summary(imputed_with_attitude_and_chronic) ## sex age education education_level pain_intensity ## 1:206 Min. :18.00 7 :208 0:321 Min. : 1.000 ## 2:397 1st Qu.:31.00 6 :204 1:282 1st Qu.: 5.000 ## Median :44.00 8 : 74 Median : 6.000 ## Mean :44.51 2 : 42 Mean : 5.929 ## 3rd Qu.:56.00 4 : 30 3rd Qu.: 7.000 ## Max. :85.00 3 : 20 Max. :10.000 ## (Other): 25 ## duration recurrence pidbr headache disability work ## Min. : 1.000 1:198 1:211 1:249 Min. : 0.000 1:508 ## 1st Qu.: 2.000 2:405 2:392 2:284 1st Qu.: 1.000 2: 95 ## Median : 4.000 3: 70 Median : 2.300 ## Mean : 4.522 Mean : 2.726 ## 3rd Qu.: 6.000 3rd Qu.: 4.100 ## Max. :11.000 Max. :11.000 ## ## work_happiness work_satisfaction posture_work physical_activity smoking ## 1:392 1:417 1:388 0:220 1:531 ## 2:116 2: 91 2:120 1:383 2: 72 ## 3: 95 3: 95 3: 95 ## ## ## ## ## alcohol bmi sleep_quality catastrophizing duration_beliefs ## 1:129 Min. :10.73 0:130 Min. : 0.000 Min. : 0.000 ## 2:474 1st Qu.:22.51 1:473 1st Qu.: 1.000 1st Qu.: 2.000 ## Median :24.66 Median : 3.000 Median : 3.000 ## Mean :25.35 Mean : 4.587 Mean : 4.121 ## 3rd Qu.:27.66 3rd Qu.: 7.000 3rd Qu.: 6.000 ## Max. :51.06 Max. :24.000 Max. :10.000 ## ## concerns treatment_beliefs depression kinesiophobia ## Min. : 0.000 Min. : 0.000 Min. : 0.000 Min. : 0.00 ## 1st Qu.: 2.000 1st Qu.: 7.000 1st Qu.: 0.000 1st Qu.:12.00 ## Median : 4.000 Median : 8.000 Median : 1.000 Median :15.00 ## Mean : 3.954 Mean : 7.813 Mean : 2.471 Mean :16.55 ## 3rd Qu.: 6.000 3rd Qu.: 9.000 3rd Qu.: 4.000 3rd Qu.:20.00 ## Max. :10.000 Max. :10.000 Max. :20.000 Max. :40.00 ## ## distress coping identity_beliefs hypervigilance self_efficacy ## Min. : 0.000 0:122 Min. : 0.000 Min. : 0 Min. : 0.00 ## 1st Qu.: 1.000 1:481 1st Qu.: 5.000 1st Qu.:23 1st Qu.:10.00 ## Median : 3.000 Median : 6.000 Median :31 Median :11.00 ## Mean : 4.386 Mean : 6.111 Mean :31 Mean :10.31 ## 3rd Qu.: 7.000 3rd Qu.: 8.000 3rd Qu.:38 3rd Qu.:12.00 ## Max. :21.000 Max. :10.000 Max. :76 Max. :12.00 ## ## relation painint_6weeks painint_3months painint_6months ## Min. : 0.000 Min. : 0.000 Min. :0.000 Min. : 0.000 ## 1st Qu.: 8.000 1st Qu.: 0.000 1st Qu.:0.000 1st Qu.: 0.000 ## Median : 9.000 Median : 2.000 Median :0.000 Median : 0.000 ## Mean : 8.799 Mean : 2.541 Mean :2.048 Mean : 1.247 ## 3rd Qu.:10.000 3rd Qu.: 5.000 3rd Qu.:4.000 3rd Qu.: 1.000 ## Max. :10.000 Max. :10.000 Max. :9.000 Max. :10.000 ## ## attitude patient_code painint_6weeks_high painint_3months_high ## Min. :1.000 Min. :100.0 Mode :logical Mode :logical ## 1st Qu.:2.000 1st Qu.:330.5 FALSE:331 FALSE:391 ## Median :2.000 Median :594.0 TRUE :272 TRUE :212 ## Mean :1.758 Mean :570.2 ## 3rd Qu.:2.000 3rd Qu.:811.5 ## Max. :2.000 Max. :999.0 ## NA&#39;s :49 ## painint_6months_high painint_high painint_total_score is_painint_chronic ## Mode :logical Min. :0.000 Min. : 0.000 Mode :logical ## FALSE:476 1st Qu.:0.000 1st Qu.: 0.000 FALSE:541 ## TRUE :127 Median :1.000 Median : 5.000 TRUE :62 ## Mean :1.013 Mean : 5.836 ## 3rd Qu.:2.000 3rd Qu.: 9.000 ## Max. :3.000 Max. :28.000 ## 6.5 Variabel analysis Identifying the independent predictive capacity of the candidate prognostic variables at baseline and the existence or non-existence of chronic pain by univariate logistic regression analysis. Univariate logistic regression for continous variables Univariate analyses, model per variable with 95 confidence interval and OR. Fitting the univariate logistic regression model. Retrieving the coefficient and standard error for “Variable”. Calculating the 95% confidence interval for “Variable” # List of continuous variables continuous_variables &lt;- c(&quot;depression&quot;, &quot;concerns&quot;, &quot;age&quot;, &quot;pain_intensity&quot;, &quot;duration&quot;, &quot;disability&quot;, &quot;bmi&quot;, &quot;catastrophizing&quot;, &quot;duration_beliefs&quot;, &quot;treatment_beliefs&quot;, &quot;kinesiophobia&quot;, &quot;distress&quot;, &quot;identity_beliefs&quot;, &quot;hypervigilance&quot;, &quot;relation&quot;, &quot;self_efficacy&quot;) # Function univariate analyses of the continuous variables ## Roxygen comments for man page #&#39; @title Run an univariate model for all continuous variables in the data #&#39; @param variable Name of variable as a character string #&#39; @param data Dataset &#39;imputed_with_attitude_and_chronic&#39; #&#39; @export univariate_analysis &lt;- function(variable, data, z_score = 1.96, conf_int = 95) { formula &lt;- as.formula(paste(&quot;is_painint_chronic ~&quot;, variable)) model &lt;- glm(formula, data = data, family = binomial) conf_int_upper_limit = paste0(&quot;conf_int_&quot;, conf_int) conf_int_lower_limit = paste0(&quot;conf_int_&quot;, (100-conf_int)) # get model meterics with broom model |&gt; broom::tidy() |&gt; mutate( conf_int_lower = exp(estimate - z_score * std.error), OR = exp(estimate), conf_int_upper = exp( estimate + z_score * std.error)) -&gt; df names(df)[c(6,8)] &lt;- c(conf_int_lower_limit, conf_int_upper_limit) df # remove Intercept term df &lt;- df[-1,] return(df) } ## test 1 univariate_analysis( data = imputed_with_attitude_and_chronic, variable = continuous_variables[1], z_score = 1.96, conf_int = 95) ## # A tibble: 1 × 8 ## term estimate std.error statistic p.value conf_int_5 OR conf_int_95 ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 depression 0.113 0.0325 3.49 0.000490 1.05 1.12 1.19 ## test 2 - different conf int univariate_analysis( data = imputed_with_attitude_and_chronic, variable = continuous_variables[1], z_score = 2.24, conf_int = 97.5) ## # A tibble: 1 × 8 ## term estimate std.error statistic p.value conf_int_2.5 OR conf_int_97.5 ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 depress… 0.113 0.0325 3.49 4.90e-4 1.04 1.12 1.20 ## Univariate analyses for all continuous variables ## Iterate over all variables, leave conf int to default = 95% df_univariate_continuous &lt;- map_df( .x = continuous_variables, .f = univariate_analysis, data = imputed_with_attitude_and_chronic ) df_univariate_continuous ## # A tibble: 16 × 8 ## term estimate std.error statistic p.value conf_int_5 OR conf_int_95 ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 depression 0.113 0.0325 3.49 4.90e-4 1.05 1.12 1.19 ## 2 concerns 0.210 0.0535 3.92 8.99e-5 1.11 1.23 1.37 ## 3 age 0.0135 0.00847 1.59 1.11e-1 0.997 1.01 1.03 ## 4 pain_inten… 0.308 0.0849 3.63 2.87e-4 1.15 1.36 1.61 ## 5 duration 0.107 0.0431 2.48 1.30e-2 1.02 1.11 1.21 ## 6 disability 0.160 0.0606 2.64 8.27e-3 1.04 1.17 1.32 ## 7 bmi 0.0113 0.0298 0.380 7.04e-1 0.954 1.01 1.07 ## 8 catastroph… 0.0543 0.0267 2.03 4.21e-2 1.00 1.06 1.11 ## 9 duration_b… 0.288 0.0511 5.63 1.77e-8 1.21 1.33 1.47 ## 10 treatment_… -0.172 0.0635 -2.71 6.81e-3 0.743 0.842 0.954 ## 11 kinesiopho… 0.0382 0.0241 1.59 1.12e-1 0.991 1.04 1.09 ## 12 distress 0.116 0.0293 3.95 7.86e-5 1.06 1.12 1.19 ## 13 identity_b… -0.0902 0.0550 -1.64 1.01e-1 0.820 0.914 1.02 ## 14 hypervigil… 0.0143 0.0117 1.23 2.20e-1 0.991 1.01 1.04 ## 15 relation -0.135 0.0814 -1.66 9.71e-2 0.745 0.874 1.02 ## 16 self_effic… -0.0803 0.0511 -1.57 1.16e-1 0.835 0.923 1.02 6.6 Graph of model metrics Let’s make a plot of the model results signi_continuous_pos &lt;- df_univariate_continuous |&gt; filter(conf_int_5 &gt; 1) signi_continuous_neg &lt;- df_univariate_continuous |&gt; filter(conf_int_95 &lt; 1) df_univariate_continuous |&gt; ggplot( aes(x = reorder(as_factor(term), OR), y = OR) ) + geom_point() + geom_pointrange( aes( ymin = conf_int_5, ymax = conf_int_95 ) ) + geom_point(data = signi_continuous_pos, aes(x = reorder(as_factor(term), OR), y = OR), colour = &quot;red&quot;, size = 2 ) + geom_point(data = signi_continuous_neg, aes(x = reorder(as_factor(term), OR), y = OR), colour = &quot;green&quot;, size = 2 ) + xlab(&quot;Variable&quot;) + ylab(&quot;OR&quot;) + geom_hline(yintercept = 1, colour = &#39;darkred&#39;, linetype = &quot;dashed&quot;) + coord_flip() + ggtitle(&quot;Univariate - continuous&quot;) + theme_minimal() -&gt; plot1_univariate_continuous plot1_univariate_continuous ## annotate plot with metrics library(ggplot2) library(dplyr) # Add a significance level column based on p-value df_univariate_continuous &lt;- df_univariate_continuous %&gt;% mutate(significance = case_when( p.value &lt; 0.001 ~ &quot;***&quot;, p.value &lt; 0.01 ~ &quot;**&quot;, p.value &lt; 0.05 ~ &quot;*&quot;, TRUE ~ &quot;&quot; # No asterisk if p-value is not significant )) signi_continuous_pos &lt;- df_univariate_continuous |&gt; filter(conf_int_5 &gt; 1) signi_continuous_neg &lt;- df_univariate_continuous |&gt; filter(conf_int_95 &lt; 1) df_univariate_continuous |&gt; ggplot( aes(x = reorder(as_factor(term), OR), y = OR) ) + geom_point() + geom_pointrange( aes( ymin = conf_int_5, ymax = conf_int_95 ) ) + geom_point(data = signi_continuous_pos, aes(x = reorder(as_factor(term), OR), y = OR), colour = &quot;red&quot;, size = 2 ) + geom_point(data = signi_continuous_neg, aes(x = reorder(as_factor(term), OR), y = OR), colour = &quot;green&quot;, size = 2 ) + geom_text(aes(label = paste(significance), y = OR * 1.0), hjust = 0, vjust = 0, check_overlap = TRUE, size = 4) + xlab(&quot;Variable&quot;) + ylab(&quot;OR&quot;) + geom_hline(yintercept = 1, colour = &#39;darkred&#39;, linetype = &quot;dashed&quot;) + coord_flip() + ggtitle(&quot;Univariate - continuous&quot;) + theme_minimal() -&gt; plot1_univariate_continuous -&gt; plot1_univariate_continuous_annotated plot1_univariate_continuous_annotated 6.7 Relevel dichotomous variables Univariate logistic regression for categorical and dichotomous variables. Set the “1” or “0” of the variable as a reference category. Fitting the univariate logistic regression. Calculating the OR and CI of this model. # Variable &quot;work&quot; imputed_with_attitude_and_chronic$work &lt;- relevel(imputed_with_attitude_and_chronic$work, ref = &quot;1&quot;) model1 &lt;- glm(is_painint_chronic ~ work, data = imputed_with_attitude_and_chronic, family = binomial) OR_work &lt;- exp(coef(model1)) CI_work &lt;- exp(confint(model1)) ## Waiting for profiling to be done... print(OR_work) ## (Intercept) work2 ## 0.09012876 2.95873016 print(CI_work) ## 2.5 % 97.5 % ## (Intercept) 0.06476482 0.1219859 ## work2 1.62175793 5.2614647 # Variable &quot;Education_level&quot; imputed_with_attitude_and_chronic$education_level &lt;- relevel(imputed_with_attitude_and_chronic$education_level, ref = &quot;1&quot;) model2 &lt;- glm(is_painint_chronic ~ education_level, data = imputed_with_attitude_and_chronic, family = binomial) OR_education_level &lt;- exp(coef(model2)) CI_education_level &lt;- exp(confint(model2)) ## Waiting for profiling to be done... print(OR_education_level) ## (Intercept) education_level0 ## 0.1058824 1.1557886 print(CI_education_level) ## 2.5 % 97.5 % ## (Intercept) 0.06960165 0.1543606 ## education_level0 0.68231415 1.9770643 # Variable &quot;recurrence&quot; imputed_with_attitude_and_chronic$recurrence &lt;- relevel(imputed_with_attitude_and_chronic$recurrence, ref = &quot;1&quot;) model3 &lt;- glm(is_painint_chronic ~ recurrence, data = imputed_with_attitude_and_chronic, family = binomial) OR_recurrence &lt;- exp(coef(model3)) CI_recurrence &lt;- exp(confint(model3)) ## Waiting for profiling to be done... print(OR_recurrence) ## (Intercept) recurrence2 ## 0.1061453 1.1190753 print(CI_recurrence) ## 2.5 % 97.5 % ## (Intercept) 0.06400102 0.1656877 ## recurrence2 0.64242847 2.0165613 # Variable - pain in different body regions imputed_with_attitude_and_chronic$pidbr &lt;- relevel(imputed_with_attitude_and_chronic$pidbr, ref = &quot;1&quot;) model4 &lt;- glm(is_painint_chronic ~ pidbr, data = imputed_with_attitude_and_chronic, family = binomial) OR_pidbr &lt;- exp(coef(model4)) CI_pidbr &lt;- exp(confint(model4)) ## Waiting for profiling to be done... print(OR_pidbr) ## (Intercept) pidbr2 ## 0.055000 2.719275 print(CI_pidbr) ## 2.5 % 97.5 % ## (Intercept) 0.02818785 0.09603279 ## pidbr2 1.43692355 5.60887542 # Variable &quot;headache&quot; imputed_with_attitude_and_chronic$headache &lt;- relevel(imputed_with_attitude_and_chronic$headache, ref = &quot;1&quot;) model5 &lt;- glm(is_painint_chronic ~ headache, data = imputed_with_attitude_and_chronic, family = binomial) OR_headache &lt;- exp(coef(model5)) CI_headache &lt;- exp(confint(model5)) ## Waiting for profiling to be done... print(OR_headache) ## (Intercept) headache2 headache3 ## 0.05957447 2.99496147 1.29120879 print(CI_headache) ## 2.5 % 97.5 % ## (Intercept) 0.03313328 0.09821967 ## headache2 1.63503675 5.80948533 ## headache3 0.40522908 3.51473465 # Variable &quot;sex&quot; imputed_with_attitude_and_chronic$sex &lt;- relevel(imputed_with_attitude_and_chronic$sex, ref = &quot;1&quot;) model6 &lt;- glm(is_painint_chronic ~ sex, data = imputed_with_attitude_and_chronic, family = binomial) OR_sex &lt;- exp(coef(model6)) CI_sex &lt;- exp(confint(model6)) ## Waiting for profiling to be done... print(OR_sex) ## (Intercept) sex2 ## 0.07291667 1.88620549 print(CI_sex) ## 2.5 % 97.5 % ## (Intercept) 0.04044007 0.1207022 ## sex2 1.03994691 3.6326504 # Variable &quot;Work_happiness&quot; imputed_with_attitude_and_chronic$work_happiness &lt;- relevel(imputed_with_attitude_and_chronic$work_happiness, ref = &quot;1&quot;) model7 &lt;- glm(is_painint_chronic ~ work_happiness, data = imputed_with_attitude_and_chronic, family = binomial) OR_work_happiness &lt;- exp(coef(model7)) CI_work_happiness &lt;- exp(confint(model7)) ## Waiting for profiling to be done... print(OR_work_happiness) ## (Intercept) work_happiness2 work_happiness3 ## 0.09803922 0.65504587 2.72000000 print(CI_work_happiness) ## 2.5 % 97.5 % ## (Intercept) 0.06807407 0.1365982 ## work_happiness2 0.26069153 1.4324050 ## work_happiness3 1.46836240 4.9348410 # Variable &quot;posture_work&quot; imputed_with_attitude_and_chronic$posture_work &lt;- relevel(imputed_with_attitude_and_chronic$posture_work, ref = &quot;1&quot;) model8 &lt;- glm(is_painint_chronic ~ posture_work, data = imputed_with_attitude_and_chronic, family = binomial) OR_posture_work &lt;- exp(coef(model8)) CI_posture_work &lt;- exp(confint(model8)) ## Waiting for profiling to be done... print(OR_posture_work) ## (Intercept) posture_work2 posture_work3 ## 0.08379888 1.32592593 3.18222222 print(CI_posture_work) ## 2.5 % 97.5 % ## (Intercept) 0.05653886 0.1194222 ## posture_work2 0.63368447 2.6177321 ## posture_work3 1.69613786 5.8757114 # Variable &quot;work_satisfaction&quot; imputed_with_attitude_and_chronic$work_satisfaction &lt;- relevel(imputed_with_attitude_and_chronic$work_satisfaction, ref = &quot;1&quot;) model9 &lt;- glm(is_painint_chronic ~ work_satisfaction, data = imputed_with_attitude_and_chronic, family = binomial) OR_work_satisfaction &lt;- exp(coef(model9)) CI_work_satisfaction &lt;- exp(confint(model9)) ## Waiting for profiling to be done... print(OR_work_satisfaction) ## (Intercept) work_satisfaction2 work_satisfaction3 ## 0.09448819 0.74705882 2.82222222 print(CI_work_satisfaction) ## 2.5 % 97.5 % ## (Intercept) 0.06599362 0.1309863 ## work_satisfaction2 0.27609334 1.7080924 ## work_satisfaction3 1.52768147 5.1022741 # Variable &quot;physical Activity&quot; imputed_with_attitude_and_chronic$physical_activity &lt;- relevel(imputed_with_attitude_and_chronic$physical_activity, ref = &quot;0&quot;) model10 &lt;- glm(is_painint_chronic ~ physical_activity, data = imputed_with_attitude_and_chronic, family = binomial) OR_physical_activity &lt;- exp(coef(model10)) CI_physical_activity &lt;- exp(confint(model10)) ## Waiting for profiling to be done... print(OR_physical_activity) ## (Intercept) physical_activity1 ## 0.100000 1.231672 print(CI_physical_activity) ## 2.5 % 97.5 % ## (Intercept) 0.0611943 0.1542119 ## physical_activity1 0.7119442 2.1964490 # Variable &quot;smoking&quot; imputed_with_attitude_and_chronic$smoking &lt;- relevel(imputed_with_attitude_and_chronic$smoking, ref = &quot;1&quot;) model11 &lt;- glm(is_painint_chronic ~ smoking, data = imputed_with_attitude_and_chronic, family = binomial) OR_smoking &lt;- exp(coef(model11)) CI_smoking &lt;- exp(confint(model11)) ## Waiting for profiling to be done... print(OR_smoking) ## (Intercept) smoking2 ## 0.1039501 1.9240000 print(CI_smoking) ## 2.5 % 97.5 % ## (Intercept) 0.07674972 0.1375884 ## smoking2 0.93299869 3.7113889 # Variable &quot;alcohol&quot; imputed_with_attitude_and_chronic$alcohol &lt;- relevel(imputed_with_attitude_and_chronic$alcohol, ref = &quot;1&quot;) model12 &lt;- glm(is_painint_chronic ~ alcohol, data = imputed_with_attitude_and_chronic, family = binomial) OR_alcohol &lt;- exp(coef(model12)) CI_alcohol &lt;- exp(confint(model12)) ## Waiting for profiling to be done... print(OR_alcohol) ## (Intercept) alcohol2 ## 0.1517857 0.6910736 print(CI_alcohol) ## 2.5 % 97.5 % ## (Intercept) 0.08795751 0.2456099 ## alcohol2 0.38745282 1.2836914 # Variable &quot;sleep quality&quot; imputed_with_attitude_and_chronic$sleep_quality &lt;- relevel(imputed_with_attitude_and_chronic$sleep_quality, ref = &quot;0&quot;) model13 &lt;- glm(is_painint_chronic ~ sleep_quality, data = imputed_with_attitude_and_chronic, family = binomial) OR_sleep_quality &lt;- exp(coef(model13)) CI_sleep_quality &lt;- exp(confint(model13)) ## Waiting for profiling to be done... print(OR_sleep_quality) ## (Intercept) sleep_quality1 ## 0.09243697 1.30741060 print(CI_sleep_quality) ## 2.5 % 97.5 % ## (Intercept) 0.04696702 0.1635109 ## sleep_quality1 0.68450097 2.7150269 # Variable &quot;coping&quot; imputed_with_attitude_and_chronic$coping &lt;- relevel(imputed_with_attitude_and_chronic$coping, ref = &quot;0&quot;) model14 &lt;- glm(is_painint_chronic ~ coping, data = imputed_with_attitude_and_chronic, family = binomial) OR_coping &lt;- exp(coef(model14)) CI_coping &lt;- exp(confint(model14)) ## Waiting for profiling to be done... print(OR_coping) ## (Intercept) coping1 ## 0.09909911 1.19682862 print(CI_coping) ## 2.5 % 97.5 % ## (Intercept) 0.05027562 0.1756983 ## coping1 0.62546659 2.4886925 # Variable &quot;attitude&quot; model15 &lt;- glm(is_painint_chronic ~ attitude, data = imputed_with_attitude_and_chronic, family = binomial) OR_attitude &lt;- exp(coef(model15)) CI_attitude &lt;- exp(confint(model15)) ## Waiting for profiling to be done... print(OR_attitude) ## (Intercept) attitude ## 0.1393033 0.9048630 print(CI_attitude) ## 2.5 % 97.5 % ## (Intercept) 0.04214516 0.4017094 ## attitude 0.49543972 1.7361149 6.8 Refactor code above to a more compact version # Your named vector of reference levels reference_levels &lt;- c(work = &quot;1&quot;, education_level = &quot;1&quot;, recurrence = &quot;1&quot;, pidbr = &quot;1&quot;, headache = &quot;1&quot;, sex = &quot;1&quot;, work_happiness = &quot;1&quot;, posture_work = &quot;1&quot;, work_satisfaction = &quot;1&quot;, physical_activity = &quot;0&quot;, # Note that this is set to &quot;0&quot; smoking = &quot;1&quot;, alcohol = &quot;1&quot;, sleep_quality = &quot;0&quot;, # Note that this is set to &quot;0&quot; coping = &quot;0&quot;) # Note that this is set to &quot;0&quot; # Ensure all relevant variables are factors imputed_with_attitude_and_chronic[ names(reference_levels) ] &lt;- lapply(imputed_with_attitude_and_chronic[ names(reference_levels) ], as.factor) # subset data for categorical variables only data_categorical &lt;- imputed_with_attitude_and_chronic |&gt; dplyr::select(names(reference_levels)) # Iterate over the variables using map() and relevel data_categorical &lt;- data_categorical %&gt;% purrr::map2_df(., reference_levels, ~relevel(.x, ref = .y)) data_categorical$is_painint_chronic &lt;- imputed_with_attitude_and_chronic$is_painint_chronic 6.9 Univariate analysis on the categorical variables df_univariate_categorical &lt;- map_df( .x = names(reference_levels), .f = univariate_analysis, data = data_categorical ) df_univariate_categorical ## # A tibble: 18 × 8 ## term estimate std.error statistic p.value conf_int_5 OR conf_int_95 ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 work2 1.08 0.299 3.63 2.83e-4 1.65 2.96 5.31 ## 2 education_… 0.145 0.270 0.536 5.92e-1 0.681 1.16 1.96 ## 3 recurrence2 0.113 0.290 0.388 6.98e-1 0.634 1.12 1.98 ## 4 pidbr2 1.00 0.344 2.91 3.65e-3 1.39 2.72 5.34 ## 5 headache2 1.10 0.321 3.42 6.34e-4 1.60 2.99 5.62 ## 6 headache3 0.256 0.540 0.474 6.36e-1 0.448 1.29 3.72 ## 7 sex2 0.635 0.317 2.00 4.51e-2 1.01 1.89 3.51 ## 8 work_happi… -0.423 0.428 -0.988 3.23e-1 0.283 0.655 1.52 ## 9 work_happi… 1.00 0.308 3.25 1.15e-3 1.49 2.72 4.97 ## 10 posture_wo… 0.282 0.359 0.786 4.32e-1 0.656 1.33 2.68 ## 11 posture_wo… 1.16 0.315 3.67 2.42e-4 1.72 3.18 5.90 ## 12 work_satis… -0.292 0.457 -0.638 5.23e-1 0.305 0.747 1.83 ## 13 work_satis… 1.04 0.306 3.39 7.02e-4 1.55 2.82 5.14 ## 14 physical_a… 0.208 0.286 0.729 4.66e-1 0.703 1.23 2.16 ## 15 smoking2 0.654 0.349 1.87 6.11e-2 0.970 1.92 3.82 ## 16 alcohol2 -0.370 0.304 -1.22 2.24e-1 0.381 0.691 1.25 ## 17 sleep_qual… 0.268 0.348 0.770 4.41e-1 0.661 1.31 2.59 ## 18 coping1 0.180 0.349 0.515 6.07e-1 0.604 1.20 2.37 6.10 Visualize model outcome signi_categorical_pos &lt;- df_univariate_categorical |&gt; filter(conf_int_5 &gt; 1) signi_categorical_neg &lt;- df_univariate_categorical |&gt; filter(conf_int_95 &lt; 1) df_univariate_categorical |&gt; ggplot( aes(x = reorder(as_factor(term), OR), y = OR) ) + geom_point() + geom_pointrange( aes( ymin = conf_int_5, ymax = conf_int_95 ) ) + geom_point(data = signi_categorical_pos, aes(x = reorder(as_factor(term), OR), y = OR), colour = &quot;green&quot;, size = 2 ) + geom_point(data = signi_categorical_neg, aes(x = reorder(as_factor(term), OR), y = OR), colour = &quot;red&quot;, size = 2 ) + xlab(&quot;Variable&quot;) + ylab(&quot;OR&quot;) + ggtitle(&quot;Univariate - categorical&quot;) + geom_hline(yintercept = 1, colour = &#39;darkred&#39;, linetype = &quot;dashed&quot;) + coord_flip() -&gt; plot2_univariate_categorical plot2_univariate_categorical ## annotate plot with * for significance # Add a significance level column based on p-value df_univariate_categorical &lt;- df_univariate_categorical %&gt;% mutate(significance = case_when( p.value &lt; 0.001 ~ &quot;***&quot;, p.value &lt; 0.01 ~ &quot;**&quot;, p.value &lt; 0.05 ~ &quot;*&quot;, TRUE ~ &quot;&quot; # No asterisk if p-value is not significant )) signi_continuous_pos &lt;- df_univariate_categorical |&gt; filter(conf_int_5 &gt; 1) signi_continuous_neg &lt;- df_univariate_categorical |&gt; filter(conf_int_95 &lt; 1) df_univariate_categorical |&gt; ggplot( aes(x = reorder(as_factor(term), OR), y = OR) ) + geom_point() + geom_pointrange( aes( ymin = conf_int_5, ymax = conf_int_95 ) ) + geom_point(data = signi_categorical_pos, aes(x = reorder(as_factor(term), OR), y = OR), colour = &quot;red&quot;, size = 2 ) + geom_point(data = signi_categorical_neg, aes(x = reorder(as_factor(term), OR), y = OR), colour = &quot;green&quot;, size = 2 ) + geom_text(aes(label = paste(significance), y = OR * 1.0), hjust = 0, vjust = 0, check_overlap = TRUE, size = 4) + xlab(&quot;Variable&quot;) + ylab(&quot;OR&quot;) + geom_hline(yintercept = 1, colour = &#39;darkred&#39;, linetype = &quot;dashed&quot;) + coord_flip() + ggtitle(&quot;Univariate - categorical&quot;) + theme_minimal() -&gt; plot2_univariate_categorical_annotated plot2_univariate_categorical_annotated 6.11 Panel plot univariate cowplot::plot_grid( plotlist = list( plot1_univariate_continuous_annotated + painr::theme_individual(), plot2_univariate_categorical_annotated + painr::theme_individual()) ) 6.12 Multivariable logistic regression analyses Due to multicollinearity in the work-related factors (happiness, satisfaction, and posture -&gt; leading to the outcome “3” = not working), a decision had to be made on which factor to include. We analysed different models with the individual work-related factors included. There was almost no difference in model performance. Because happiness and satisfaction align more with the other psychological factors, we have chosen to include the variable “posture_work”, thereby incorporating add different domain into our model for the final backward model analyses and internal validation. The candidate prognostic factor “attitude” does not have predictive value in het univariate analysis and does not emerge in the multivariate analysis in the formula with all the variables included. Additionally, there are many missing values, which cannot be imputed, as they pertain to the the therapist’s attitude. We now excluding this variable from the complete model development because internal validation does not proceed with these variables included. naniar::vis_miss(imputed_with_attitude_and_chronic) new_data &lt;- imputed_with_attitude_and_chronic |&gt; dplyr::select(-attitude) sum(is.na(new_data)) ## [1] 0 full_model &lt;- glm(data = imputed_with_attitude_and_chronic, is_painint_chronic ~ sex + age + pain_intensity + duration + pidbr + headache + disability + posture_work + physical_activity + smoking + alcohol + bmi + sleep_quality + catastrophizing + duration_beliefs + concerns + treatment_beliefs + depression + kinesiophobia + distress + coping + identity_beliefs + hypervigilance + self_efficacy + relation, family = &quot;binomial&quot;) summary(full_model) ## ## Call: ## glm(formula = is_painint_chronic ~ sex + age + pain_intensity + ## duration + pidbr + headache + disability + posture_work + ## physical_activity + smoking + alcohol + bmi + sleep_quality + ## catastrophizing + duration_beliefs + concerns + treatment_beliefs + ## depression + kinesiophobia + distress + coping + identity_beliefs + ## hypervigilance + self_efficacy + relation, family = &quot;binomial&quot;, ## data = imputed_with_attitude_and_chronic) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -7.856997 2.014554 -3.900 9.61e-05 *** ## sex2 0.621459 0.381164 1.630 0.103012 ## age 0.007465 0.011387 0.656 0.512097 ## pain_intensity 0.257560 0.115333 2.233 0.025537 * ## duration 0.055364 0.053130 1.042 0.297391 ## pidbr2 0.809406 0.399367 2.027 0.042691 * ## headache2 0.961491 0.380336 2.528 0.011471 * ## headache3 -0.017406 0.611967 -0.028 0.977309 ## disability 0.037170 0.091565 0.406 0.684787 ## posture_work2 0.705919 0.421910 1.673 0.094297 . ## posture_work3 1.523283 0.433345 3.515 0.000439 *** ## physical_activity1 0.164670 0.348018 0.473 0.636095 ## smoking2 0.563160 0.418249 1.346 0.178151 ## alcohol2 -0.302294 0.368041 -0.821 0.411441 ## bmi 0.019959 0.036600 0.545 0.585528 ## sleep_quality1 -0.503916 0.421602 -1.195 0.231993 ## catastrophizing -0.057224 0.048013 -1.192 0.233326 ## duration_beliefs 0.238992 0.065878 3.628 0.000286 *** ## concerns 0.183421 0.083870 2.187 0.028745 * ## treatment_beliefs -0.219190 0.098053 -2.235 0.025389 * ## depression 0.017426 0.065927 0.264 0.791528 ## kinesiophobia -0.007644 0.039061 -0.196 0.844841 ## distress 0.113553 0.056189 2.021 0.043290 * ## coping1 0.459219 0.429294 1.070 0.284751 ## identity_beliefs -0.163266 0.075735 -2.156 0.031102 * ## hypervigilance 0.007581 0.016849 0.450 0.652743 ## self_efficacy 0.137327 0.085300 1.610 0.107416 ## relation -0.060274 0.123675 -0.487 0.626003 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 399.47 on 602 degrees of freedom ## Residual deviance: 292.30 on 575 degrees of freedom ## AIC: 348.3 ## ## Number of Fisher Scoring iterations: 6 #full_model_mterics_df &lt;- full_model |&gt; broom::tidy() #full_model_mterics_df &lt;- full_model_mterics_df |&gt; ## Run a tidy version of the full model #&#39; @title Run an univariate model for all continuous variables in the data #&#39; @param variable Name of variable as a character string #&#39; @param data Dataset &#39;imputed_with_attitude_and_chronic&#39; #&#39; @export multivariate_analysis &lt;- function( data, z_score = 1.96, conf_int = 95) { full_model &lt;- glm( data = data, is_painint_chronic ~ sex + age + pain_intensity + duration + pidbr + headache + disability + posture_work + physical_activity + smoking + alcohol + bmi + sleep_quality + catastrophizing + duration_beliefs + concerns + treatment_beliefs + depression + kinesiophobia + distress + coping + identity_beliefs + hypervigilance + self_efficacy + relation, family = &quot;binomial&quot;) conf_int_upper_limit = paste0(&quot;conf_int_&quot;, conf_int) conf_int_lower_limit = paste0(&quot;conf_int_&quot;, (100-conf_int)) # get model meterics with broom full_model |&gt; broom::tidy() |&gt; mutate( conf_int_lower = exp(estimate - z_score * std.error), OR = exp(estimate), conf_int_upper = exp( estimate + z_score * std.error)) -&gt; df names(df)[c(6,8)] &lt;- c(conf_int_lower_limit, conf_int_upper_limit) df # remove Intercept term df &lt;- df[-1,] return(df) } ## full model full_model_tidy &lt;- multivariate_analysis( data = imputed_with_attitude_and_chronic ) full_model_tidy &lt;- full_model_tidy %&gt;% mutate(significance = case_when( p.value &lt; 0.001 ~ &quot;***&quot;, p.value &lt; 0.01 ~ &quot;**&quot;, p.value &lt; 0.05 ~ &quot;*&quot;, TRUE ~ &quot;&quot; # No asterisk if p-value is not significant )) ## Visualize signi_full_pos &lt;- full_model_tidy |&gt; filter(conf_int_5 &gt; 1) signi_full_neg &lt;- full_model_tidy |&gt; filter(conf_int_95 &lt; 1) full_model_tidy |&gt; ggplot( aes(x = reorder(as_factor(term), OR), y = OR) ) + geom_point() + geom_pointrange( aes( ymin = conf_int_5, ymax = conf_int_95 ) ) + geom_point(data = signi_full_pos, aes(x = reorder(as_factor(term), OR), y = OR), colour = &quot;green&quot;, size = 2 ) + geom_point(data = signi_full_neg, aes(x = reorder(as_factor(term), OR), y = OR), colour = &quot;red&quot;, size = 2 ) + xlab(&quot;Variable&quot;) + ylab(&quot;OR&quot;) + ggtitle(&quot;Multivariate&quot;) + geom_hline(yintercept = 1, colour = &#39;darkred&#39;, linetype = &quot;dashed&quot;) + coord_flip() -&gt; plot3_multivariate plot3_multivariate 6.13 Backward model ## Backward model backward_model &lt;- stepAIC(full_model, direction = &quot;backward&quot;) ## Start: AIC=348.3 ## is_painint_chronic ~ sex + age + pain_intensity + duration + ## pidbr + headache + disability + posture_work + physical_activity + ## smoking + alcohol + bmi + sleep_quality + catastrophizing + ## duration_beliefs + concerns + treatment_beliefs + depression + ## kinesiophobia + distress + coping + identity_beliefs + hypervigilance + ## self_efficacy + relation ## ## Df Deviance AIC ## - kinesiophobia 1 292.34 346.34 ## - depression 1 292.37 346.37 ## - disability 1 292.47 346.47 ## - hypervigilance 1 292.51 346.51 ## - physical_activity 1 292.53 346.53 ## - relation 1 292.54 346.54 ## - bmi 1 292.60 346.60 ## - age 1 292.74 346.73 ## - alcohol 1 292.96 346.96 ## - duration 1 293.38 347.38 ## - coping 1 293.50 347.50 ## - sleep_quality 1 293.68 347.68 ## - catastrophizing 1 293.76 347.76 ## - smoking 1 294.03 348.03 ## &lt;none&gt; 292.30 348.30 ## - sex 1 295.09 349.09 ## - self_efficacy 1 295.18 349.18 ## - distress 1 296.31 350.31 ## - pidbr 1 296.80 350.80 ## - identity_beliefs 1 297.05 351.05 ## - treatment_beliefs 1 297.10 351.10 ## - concerns 1 297.26 351.26 ## - pain_intensity 1 297.61 351.61 ## - headache 2 301.00 353.00 ## - posture_work 2 305.61 357.61 ## - duration_beliefs 1 306.05 360.05 ## ## Step: AIC=346.34 ## is_painint_chronic ~ sex + age + pain_intensity + duration + ## pidbr + headache + disability + posture_work + physical_activity + ## smoking + alcohol + bmi + sleep_quality + catastrophizing + ## duration_beliefs + concerns + treatment_beliefs + depression + ## distress + coping + identity_beliefs + hypervigilance + self_efficacy + ## relation ## ## Df Deviance AIC ## - depression 1 292.40 344.40 ## - disability 1 292.49 344.49 ## - hypervigilance 1 292.52 344.52 ## - physical_activity 1 292.56 344.56 ## - relation 1 292.57 344.57 ## - bmi 1 292.64 344.64 ## - age 1 292.75 344.75 ## - alcohol 1 293.00 345.00 ## - duration 1 293.40 345.40 ## - coping 1 293.51 345.51 ## - sleep_quality 1 293.74 345.74 ## - catastrophizing 1 293.99 345.99 ## - smoking 1 294.15 346.15 ## &lt;none&gt; 292.34 346.34 ## - sex 1 295.19 347.19 ## - self_efficacy 1 295.42 347.42 ## - distress 1 296.34 348.34 ## - pidbr 1 296.98 348.98 ## - identity_beliefs 1 297.06 349.06 ## - treatment_beliefs 1 297.19 349.19 ## - concerns 1 297.27 349.27 ## - pain_intensity 1 297.81 349.81 ## - headache 2 301.18 351.18 ## - posture_work 2 305.65 355.65 ## - duration_beliefs 1 306.05 358.05 ## ## Step: AIC=344.4 ## is_painint_chronic ~ sex + age + pain_intensity + duration + ## pidbr + headache + disability + posture_work + physical_activity + ## smoking + alcohol + bmi + sleep_quality + catastrophizing + ## duration_beliefs + concerns + treatment_beliefs + distress + ## coping + identity_beliefs + hypervigilance + self_efficacy + ## relation ## ## Df Deviance AIC ## - disability 1 292.54 342.54 ## - hypervigilance 1 292.58 342.58 ## - physical_activity 1 292.61 342.61 ## - relation 1 292.66 342.66 ## - bmi 1 292.71 342.71 ## - age 1 292.81 342.81 ## - alcohol 1 293.07 343.07 ## - duration 1 293.50 343.50 ## - coping 1 293.53 343.53 ## - sleep_quality 1 293.79 343.78 ## - catastrophizing 1 294.01 344.01 ## - smoking 1 294.28 344.28 ## &lt;none&gt; 292.40 344.40 ## - sex 1 295.19 345.19 ## - self_efficacy 1 295.48 345.48 ## - identity_beliefs 1 297.06 347.06 ## - pidbr 1 297.10 347.09 ## - treatment_beliefs 1 297.20 347.21 ## - concerns 1 297.28 347.28 ## - pain_intensity 1 297.81 347.81 ## - headache 2 301.45 349.45 ## - distress 1 300.69 350.69 ## - posture_work 2 305.95 353.95 ## - duration_beliefs 1 306.15 356.15 ## ## Step: AIC=342.54 ## is_painint_chronic ~ sex + age + pain_intensity + duration + ## pidbr + headache + posture_work + physical_activity + smoking + ## alcohol + bmi + sleep_quality + catastrophizing + duration_beliefs + ## concerns + treatment_beliefs + distress + coping + identity_beliefs + ## hypervigilance + self_efficacy + relation ## ## Df Deviance AIC ## - hypervigilance 1 292.73 340.73 ## - physical_activity 1 292.75 340.75 ## - relation 1 292.78 340.78 ## - bmi 1 292.88 340.88 ## - age 1 292.93 340.93 ## - alcohol 1 293.24 341.24 ## - coping 1 293.67 341.67 ## - duration 1 293.67 341.67 ## - sleep_quality 1 293.86 341.86 ## - catastrophizing 1 294.06 342.06 ## - smoking 1 294.35 342.35 ## &lt;none&gt; 292.54 342.54 ## - sex 1 295.26 343.26 ## - self_efficacy 1 295.51 343.51 ## - identity_beliefs 1 297.15 345.15 ## - pidbr 1 297.18 345.18 ## - treatment_beliefs 1 297.43 345.43 ## - concerns 1 297.56 345.56 ## - pain_intensity 1 299.29 347.29 ## - headache 2 301.68 347.68 ## - distress 1 301.42 349.42 ## - posture_work 2 305.95 351.95 ## - duration_beliefs 1 306.38 354.38 ## ## Step: AIC=340.73 ## is_painint_chronic ~ sex + age + pain_intensity + duration + ## pidbr + headache + posture_work + physical_activity + smoking + ## alcohol + bmi + sleep_quality + catastrophizing + duration_beliefs + ## concerns + treatment_beliefs + distress + coping + identity_beliefs + ## self_efficacy + relation ## ## Df Deviance AIC ## - physical_activity 1 292.96 338.96 ## - relation 1 292.96 338.97 ## - bmi 1 293.10 339.09 ## - age 1 293.17 339.17 ## - alcohol 1 293.42 339.42 ## - coping 1 293.80 339.80 ## - duration 1 293.85 339.85 ## - catastrophizing 1 294.06 340.06 ## - sleep_quality 1 294.12 340.12 ## - smoking 1 294.53 340.53 ## &lt;none&gt; 292.73 340.73 ## - sex 1 295.31 341.31 ## - self_efficacy 1 295.77 341.77 ## - identity_beliefs 1 297.19 343.18 ## - pidbr 1 297.21 343.21 ## - treatment_beliefs 1 297.56 343.56 ## - concerns 1 297.63 343.63 ## - pain_intensity 1 299.41 345.41 ## - headache 2 301.85 345.85 ## - distress 1 303.14 349.14 ## - posture_work 2 306.07 350.07 ## - duration_beliefs 1 306.49 352.49 ## ## Step: AIC=338.96 ## is_painint_chronic ~ sex + age + pain_intensity + duration + ## pidbr + headache + posture_work + smoking + alcohol + bmi + ## sleep_quality + catastrophizing + duration_beliefs + concerns + ## treatment_beliefs + distress + coping + identity_beliefs + ## self_efficacy + relation ## ## Df Deviance AIC ## - relation 1 293.23 337.23 ## - bmi 1 293.36 337.36 ## - age 1 293.38 337.38 ## - alcohol 1 293.75 337.76 ## - coping 1 293.94 337.94 ## - duration 1 294.06 338.06 ## - catastrophizing 1 294.30 338.30 ## - sleep_quality 1 294.33 338.33 ## - smoking 1 294.80 338.80 ## &lt;none&gt; 292.96 338.96 ## - sex 1 295.60 339.60 ## - self_efficacy 1 296.15 340.15 ## - identity_beliefs 1 297.51 341.51 ## - treatment_beliefs 1 297.74 341.74 ## - concerns 1 297.78 341.78 ## - pidbr 1 297.88 341.88 ## - pain_intensity 1 299.89 343.89 ## - headache 2 302.03 344.03 ## - distress 1 303.26 347.26 ## - posture_work 2 306.13 348.13 ## - duration_beliefs 1 306.68 350.68 ## ## Step: AIC=337.23 ## is_painint_chronic ~ sex + age + pain_intensity + duration + ## pidbr + headache + posture_work + smoking + alcohol + bmi + ## sleep_quality + catastrophizing + duration_beliefs + concerns + ## treatment_beliefs + distress + coping + identity_beliefs + ## self_efficacy ## ## Df Deviance AIC ## - bmi 1 293.60 335.60 ## - age 1 293.65 335.65 ## - alcohol 1 293.96 335.96 ## - coping 1 294.21 336.21 ## - duration 1 294.25 336.25 ## - sleep_quality 1 294.52 336.52 ## - catastrophizing 1 294.52 336.52 ## - smoking 1 295.12 337.12 ## &lt;none&gt; 293.23 337.23 ## - sex 1 295.83 337.83 ## - self_efficacy 1 296.25 338.25 ## - concerns 1 297.89 339.90 ## - pidbr 1 298.00 340.00 ## - identity_beliefs 1 298.43 340.43 ## - pain_intensity 1 300.03 342.03 ## - headache 2 302.17 342.17 ## - treatment_beliefs 1 301.51 343.51 ## - distress 1 303.46 345.46 ## - posture_work 2 306.53 346.53 ## - duration_beliefs 1 306.99 348.99 ## ## Step: AIC=335.6 ## is_painint_chronic ~ sex + age + pain_intensity + duration + ## pidbr + headache + posture_work + smoking + alcohol + sleep_quality + ## catastrophizing + duration_beliefs + concerns + treatment_beliefs + ## distress + coping + identity_beliefs + self_efficacy ## ## Df Deviance AIC ## - age 1 294.09 334.09 ## - alcohol 1 294.33 334.34 ## - coping 1 294.55 334.55 ## - duration 1 294.66 334.66 ## - catastrophizing 1 294.86 334.86 ## - sleep_quality 1 294.97 334.97 ## - smoking 1 295.54 335.54 ## &lt;none&gt; 293.60 335.60 ## - sex 1 296.15 336.16 ## - self_efficacy 1 296.63 336.63 ## - concerns 1 298.31 338.31 ## - pidbr 1 298.66 338.66 ## - identity_beliefs 1 298.88 338.88 ## - headache 2 302.37 340.37 ## - pain_intensity 1 300.71 340.71 ## - treatment_beliefs 1 301.99 341.99 ## - distress 1 303.78 343.78 ## - posture_work 2 306.88 344.88 ## - duration_beliefs 1 307.00 347.01 ## ## Step: AIC=334.09 ## is_painint_chronic ~ sex + pain_intensity + duration + pidbr + ## headache + posture_work + smoking + alcohol + sleep_quality + ## catastrophizing + duration_beliefs + concerns + treatment_beliefs + ## distress + coping + identity_beliefs + self_efficacy ## ## Df Deviance AIC ## - alcohol 1 294.82 332.82 ## - coping 1 295.12 333.12 ## - duration 1 295.13 333.13 ## - catastrophizing 1 295.51 333.51 ## - sleep_quality 1 295.51 333.51 ## &lt;none&gt; 294.09 334.09 ## - smoking 1 296.12 334.12 ## - sex 1 296.42 334.42 ## - self_efficacy 1 296.92 334.92 ## - pidbr 1 299.05 337.05 ## - concerns 1 299.46 337.46 ## - identity_beliefs 1 299.54 337.54 ## - headache 2 302.61 338.61 ## - pain_intensity 1 301.78 339.78 ## - treatment_beliefs 1 302.81 340.81 ## - distress 1 303.85 341.85 ## - duration_beliefs 1 307.11 345.11 ## - posture_work 2 310.69 346.69 ## ## Step: AIC=332.82 ## is_painint_chronic ~ sex + pain_intensity + duration + pidbr + ## headache + posture_work + smoking + sleep_quality + catastrophizing + ## duration_beliefs + concerns + treatment_beliefs + distress + ## coping + identity_beliefs + self_efficacy ## ## Df Deviance AIC ## - coping 1 295.75 331.75 ## - duration 1 295.99 331.99 ## - catastrophizing 1 296.22 332.22 ## - sleep_quality 1 296.36 332.36 ## &lt;none&gt; 294.82 332.82 ## - smoking 1 296.85 332.85 ## - self_efficacy 1 297.49 333.48 ## - sex 1 297.93 333.93 ## - identity_beliefs 1 299.81 335.81 ## - concerns 1 300.02 336.02 ## - pidbr 1 300.10 336.09 ## - headache 2 303.53 337.53 ## - pain_intensity 1 302.07 338.07 ## - treatment_beliefs 1 303.57 339.57 ## - distress 1 304.64 340.64 ## - duration_beliefs 1 307.56 343.55 ## - posture_work 2 311.81 345.81 ## ## Step: AIC=331.75 ## is_painint_chronic ~ sex + pain_intensity + duration + pidbr + ## headache + posture_work + smoking + sleep_quality + catastrophizing + ## duration_beliefs + concerns + treatment_beliefs + distress + ## identity_beliefs + self_efficacy ## ## Df Deviance AIC ## - duration 1 296.97 330.97 ## - sleep_quality 1 297.34 331.34 ## - catastrophizing 1 297.51 331.51 ## - smoking 1 297.73 331.73 ## &lt;none&gt; 295.75 331.75 ## - self_efficacy 1 298.75 332.76 ## - sex 1 299.15 333.15 ## - concerns 1 300.95 334.95 ## - identity_beliefs 1 300.97 334.97 ## - pidbr 1 300.98 334.98 ## - headache 2 304.17 336.17 ## - pain_intensity 1 303.17 337.17 ## - treatment_beliefs 1 304.69 338.69 ## - distress 1 305.05 339.05 ## - duration_beliefs 1 308.49 342.48 ## - posture_work 2 312.99 344.99 ## ## Step: AIC=330.97 ## is_painint_chronic ~ sex + pain_intensity + pidbr + headache + ## posture_work + smoking + sleep_quality + catastrophizing + ## duration_beliefs + concerns + treatment_beliefs + distress + ## identity_beliefs + self_efficacy ## ## Df Deviance AIC ## - sleep_quality 1 298.33 330.33 ## - smoking 1 298.74 330.74 ## &lt;none&gt; 296.97 330.97 ## - catastrophizing 1 299.09 331.09 ## - self_efficacy 1 300.04 332.04 ## - sex 1 300.20 332.20 ## - pidbr 1 302.16 334.16 ## - concerns 1 302.18 334.18 ## - identity_beliefs 1 302.57 334.57 ## - headache 2 306.05 336.05 ## - pain_intensity 1 304.55 336.55 ## - treatment_beliefs 1 305.75 337.75 ## - distress 1 306.38 338.38 ## - duration_beliefs 1 310.88 342.88 ## - posture_work 2 314.79 344.79 ## ## Step: AIC=330.33 ## is_painint_chronic ~ sex + pain_intensity + pidbr + headache + ## posture_work + smoking + catastrophizing + duration_beliefs + ## concerns + treatment_beliefs + distress + identity_beliefs + ## self_efficacy ## ## Df Deviance AIC ## - smoking 1 300.31 330.31 ## &lt;none&gt; 298.33 330.33 ## - catastrophizing 1 300.38 330.38 ## - sex 1 300.92 330.92 ## - self_efficacy 1 301.21 331.21 ## - pidbr 1 303.45 333.45 ## - concerns 1 303.46 333.46 ## - identity_beliefs 1 303.75 333.75 ## - headache 2 307.06 335.06 ## - pain_intensity 1 306.00 336.00 ## - distress 1 306.87 336.87 ## - treatment_beliefs 1 307.03 337.03 ## - duration_beliefs 1 311.49 341.49 ## - posture_work 2 315.31 343.32 ## ## Step: AIC=330.31 ## is_painint_chronic ~ sex + pain_intensity + pidbr + headache + ## posture_work + catastrophizing + duration_beliefs + concerns + ## treatment_beliefs + distress + identity_beliefs + self_efficacy ## ## Df Deviance AIC ## - catastrophizing 1 302.15 330.15 ## &lt;none&gt; 300.31 330.31 ## - self_efficacy 1 302.93 330.93 ## - sex 1 303.19 331.19 ## - concerns 1 305.14 333.14 ## - pidbr 1 305.82 333.82 ## - identity_beliefs 1 306.00 334.00 ## - headache 2 308.56 334.56 ## - pain_intensity 1 308.70 336.70 ## - treatment_beliefs 1 308.71 336.71 ## - distress 1 309.30 337.30 ## - duration_beliefs 1 313.20 341.20 ## - posture_work 2 317.19 343.19 ## ## Step: AIC=330.15 ## is_painint_chronic ~ sex + pain_intensity + pidbr + headache + ## posture_work + duration_beliefs + concerns + treatment_beliefs + ## distress + identity_beliefs + self_efficacy ## ## Df Deviance AIC ## &lt;none&gt; 302.15 330.15 ## - sex 1 304.88 330.88 ## - concerns 1 305.40 331.40 ## - self_efficacy 1 305.41 331.41 ## - identity_beliefs 1 308.10 334.10 ## - pidbr 1 308.22 334.22 ## - headache 2 310.34 334.34 ## - distress 1 309.57 335.57 ## - pain_intensity 1 309.94 335.94 ## - treatment_beliefs 1 310.91 336.91 ## - duration_beliefs 1 315.02 341.02 ## - posture_work 2 318.64 342.64 summary(backward_model) ## ## Call: ## glm(formula = is_painint_chronic ~ sex + pain_intensity + pidbr + ## headache + posture_work + duration_beliefs + concerns + treatment_beliefs + ## distress + identity_beliefs + self_efficacy, family = &quot;binomial&quot;, ## data = imputed_with_attitude_and_chronic) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -6.65374 1.29837 -5.125 2.98e-07 *** ## sex2 0.56597 0.35162 1.610 0.107479 ## pain_intensity 0.27423 0.10267 2.671 0.007565 ** ## pidbr2 0.88672 0.38035 2.331 0.019736 * ## headache2 0.87757 0.36108 2.430 0.015083 * ## headache3 -0.08510 0.58802 -0.145 0.884935 ## posture_work2 0.46378 0.40024 1.159 0.246551 ## posture_work3 1.58390 0.38480 4.116 3.85e-05 *** ## duration_beliefs 0.22295 0.06336 3.519 0.000434 *** ## concerns 0.13027 0.07322 1.779 0.075225 . ## treatment_beliefs -0.24623 0.08153 -3.020 0.002528 ** ## distress 0.10033 0.03668 2.735 0.006229 ** ## identity_beliefs -0.17109 0.07087 -2.414 0.015765 * ## self_efficacy 0.13188 0.07682 1.717 0.086033 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 399.47 on 602 degrees of freedom ## Residual deviance: 302.15 on 589 degrees of freedom ## AIC: 330.15 ## ## Number of Fisher Scoring iterations: 6 odds_ratios_full &lt;- exp(coef(full_model)) conf_int_full &lt;- confint(full_model, ) ## Waiting for profiling to be done... conf_int_exp_full &lt;- exp(conf_int_full) backward_model$coefficients ## (Intercept) sex2 pain_intensity pidbr2 ## -6.65374041 0.56597427 0.27422649 0.88672239 ## headache2 headache3 posture_work2 posture_work3 ## 0.87757015 -0.08509645 0.46378204 1.58389588 ## duration_beliefs concerns treatment_beliefs distress ## 0.22295285 0.13027246 -0.24622667 0.10032867 ## identity_beliefs self_efficacy ## -0.17109476 0.13188227 model_backward_tidy &lt;- backward_model |&gt; broom::tidy() ## look up calcualtion of OR from estimate and other model metrics odds_ratios &lt;- exp(coef(backward_model)) conf_int &lt;- confint(backward_model, ) ## Waiting for profiling to be done... conf_int_exp &lt;- exp(conf_int) results &lt;- data.frame(OddsRatio = odds_ratios, Lower97_5CI = conf_int_exp[, &quot;2.5 %&quot;], Upper97_5CI = conf_int_exp[, &quot;97.5 %&quot;]) print(results) ## OddsRatio Lower97_5CI Upper97_5CI ## (Intercept) 0.001289191 8.857723e-05 0.01462702 ## sex2 1.761162794 9.028590e-01 3.61370233 ## pain_intensity 1.315512715 1.082763e+00 1.62190191 ## pidbr2 2.427161319 1.190556e+00 5.35031953 ## headache2 2.405048685 1.210661e+00 5.02912669 ## headache3 0.918423699 2.659645e-01 2.77353119 ## posture_work2 1.590076355 7.059536e-01 3.42898788 ## posture_work3 4.873907046 2.290224e+00 10.43194469 ## duration_beliefs 1.249761645 1.105659e+00 1.41867676 ## concerns 1.139138706 9.889557e-01 1.31893284 ## treatment_beliefs 0.781745003 6.659186e-01 0.91872682 ## distress 1.105534217 1.028728e+00 1.18846015 ## identity_beliefs 0.842741709 7.316495e-01 0.96705986 ## self_efficacy 1.140973980 9.893504e-01 1.33839592 ## tidy backward model z_score = 1.96 model_backward_tidy &lt;- model_backward_tidy |&gt; mutate( conf_int_lower = exp(estimate - z_score * std.error), OR = exp(estimate), conf_int_upper = exp( estimate + z_score * std.error)) model_backward_tidy &lt;- model_backward_tidy[-1,] model_backward_tidy &lt;- model_backward_tidy |&gt; rename( conf_int_5 = conf_int_lower, conf_int_95 = conf_int_upper ) model_backward_tidy &lt;- model_backward_tidy %&gt;% mutate(significance = case_when( p.value &lt; 0.001 ~ &quot;***&quot;, p.value &lt; 0.01 ~ &quot;**&quot;, p.value &lt; 0.05 ~ &quot;*&quot;, TRUE ~ &quot;&quot; # No asterisk if p-value is not significant )) 6.14 Visualize backward model signi_backward_pos &lt;- model_backward_tidy |&gt; filter(conf_int_5 &gt; 1) signi_backward_neg &lt;- model_backward_tidy |&gt; filter(conf_int_95 &lt; 1) model_backward_tidy |&gt; ggplot( aes(x = reorder(as_factor(term), OR), y = OR) ) + geom_point() + geom_pointrange( aes( ymin = conf_int_5, ymax = conf_int_95 ) ) + geom_point(data = signi_backward_pos, aes(x = reorder(as_factor(term), OR), y = OR), colour = &quot;green&quot;, size = 2 ) + geom_point(data = signi_backward_neg, aes(x = reorder(as_factor(term), OR), y = OR), colour = &quot;red&quot;, size = 2 ) + xlab(&quot;Variable&quot;) + ylab(&quot;OR&quot;) + ggtitle(&quot;Backward&quot;) + geom_hline(yintercept = 1, colour = &#39;darkred&#39;, linetype = &quot;dashed&quot;) + coord_flip() -&gt; plot4_backward plot4_backward 6.15 Panel plot with all models panel_all_high_res &lt;- cowplot::plot_grid( plot1_univariate_continuous + citrulliner::theme_individual(), plot2_univariate_categorical + citrulliner::theme_individual(), plot4_backward + citrulliner::theme_individual(), labels = c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;), label_size = 30, ncol = 1 ) panel_all &lt;- cowplot::plot_grid( plot1_univariate_continuous, plot2_univariate_categorical, plot4_backward, labels = c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;), nrow = 1 ) panel_all #remotes::install_github( # &quot;uashogeschoolutrecht/citrulliner&quot; #) library(citrulliner) ggsave( filename = here::here( &quot;img&quot;, &quot;all_models.svg&quot;), panel_all_high_res, width = 30, height = 70, units = &quot;cm&quot;, dpi = 300) 6.16 Rework figure labels df_univariate_continuous &lt;- df_univariate_continuous |&gt; mutate( fig = &quot;A&quot; ) df_univariate_categorical &lt;- df_univariate_categorical |&gt; mutate( fig = &quot;B&quot; ) model_backward_tidy &lt;- model_backward_tidy |&gt; mutate( fig = &quot;C&quot; ) results &lt;- dplyr::bind_rows( df_univariate_continuous, df_univariate_categorical, model_backward_tidy ) ## write to disk and edit by hand to relabel #readr::write_csv( # enframe(labels_raw$term), # file = here::here( # &quot;data-raw&quot;, # &quot;labels-relevel.csv&quot; # ) #) ## Read from disk labels_relevel &lt;- read_csv( here::here( &quot;data-raw&quot;, &quot;labels-relevel.csv&quot; ) ) ## Warning: One or more parsing issues, call `problems()` on your data frame for details, ## e.g.: ## dat &lt;- vroom(...) ## problems(dat) ## Rows: 47 Columns: 4 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (3): value, new_name, level ## dbl (1): name ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. ## join with results results$new_labels &lt;- labels_relevel$new_name 6.17 Figures for paper ## plotting function plot_model_results &lt;- function(df_model_tidy, title, ...) { ## significant OR signi_pos &lt;- df_model_tidy |&gt; dplyr::filter(conf_int_5 &gt; 1) signi_neg &lt;- df_model_tidy |&gt; dplyr::filter(conf_int_95 &lt; 1) ## significance (stars for p-value) df_model_tidy &lt;- df_model_tidy %&gt;% mutate(significance = case_when( p.value &lt; 0.001 ~ &quot;***&quot;, p.value &lt; 0.01 ~ &quot;**&quot;, p.value &lt; 0.05 ~ &quot;*&quot;, TRUE ~ &quot;&quot; # No asterisk if p-value is not significant )) ## plot df_model_tidy |&gt; ggplot(aes(x = reorder(as_factor(new_labels), OR), y = OR)) + geom_point() + geom_pointrange(aes(ymin = conf_int_5, ymax = conf_int_95)) + geom_point( data = signi_pos, aes(x = reorder(as_factor(new_labels), OR), y = OR), colour = &quot;red&quot;, size = 2, # shape = 25, fill = &quot;red&quot; ) + geom_point( data = signi_neg, aes(x = reorder(as_factor(new_labels), OR), y = OR), colour = &quot;green&quot;, size = 2, # shape = 24, fill = &quot;green&quot; ) + xlab(NULL) + ylab(&quot;OR&quot;) + ggtitle(title) + geom_hline( yintercept = 1, colour = &#39;darkred&#39;, linetype = &quot;dashed&quot; ) + # geom_text(aes(label = paste(significance), y = OR * 1), ..., check_overlap = TRUE, size = 4) + coord_flip() + painr::theme_individual() -&gt; plot return(plot) } ## nest data to figure results_nested &lt;- results |&gt; group_by(fig) |&gt; nest() plot_model_results( results_nested$data[[3]], title = &quot;test&quot; ) results_nested$titles &lt;- c( &quot;Univariate continuous&quot;, &quot;Univeriate categorical&quot;, &quot;Multivariate backward&quot;) ## add figures plot_A &lt;- plot_model_results( df_model_tidy = results_nested$data[[1]], title = results_nested$titles[[1]], hjust = 0, vjust = 0.05 ) plot_A &lt;- plot_A + painr::theme_individual() plot_A ## add figures data_B &lt;- results_nested$data[[2]] |&gt; dplyr::filter(term != &quot;work_satisfaction3&quot;, term != &quot;work_happiness3&quot;) plot_B &lt;- plot_model_results( df_model_tidy = data_B, title = results_nested$titles[[2]], hjust = 0, vjust = 0.05 ) plot_B &lt;- plot_B + painr::theme_individual() ## add figures plot_C &lt;- plot_model_results( df_model_tidy = results_nested$data[[3]], title = results_nested$titles[[3]], hjust = -1.6, vjust = 0.06 ) plot_C &lt;- plot_C + painr::theme_individual() ## panel panel_1_paper &lt;- cowplot::plot_grid( plotlist = list(plot_A, plot_B), labels = c(&quot;A&quot;, &quot;B&quot;), ncol = 3 ) panel_1_paper ggsave( filename = here::here( &quot;img&quot;, &quot;paper&quot;, &quot;panel_1.svg&quot;), panel_1_paper, width = 60, height = 18, units = &quot;cm&quot;, dpi = 300) ggsave( filename = here::here( &quot;img&quot;, &quot;paper&quot;, &quot;figure_2.svg&quot;), plot_C, width = 18, height = 12, units = &quot;cm&quot;, dpi = 300) 6.18 Adding level info to figure #pak::pkg_install(&quot;ggpubr&quot;) cat_info &lt;- labels_relevel |&gt; na.omit() |&gt; dplyr::select(new_name, level) cat_info_no_dups &lt;- cat_info[!duplicated(cat_info),] |&gt; dplyr::select(new_name, level) |&gt; rename(Variable = new_name, Choice = level) |&gt; arrange(Variable) info_table &lt;- ggtexttable(cat_info_no_dups, rows = NULL, theme = ttheme()) 6.19 GGpubr panel panel_arrange &lt;- ggarrange( plot_A, plot_B, plot_C, info_table, ncol = 4, heights = c(1, 1, 1, 1)) |&gt; ggexport(filename = here::here( &quot;img&quot;, &quot;paper&quot;, &quot;panel_with_table.svg&quot;), width = 17, height = 6, units = &quot;cm&quot;, dpi = 300) ## [1] &quot;/Users/marcteunis/Documents/workspaces/painr/img/paper/panel_with_table%03d.svg&quot; ## file saved to /Users/marcteunis/Documents/workspaces/painr/img/paper/panel_with_table%03d.svg 6.20 Area Under the receiver operating characteristic Curve (AUC) The discriminative ability of the prognostic model will be determined based on the Area Under the receiver operating characteristic Curve (AUC), calibration will be assessed using a calibration plot” ## Prediction of the probabilities based on our model predicted_probs &lt;- predict(backward_model, newdata = imputed_with_attitude_and_chronic, type=&quot;response&quot;) # Calculation and plotting the Area Under the receiver operating # characteristic Curve (AUC). roc_obj &lt;- roc(imputed_with_attitude_and_chronic$is_painint_chronic, predicted_probs) ## Setting levels: control = FALSE, case = TRUE ## Setting direction: controls &lt; cases auc(roc_obj) ## Area under the curve: 0.8589 plot(roc_obj, col = &quot;blue&quot;, lwd = 2) lines(roc_obj, ci = TRUE, col = &quot;red&quot;) ci &lt;- ci.auc(roc_obj) print(ci) ## 95% CI: 0.8195-0.8982 (DeLong) # Add the AUC text(0.7, 0.2, paste(&quot;AUC =&quot;, round(auc(roc_obj), 2)), col = &quot;blue&quot;) # Plotting the calibration curve # Measuring the predicted probability and the observed responses and creating # a dataframe. # Grouping predicted probabilities in deciles and calculation of the # average predicted probabiloty and actual percentage per group and plot the # calibration curve. predicted_probs &lt;- predict(backward_model, newdata = imputed_with_attitude_and_chronic, type = &quot;response&quot;) observed_outcome &lt;- as.numeric(imputed_with_attitude_and_chronic$is_painint_chronic) calibration_data &lt;- data.frame(Predicted = predicted_probs, Observed = observed_outcome) calibration_data &lt;- data.frame(Predicted = predicted_probs, Observed = observed_outcome) calibration_data$PredictedGroup &lt;- cut(calibration_data$Predicted, breaks = seq(0, 1, by = 0.25), include.lowest = TRUE) grouped_data &lt;- aggregate(cbind(Observed, Predicted) ~ PredictedGroup, data = calibration_data, FUN = function(x) c(Mean = mean(x))) names(grouped_data)[2:3] &lt;- c(&quot;Mean_Predicted&quot;, &quot;Mean_Observed&quot;) ## TODO: cleanup calibrarion plot, vierkant maken, schaal x en y as gelijk maken calibration_plot &lt;- ggplot(grouped_data, aes(x = Mean_Predicted, y = Mean_Observed)) + geom_point() + geom_line(data = data.frame(lowess(grouped_data$Mean_Predicted, grouped_data$Mean_Observed)), aes(x = x, y = y), color = &quot;blue&quot;) + geom_abline(intercept = 0, slope = 1, color = &quot;red&quot;, linetype = &quot;dashed&quot;) + labs(x = &quot;Mean Predicted Probability&quot;, y = &quot;Mean Observed Probability&quot;, title = &quot;Calibration Plot&quot;) + theme_minimal() print(calibration_plot) 6.21 Calibration curve Results: The calibration plot (figure X) revealed acceptable alignment for patients not developing chronic pain. However, for patients developing chronic pain, the model tended to overestimate the risk. Despite this, the calibration remained within acceptable limits. 6.22 Formally testing the goodness-of-fit using the Hosmer and Lemeshow. predicted_probs &lt;- predict(backward_model, newdata = imputed_with_attitude_and_chronic, type = &quot;response&quot;) gof &lt;- hoslem.test(imputed_with_attitude_and_chronic$is_painint_chronic, predicted_probs, g = 10) gof |&gt; broom::tidy() ## # A tibble: 1 × 4 ## statistic p.value parameter method ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 8.07 0.427 8 Hosmer and Lemeshow goodness of fit (GOF) test x_sqrd &lt;- gof$statistic[1] p_value_gof &lt;- gof$p.value[1] Results: X-squared = 8.0693394, DF = 8, p-value = 0.4267263 We found a high p-value suggests there’s no statistically significant difference between observed and expected frequencies, indicating that the model fits the data well. The model fit will be quantified as Nagelkerke’s R2 nagelkerkeR2 &lt;- function(model) { LL_0 &lt;- as.numeric(logLik(update(model, .~1))) LL_f &lt;- as.numeric(logLik(model)) R2 &lt;- (1 - exp((2/nrow(model$data))*(LL_0 - LL_f))) / (1 - exp(2*LL_0/nrow(model$data))) return(R2) } nagelkerkeR2(backward_model) ## [1] 0.3076664 Result: R2 0.3076664 Internal validation will be performed using bootstrap resampling to estimate the optimism-corrected AUC and to yield a measure of overfitting (i.e., the shrinkage factor). The shrinkage factor (a constant between 0 and 1) will be used to multiply the regression coefficient by. Generally, regression coefficients (and resulting predictions) are too extreme in case of overfitting, which is counteracted by the shrinking of regression coefficients. set.seed(12345) formula(backward_model) ## is_painint_chronic ~ sex + pain_intensity + pidbr + headache + ## posture_work + duration_beliefs + concerns + treatment_beliefs + ## distress + identity_beliefs + self_efficacy # Respecifying the model with the LRM function and internal validate our model. new_model &lt;- lrm(formula(backward_model), data=imputed_with_attitude_and_chronic, x=TRUE, y=TRUE) validation_result &lt;- validate(new_model, method=&quot;boot&quot;, B=1000) print(validation_result) ## index.orig training test optimism index.corrected n ## Dxy 0.7177 0.7424 0.6776 0.0648 0.6529 1000 ## R2 0.3077 0.3431 0.2745 0.0686 0.2391 1000 ## Intercept 0.0000 0.0000 -0.2660 0.2660 -0.2660 1000 ## Slope 1.0000 1.0000 0.8274 0.1726 0.8274 1000 ## Emax 0.0000 0.0000 0.0946 0.0946 0.0946 1000 ## D 0.1597 0.1804 0.1411 0.0393 0.1204 1000 ## U -0.0033 -0.0033 0.0049 -0.0082 0.0049 1000 ## Q 0.1630 0.1837 0.1362 0.0475 0.1155 1000 ## B 0.0770 0.0734 0.0802 -0.0069 0.0838 1000 ## g 1.9372 2.1388 1.7481 0.3907 1.5465 1000 ## gp 0.1264 0.1324 0.1200 0.0124 0.1140 1000 Calculating of the corrected AUC. Extracting the original and optimism values from the validation result Calculating of the corrected Dxy Converting Dxy to AUC Calculating the corrected AUC original_dxy &lt;- validation_result[&quot;Dxy&quot;, &quot;index.orig&quot;] optimism_dxy &lt;- validation_result[&quot;Dxy&quot;, &quot;optimism&quot;] corrected_dxy &lt;- original_dxy - optimism_dxy print(corrected_dxy) ## [1] 0.6529234 original_auc &lt;- original_dxy / 2 + 0.5 optimism_auc &lt;- optimism_dxy / 2 corrected_auc &lt;- original_auc - optimism_auc print(corrected_auc) ## [1] 0.8264617 Result: the corrected AUC = 0.8264617 The difference from the original AUC was 0.86 on the entire dataset. The corrected is not much lower and the overfitting is therefore relatively low. The model appears to have a robust discriminatory ability. Show the corrected AUC in the figure made earlier. roc_obj &lt;- roc(observed_outcome, predicted_probs) plot(roc_obj, main=“ROC Curve”, col=“blue”, lwd=2) Voeg de originele AUC toe als tekst text(0.3, 0.3, labels=sprintf(“Original AUC: %0.2f”, auc(roc_obj)), adj=c(0,1)) Voeg de gecorrigeerde AUC toe als tekst text(0.3, 0.2, labels=sprintf(“Corrected AUC: %0.2f”, 0.8296583), adj=c(0,1), col=“red”) Multiplying all the coefficients of our model by the shrinkage factor ‘sf’, and estimate the intercept, so that the average estimated probability is equal to the frequency of the outcome. predictiemodel &lt;- round(new_model\\(coef*0.8274, 3) predictiemodel.lp &lt;- cbind(new_model\\)x) %*% predictiemodel[-1] predictiemodel[“Intercept”] &lt;- round(lrm.fit(y=imputed_with_attitude_and_chronic\\(is_painint_chronic, offset=predictiemodel.lp)\\)coef, 3) print (predictiemodel) Checking whether the internally validated model gives the same average estimated probability as the average outcome (calibration in the large) predictiemodel.linearpredictor &lt;- predictiemodel[1] + new_model$x %*% predictiemodel[-1] Calculating the linear predictor for everyone in the database. Creating a function to calculate the risk: 1/(1+exp(-(LP))) Calculating the probability for everyone in the database and average probability. risk &lt;- function(lp) {risk &lt;- 1/(1 + exp(-lp))} risk.predicted &lt;- risk(predictiemodel.linearpredictor) mean(risk.predicted) mean(imputed_with_attitude_and_chronic$is_painint_chronic) Result = 0.1028 and 0.1028. The model is well calibrated in the large. 6.23 Intermezzo - Linear Predictors The patient is a female who reports a pain intensity of 9 on the Numeric Pain Rating Scale (NPRS). She does experience pain in other body regions. Since the onset of neck pain, she has also developed headaches, which were not present before the neck pain. She is currently not working. Her anticipated duration of symptoms is rated as 8 on a 0-10 scale, and she expresses significant concern about her condition, also scoring an 8 on a 0-10 scale. Her confidence in the therapy is high, rated at 9 on a 0-10 scale. She experiences a relatively high level of stress, scoring 18 on a 0-21 scale. She feels that she understands her pain well, rating this understanding as 9 on a 0-10 scale, and a high score in self-efficacy, with a score of 12 on a 0-12 scale. Linear predictor (LP) = -5.782 + (0.468sex[female = 1]) + (0.227pain intensity) + (0.734pain in different body regions) + (0.726headache(s) since the neck pain) + (-0.070headache(s) before the neck pain) + (0.384potential to self-modify posture work) + (1.311work status) + (0.184duration beliefs) + (0.108concerns) + (-0.204treatment beliefs) + (0.083distress) + (-0.142identity beliefs) + (0.109*self-efficacy). Probability of chronicity = 1/(1 + exp(-LP)) Patient X Linear predictor (LP) = -5.782 + (0.4681) + (0.2277) + (0.7341) + (0.7261) + (-0.0700) + (0.3840) + (1.3111) + (0.1848) + (0.1088) + (-0.2049) + (0.08318) + (-0.1429) + (0.109*12) = 1.07 Probability of chronicity = 1/(1 + exp(1.07)) = 74.5% "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
